{"version":3,"file":"ethers.umd.min.js","sources":["../../properties/lib/properties.js","../../properties/lib/events.js","../../properties/lib/storage.js","../../logger/lib/errors.js","../../logger/lib/logger.js","../../logger/lib/_version.js","../../abi/lib/_version.js","../../abi/lib/logger.js","../../abi/lib/fragments.js","../../math/lib/_version.js","../../math/lib/logger.js","../../math/lib/convert.js","../../math/lib/maths.js","../../math/lib/fixednumber.js","../../math/lib/base58.js","../../math/lib/units.js","../../bytes/lib/check.js","../../bytes/lib/_version.js","../../bytes/lib/logger.js","../../bytes/lib/array.js","../../bytes/lib/base64.js","../../bytes/lib/hex.js","../../bytes/lib/data.js","../../bytes/lib/pad.js","../../abi/lib/coders/abstract-coder.js","../../../node_modules/@noble/hashes/esm/utils.js","../../../node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/@noble/hashes/esm/pbkdf2.js","../../../node_modules/@noble/hashes/esm/_sha2.js","../../../node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/@noble/hashes/esm/sha512.js","../../crypto/lib/_version.js","../../crypto/lib/logger.js","../../crypto/lib/crypto-browser.js","../../crypto/lib/hmac.js","../../../node_modules/@noble/hashes/esm/sha3.js","../../crypto/lib/keccak.js","../../../node_modules/@noble/hashes/esm/ripemd160.js","../../crypto/lib/ripemd160.js","../../crypto/lib/pbkdf2.js","../../crypto/lib/random.js","../../../node_modules/@noble/hashes/esm/scrypt.js","../../crypto/lib/scrypt.js","../../crypto/lib/sha2.js","../../crypto/lib/index.js","../../address/lib/_version.js","../../address/lib/logger.js","../../address/lib/address.js","../../rlp/lib/_version.js","../../rlp/lib/logger.js","../../rlp/lib/encode.js","../../rlp/lib/decode.js","../../address/lib/contract-address.js","../../address/lib/checks.js","../../abi/lib/typed.js","../../abi/lib/coders/address.js","../../abi/lib/coders/anonymous.js","../../abi/lib/coders/array.js","../../abi/lib/coders/boolean.js","../../abi/lib/coders/bytes.js","../../abi/lib/coders/fixed-bytes.js","../../abi/lib/coders/null.js","../../abi/lib/coders/number.js","../../strings/lib/_version.js","../../strings/lib/logger.js","../../strings/lib/utf8.js","../../strings/lib/bytes32.js","../../strings/lib/idna.js","../../abi/lib/coders/string.js","../../abi/lib/coders/tuple.js","../../abi/lib/abi-coder.js","../../hash/lib/id.js","../../hash/lib/_version.js","../../hash/lib/logger.js","../../hash/lib/namehash.js","../../hash/lib/message.js","../../hash/lib/typed-data.js","../../abi/lib/interface.js","../../web/lib/_version.js","../../web/lib/logger.js","../../web/lib/response.js","../../web/lib/get-url-browser.js","../../web/lib/request.js","../../web/lib/fetch-data.js","../../providers/lib/_version.js","../../providers/lib/logger.js","../../providers/lib/ens-resolver.js","../../signing-key/lib/_version.js","../../signing-key/lib/logger.js","../../signing-key/lib/signature.js","../../../node_modules/@noble/secp256k1/lib/esm/index.js","../../signing-key/lib/signing-key.js","../../transactions/lib/accesslist.js","../../transactions/lib/_version.js","../../transactions/lib/logger.js","../../transactions/lib/transaction.js","../../providers/lib/provider.js","../../providers/lib/formatter.js","../../providers/lib/plugins-network.js","../../providers/lib/network.js","../../providers/lib/subscriber-polling.js","../../providers/lib/abstract-provider.js","../../providers/lib/abstract-signer.js","../../providers/lib/community.js","../../providers/lib/subscriber-filterid.js","../../providers/lib/provider-jsonrpc.js","../../providers/lib/provider-ankr.js","../../providers/lib/provider-alchemy.js","../../providers/lib/provider-cloudflare.js","../../providers/lib/provider-etherscan.js","../../providers/lib/provider-infura.js","../../providers/lib/provider-pocket.js","../../providers/lib/provider-fallback.js","../../providers/lib/shuffle.js","../../providers/lib/ws-browser.js","../../providers/lib/provider-socket.js","../../providers/lib/provider-websocket.js","../../providers/lib/default-provider.js","../../providers/lib/common-networks.js","../../providers/lib/provider-ipcsocket-browser.js","../../contract/lib/wrappers.js","../../contract/lib/_version.js","../../contract/lib/logger.js","../../contract/lib/contract.js","../../wallet/lib/address.js","../../wordlists/lib/decode-owl.js","../../wordlists/lib/_version.js","../../wordlists/lib/logger.js","../../wordlists/lib/wordlist.js","../../wordlists/lib/wordlist-owl.js","../../wordlists/lib/lang-en.js","../../wallet/lib/logger.js","../../wallet/lib/_version.js","../../wordlists/lib/wordlists-en.js","../../wordlists/lib/wordlist-owla.js","../../wordlists/lib/decode-owla.js","../../wordlists/lib/bit-reader.js","../../wallet/lib/mnemonic.js","../../wallet/lib/base-wallet.js","../../wallet/lib/hdwallet.js","../../../node_modules/aes-js/lib/aes.js","../../../node_modules/aes-js/lib/mode.js","../../../node_modules/aes-js/lib/mode-cbc.js","../../../node_modules/aes-js/lib/mode-cfb.js","../../../node_modules/aes-js/lib/mode-ctr.js","../../wallet/lib/utils.js","../../wallet/lib/json-crowdsale.js","../../../node_modules/aes-js/lib/padding.js","../../../node_modules/aes-js/lib/mode-ofb.js","../../wallet/lib/json-keystore.js","../../wallet/lib/wallet.js","../lib/_version.js"],"sourcesContent":["//import type { BigNumber, BigNumberish } from \"./big-number\";\n//import type { Bytes, BytesLike } from \"./bytes\";\n//import type { Signature, SignatureLike } from \"./signature\";\n/*\nexport type Loose<T> = T extends BigNumber ? BigNumberish:\n                       T extends number ? BigNumberish:\n                       T extends Bytes ? BytesLike:\n                       T extends Signature ? SignatureLike:\n                       T;\nexport type LooseObject<T> = { [P in keyof T]?: Loose<T[P]>; };\n*/\n//export type Deferrable<T> = T | Promise<T>;\n/*\nexport type DeferrableObject<T> = {\n    [ P in keyof T ]: Deferrable<T[P]>\n};\n*/\n/*\nexport type Frozen<T> = Readonly<{\n    [ P in keyof T ]: T[P] extends Freezable<any> ? Frozen<T[P]>: T[P];\n}>;\n\nexport interface Freezable<T> {\n    clone(): T;\n    freeze(): Frozen<T>;\n    isFrozen(): boolean;\n}\n*/\n/*\nconst _data: WeakMap<Data, Uint8Array> = new WeakMap();\n\nexport class Data implements Freezable<Data> {\n    #props: {\n        data: Uint8Array\n    };\n\n    [ index: number ]: number;\n\n    constructor(lengthOrData: number | Uint8Array) {\n        if (typeof(lengthOrData) === \"number\") {\n            _data[this] = new Uint8Array(lengthOrData);\n        } else {\n            _data[this] = lengthOrData;\n        }\n\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                const index = parseInt(String(prop));\n                if (String(index) !== prop) { return Reflect.get(target, prop, receiver); }\n\n                const data = _data[this];\n                if (index < 0 || index > data.length || index % 1) {\n                    throw new Error(\"\");\n                }\n                return data[index];\n            },\n\n            set: (target, prop, value, receiver) => {\n                const index = parseInt(String(prop));\n                if (String(index) !== prop) { return false; }\n\n                if (value < 0 || value > 255 || value % 1) { return false; }\n\n                const data = _data[this];\n                if (index < 0 || index > data.length || index % 1) {\n                    return false;\n                }\n\n                data[index] = value;\n\n                return true;\n            },\n        });\n    }\n\n    toString(): string {\n        return this.slice().toString();\n    }\n\n    slice(): Uint8Array {\n        return _data.get(this).slice();\n    }\n\n    clone(): Data {\n        return new Data(this.slice());\n    }\n\n    freeze(): Frozen<Data> {\n        //Object.freeze(this.#props);\n        return this;\n    }\n\n    isFrozen(): boolean {\n        return Object.isFrozen(this.#props);\n    }\n}\nconst d = new Data(4);\nconsole.log(d.toString());\nd[0] = 45;\nconsole.log(d.toString());\n*/\n/*\nexport type DeferrableObject<T> = {\n    [ P in keyof T ]: Deferrable<T[P]>\n};\n*/\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n/*\nexport type IsCancelled = () => Promise<boolean>;\n\nexport function createPromise<T>(resolve: (isCancelled: IsCancelled, (result: T) => void) => void, reject: (error: Error) => void, isCancelled: IsCancelled): CancellablePromise<T> {\n    let cancelled = false;\n\n    const promise = new Promise((resolve, reject) => {\n        \n    });\n\n    (<CancellablePromise<T>>promise).cancel = function() {\n        cancelled = true;\n    };\n\n    return (<CancellablePromise<T>>promise);\n}\n*/\n/*\nexport class A implements Freezable<A> {\n    foo: number;\n    constructor(foo: number) {\n        this.foo = foo;\n    }\n    freeze(): Frozen<A> {\n        Object.freeze(this);\n        return this;\n    }\n    clone(): A {\n        return new A(this.foo);\n    }\n}\n\nexport class B implements Freezable<B> {\n    a: A;\n    constructor(a: A) {\n        this.a = a;\n    }\n    freeze(): Frozen<B> {\n        this.a.freeze();\n        Object.freeze(this);\n        return this;\n    }\n    clone(): B {\n        return new B(this.a);\n    }\n}\n\nexport function test() {\n    const a = new A(123);\n    const b = new B(a);\n    b.a = new A(234);\n    const b2 = b.freeze();\n    b2.a.foo = 123; // = a;\n}\n*/\nfunction checkType(value, type) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    throw new Error(\"invalid value for type\");\n}\nexport function defineProperties(target, values, types, defaults) {\n    for (let key in values) {\n        let value = values[key];\n        const fallback = (defaults ? defaults[key] : undefined);\n        if (fallback !== undefined) {\n            value = fallback;\n        }\n        else {\n            const type = (types ? types[key] : null);\n            if (type) {\n                checkType(value, type);\n            }\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventPayload_listener;\nimport { defineProperties } from \"./properties.js\";\nexport class EventPayload {\n    constructor(emitter, listener, filter) {\n        _EventPayload_listener.set(this, void 0);\n        __classPrivateFieldSet(this, _EventPayload_listener, listener, \"f\");\n        defineProperties(this, { emitter, filter });\n    }\n    async removeListener() {\n        if (__classPrivateFieldGet(this, _EventPayload_listener, \"f\") == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, __classPrivateFieldGet(this, _EventPayload_listener, \"f\"));\n    }\n}\n_EventPayload_listener = new WeakMap();\n//# sourceMappingURL=events.js.map","export function getStore(store, key) {\n    return store[key];\n}\nexport function setStore(store, key, value) {\n    if (Object.isFrozen(store)) {\n        throw new Error(\"frozen object is immuatable; cannot set \" + key);\n    }\n    store[key] = value;\n}\n//# sourceMappingURL=storage.js.map","//export type TransactionReceipt {\n//}\n/**\n *  try {\n *      // code....\n *  } catch (e) {\n *      if (isError(e, errors.CALL_EXCEPTION)) {\n *          console.log(e.data);\n *      }\n *  }\n */\nexport function isError(error, code) {\n    return (error && error.code === code);\n}\nexport function isCallException(error) {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n/*\nexport function isContractCallException(error: any): error is ContractCallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\") && (<any>error).method;\n}\n*/\n//# sourceMappingURL=errors.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Logger_instances, _Logger_assertIntRange, _Logger_getBytes, _Logger_log;\nimport { version } from \"./_version.js\";\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") {\n            throw new Error(\"bad\");\n        }\n        ;\n        /* c8 ignore stop */\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301);\n            /* c8 ignore start */\n            if (check !== expected) {\n                throw new Error(\"broken\");\n            }\n            /* c8 ignore stop */\n        }\n        accum.push(form);\n    }\n    catch (error) { }\n    return accum;\n}, []);\nfunction defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true, writable: false, value,\n    });\n}\n/*\nenum Censor {\n    OFF = 0,\n    ON = 1,\n    PERMANENT = 2\n};\nlet _censor = Censor.OFF;\n*/\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n// The type of error to use for various error codes\nconst ErrorConstructors = {};\nErrorConstructors.INVALID_ARGUMENT = TypeError;\nErrorConstructors.NUMERIC_FAULT = RangeError;\nErrorConstructors.BUFFER_OVERRUN = RangeError;\nexport class Logger {\n    constructor(version) {\n        _Logger_instances.add(this);\n        defineReadOnly(this, \"version\", version || \"_\");\n    }\n    makeError(message, code, info) {\n        // Errors are being censored\n        //if (_censor === Censor.ON || _censor === Censor.PERMANENT) {\n        //    return this.makeError(\"censored error\", code, <any>{ });\n        //}\n        {\n            const details = [];\n            if (info) {\n                for (const key in info) {\n                    const value = (info[key]);\n                    try {\n                        details.push(key + \"=\" + JSON.stringify(value));\n                    }\n                    catch (error) {\n                        details.push(key + \"=[could not serialize object]\");\n                    }\n                }\n            }\n            details.push(`code=${code}`);\n            details.push(`version=${this.version}`);\n            if (details.length) {\n                message += \" (\" + details.join(\", \") + \")\";\n            }\n        }\n        const create = ErrorConstructors[code] || Error;\n        const error = (new create(message));\n        defineReadOnly(error, \"code\", code);\n        if (info) {\n            for (const key in info) {\n                defineReadOnly(error, key, (info[key]));\n            }\n        }\n        return error;\n    }\n    throwError(message, code, info) {\n        throw this.makeError(message, code, info);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, \"INVALID_ARGUMENT\", {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, info) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code || \"UNKNOWN_ERROR\", info);\n    }\n    assertArgument(condition, message, name, value) {\n        return this.assert(condition, message, \"INVALID_ARGUMENT\", {\n            argument: name,\n            value\n        });\n    }\n    assertIntegerArgument(name, value, lower, upper) {\n        let message = null;\n        if (typeof (value) !== \"number\") {\n            message = \"expected a number\";\n        }\n        else if (!Number.isInteger(value)) {\n            message = \"invalid integer\";\n        }\n        else if ((lower != null && value < lower) || (upper != null && value > upper)) {\n            message = \"value is out of range\";\n        }\n        if (message) {\n            this.throwArgumentError(message, name, value);\n        }\n    }\n    assertSafeUint53(value, message) {\n        this.assertArgument((typeof (value) === \"number\"), \"invalid number\", \"value\", value);\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        const operation = \"assertSafeInteger\";\n        this.assert((value >= 0 && value < 0x1fffffffffffff), message, \"NUMERIC_FAULT\", {\n            operation, fault: \"out-of-safe-range\", value\n        });\n        this.assert((value % 1) === 0, message, \"NUMERIC_FAULT\", {\n            operation, fault: \"non-integer\", value\n        });\n    }\n    assertNormalize(form) {\n        if (_normalizeForms.indexOf(form) === -1) {\n            this.throwError(\"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"String.prototype.normalize\", info: { form }\n            });\n        }\n    }\n    assertPrivate(givenGuard, guard, className = \"\") {\n        if (givenGuard !== guard) {\n            let method = className, operation = \"new\";\n            if (className) {\n                method += \".\";\n                operation += \" \" + className;\n            }\n            this.throwError(`private constructor; use ${method}from* methods`, \"UNSUPPORTED_OPERATION\", {\n                operation\n            });\n        }\n    }\n    assertArgumentCount(count, expectedCount, message = \"\") {\n        if (message) {\n            message = \": \" + message;\n        }\n        this.assert((count >= expectedCount), \"missing arguemnt\" + message, \"MISSING_ARGUMENT\", {\n            count: count,\n            expectedCount: expectedCount\n        });\n        this.assert((count >= expectedCount), \"too many arguemnts\" + message, \"UNEXPECTED_ARGUMENT\", {\n            count: count,\n            expectedCount: expectedCount\n        });\n    }\n    assertInt53(value, operation) {\n        __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_assertIntRange).call(this, \"Int53\", value, operation || \"unknown\", -maxValue);\n    }\n    assertUint53(value, operation) {\n        __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_assertIntRange).call(this, \"Int53\", value, operation || \"unknown\", 0);\n    }\n    assertInteger(value, operation = \"unknown\", min = 0, max = maxValue) {\n        //this.#assertIntRange(\"Int53\", value, operation || \"unknown\", 0);\n    }\n    getBytes(value, name) {\n        return __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_getBytes).call(this, value, name, false);\n    }\n    getBytesCopy(value, name) {\n        return __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_getBytes).call(this, value, name, true);\n    }\n    getNumber(value, name) {\n        switch (typeof (value)) {\n            case \"bigint\":\n                if (value < -maxValue || value > maxValue) {\n                    this.throwArgumentError(\"overflow\", name || \"value\", value);\n                }\n                return Number(value);\n            case \"number\":\n                if (!Number.isInteger(value)) {\n                    this.throwArgumentError(\"underflow\", name || \"value\", value);\n                }\n                else if (value < -maxValue || value > maxValue) {\n                    this.throwArgumentError(\"overflow\", name || \"value\", value);\n                }\n                return value;\n            case \"string\":\n                try {\n                    return this.getNumber(BigInt(value), name);\n                }\n                catch (e) {\n                    this.throwArgumentError(`invalid numeric string: ${e.message}`, name || \"value\", value);\n                }\n        }\n        return this.throwArgumentError(\"invalid numeric value\", name || \"value\", value);\n    }\n    getBigInt(value, name) {\n        switch (typeof (value)) {\n            case \"bigint\": return value;\n            case \"number\":\n                if (!Number.isInteger(value)) {\n                    this.throwArgumentError(\"underflow\", name || \"value\", value);\n                }\n                else if (value < -maxValue || value > maxValue) {\n                    this.throwArgumentError(\"overflow\", name || \"value\", value);\n                }\n                return BigInt(value);\n            case \"string\":\n                try {\n                    return BigInt(value);\n                }\n                catch (e) {\n                    this.throwArgumentError(`invalid BigNumberish string: ${e.message}`, name || \"value\", value);\n                }\n        }\n        return this.throwArgumentError(\"invalid BigNumberish value\", name || \"value\", value);\n    }\n    debug(...args) {\n        __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_log).call(this, LogLevel.DEBUG, args);\n    }\n    info(...args) {\n        __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_log).call(this, LogLevel.INFO, args);\n    }\n    warn(...args) {\n        __classPrivateFieldGet(this, _Logger_instances, \"m\", _Logger_log).call(this, LogLevel.WARNING, args);\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n}\n_Logger_instances = new WeakSet(), _Logger_assertIntRange = function _Logger_assertIntRange(name, value, operation, minValue) {\n    if (typeof (value) !== \"number\" || isNaN(value)) {\n        this.throwArgumentError(`invalid ${name}`, \"INVALID_ARGUMENT\", {\n            name: \"value\", value\n        });\n    }\n    let message = `invalid ${name} value`;\n    let fault = null;\n    if (isNaN(value)) {\n        fault = \"not-a-number\";\n    }\n    else if (value < minValue || value > maxValue) {\n        message = `unsafe ${name} value`;\n        fault = \"overflow\";\n    }\n    else if (Math.floor(value) !== value) {\n        fault = \"underflow\";\n    }\n    if (fault) {\n        this.throwError(message, \"NUMERIC_FAULT\", {\n            operation, fault, value\n        });\n    }\n}, _Logger_getBytes = function _Logger_getBytes(value, name, copy) {\n    if (value instanceof Uint8Array) {\n        if (copy) {\n            return new Uint8Array(value);\n        }\n        return value;\n    }\n    if (typeof (value) === \"string\" && value.match(/^0x([0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n    return this.throwArgumentError(\"invalid BytesLike value\", name || \"value\", value);\n}, _Logger_log = function _Logger_log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n    if (LogLevels[level] == null) {\n        this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n    if (_logLevel > LogLevels[level]) {\n        return;\n    }\n    console.log.apply(console, args);\n};\n//static readonly Errors = ErrorCode;\nLogger.LogLevels = LogLevel;\n//const l = new Logger();\n//l.makeError(\"foo\", Logger.Errors.NUMERIC_FAULT, { fault: \"foo\", operation: \"bar\", value: 3 });\n//l.makeError(\"foo\", Logger.Errors.UNPREDICTABLE_GAS_LIMIT, { transaction: <any>null });\n//l.makeError<NumericFaultError>(\"foo\", ErrorCode.NUMERIC_FAULT, { fault: \"foo\", operation: \"bar\" });\n//l.makeError<EthersError>(\"foo\", ErrorCode.NUMERIC_FAULT, { fault: \"foo\", operation: \"bar\", gii: \"5\" });\n//console.log(LogLevel);\n//# sourceMappingURL=logger.js.map","export const version = \"@ethersproject/logger@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","export const version = \"@ethersproject/abi@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TokenString_instances, _TokenString_offset, _TokenString_tokens, _TokenString_subTokenString, _ParamType_instances, _ParamType_walkAsync;\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { logger } from \"./logger.js\";\n;\nexport var FormatType;\n(function (FormatType) {\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    FormatType[\"sighash\"] = \"sighash\";\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    FormatType[\"minimal\"] = \"minimal\";\n    // Human-Readable with nice spacing, including all names\n    FormatType[\"full\"] = \"full\";\n    // JSON-format a la Solidity\n    FormatType[\"json\"] = \"json\";\n})(FormatType || (FormatType = {}));\n;\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items) {\n    const result = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\nconst _kwTypes = \"constructor error event function struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\nconst _kwOther = \"tuple returns\";\n// All Keywords\nconst _keywords = [_kwTypes, _kwModifiers, _kwOther, _kwVisib].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n// Single character tokens\nconst SimpleTokens = {\n    \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n    \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n    \",\": \"COMMA\", \"@\": \"AT\"\n};\n// Parser regexes to consume the next token\nconst regexWhitespace = new RegExp(\"^(\\\\s*)\");\nconst regexNumber = new RegExp(\"^([0-9]+)\");\nconst regexIdentifier = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\nconst regexType = new RegExp(\"^(address|bool|bytes(0-9*)|string|u?int([0-9]*))\");\nexport class TokenString {\n    constructor(tokens) {\n        _TokenString_instances.add(this);\n        _TokenString_offset.set(this, void 0);\n        _TokenString_tokens.set(this, void 0);\n        __classPrivateFieldSet(this, _TokenString_offset, 0, \"f\");\n        __classPrivateFieldSet(this, _TokenString_tokens, tokens.slice(), \"f\");\n    }\n    get offset() { return __classPrivateFieldGet(this, _TokenString_offset, \"f\"); }\n    get length() { return __classPrivateFieldGet(this, _TokenString_tokens, \"f\").length - __classPrivateFieldGet(this, _TokenString_offset, \"f\"); }\n    clone() { return new TokenString(__classPrivateFieldGet(this, _TokenString_tokens, \"f\")); }\n    reset() { __classPrivateFieldSet(this, _TokenString_offset, 0, \"f\"); }\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed) {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) {\n            throw new Error(`expected keyword ${top.text}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type) {\n        if (this.peek().type !== type) {\n            throw new Error(`expected ${type}; got ${JSON.stringify(this.peek())}`);\n        }\n        return this.pop().text;\n    }\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = __classPrivateFieldGet(this, _TokenString_instances, \"m\", _TokenString_subTokenString).call(this, __classPrivateFieldGet(this, _TokenString_offset, \"f\") + 1, top.match + 1);\n        __classPrivateFieldSet(this, _TokenString_offset, top.match + 1, \"f\");\n        return result;\n    }\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams() {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") {\n            throw new Error(\"bad start\");\n        }\n        const result = [];\n        while (__classPrivateFieldGet(this, _TokenString_offset, \"f\") < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(__classPrivateFieldGet(this, _TokenString_instances, \"m\", _TokenString_subTokenString).call(this, __classPrivateFieldGet(this, _TokenString_offset, \"f\") + 1, link));\n            __classPrivateFieldSet(this, _TokenString_offset, link, \"f\");\n        }\n        __classPrivateFieldSet(this, _TokenString_offset, top.match + 1, \"f\");\n        return result;\n    }\n    // Returns the top Token, throwing if out of tokens\n    peek() {\n        if (__classPrivateFieldGet(this, _TokenString_offset, \"f\") >= __classPrivateFieldGet(this, _TokenString_tokens, \"f\").length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return __classPrivateFieldGet(this, _TokenString_tokens, \"f\")[__classPrivateFieldGet(this, _TokenString_offset, \"f\")];\n    }\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed) {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top : null;\n    }\n    // Returns the value of the next token if it is `type`\n    peekType(type) {\n        if (this.length === 0) {\n            return null;\n        }\n        const top = this.peek();\n        return (top.type === type) ? top.text : null;\n    }\n    // Returns the next token; throws if out of tokens\n    pop() {\n        var _a;\n        const result = this.peek();\n        __classPrivateFieldSet(this, _TokenString_offset, (_a = __classPrivateFieldGet(this, _TokenString_offset, \"f\"), _a++, _a), \"f\");\n        return result;\n    }\n    toString() {\n        const tokens = [];\n        for (let i = __classPrivateFieldGet(this, _TokenString_offset, \"f\"); i < __classPrivateFieldGet(this, _TokenString_tokens, \"f\").length; i++) {\n            const token = __classPrivateFieldGet(this, _TokenString_tokens, \"f\")[i];\n            tokens.push(`${token.type}:${token.text}`);\n        }\n        return `<TokenString ${tokens.join(\" \")}>`;\n    }\n}\n_TokenString_offset = new WeakMap(), _TokenString_tokens = new WeakMap(), _TokenString_instances = new WeakSet(), _TokenString_subTokenString = function _TokenString_subTokenString(from = 0, to = 0) {\n    return new TokenString(__classPrivateFieldGet(this, _TokenString_tokens, \"f\").slice(from, to).map((t) => {\n        return Object.freeze(Object.assign({}, t, {\n            match: (t.match - from),\n            linkBack: (t.linkBack - from),\n            linkNext: (t.linkNext - from),\n        }));\n        return t;\n    }));\n};\nexport function lex(text) {\n    const tokens = [];\n    const throwError = (message) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]) : \"$EOI\";\n        throw new Error(`invalid token ${token} at ${offset}: ${message}`);\n    };\n    let brackets = [];\n    let commas = [];\n    let offset = 0;\n    while (offset < text.length) {\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespace);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n            }\n            else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) {\n                    throwError(\"no matching open bracket\");\n                }\n                token.match = brackets.pop();\n                (tokens[token.match]).match = tokens.length - 1;\n                token.depth--;\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n            }\n            else if (type === \"COMMA\") {\n                token.linkBack = commas.pop();\n                (tokens[token.linkBack]).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n            }\n            else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n            }\n            else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = tokens.pop().text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = tokens.pop().text;\n                    suffix = value + suffix;\n                    (tokens[tokens.length - 1]).value = logger.getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (tokens[tokens.length - 1]).text += suffix;\n            }\n            continue;\n        }\n        match = cur.match(regexIdentifier);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n            token.type = \"ID\";\n            continue;\n        }\n        match = cur.match(regexNumber);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n        throw new Error(`unexpected token ${JSON.stringify(cur[0])} at position ${offset}`);\n    }\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set, allowed) {\n    let included = [];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) {\n            included.push(key);\n        }\n    }\n    if (included.length > 1) {\n        throw new Error(`conflicting types: ${included.join(\", \")}`);\n    }\n}\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n// ...the name with an optional type, returning the name\nfunction consumeName(type, tokens) {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${type}, got ${keyword}`);\n        }\n    }\n    return tokens.popType(\"ID\");\n}\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens, allowed) {\n    const keywords = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n        if (keyword == null || (allowed && !allowed.has(keyword))) {\n            break;\n        }\n        tokens.pop();\n        if (keywords.has(keyword)) {\n            throw new Error(`duplicate keywords: ${JSON.stringify(keyword)}`);\n        }\n        keywords.add(keyword);\n    }\n    return Object.freeze(keywords);\n}\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens) {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n    // Process mutability states\n    if (modifiers.has(\"view\")) {\n        return \"view\";\n    }\n    if (modifiers.has(\"pure\")) {\n        return \"pure\";\n    }\n    if (modifiers.has(\"payable\")) {\n        return \"payable\";\n    }\n    if (modifiers.has(\"nonpayable\")) {\n        return \"nonpayable\";\n    }\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) {\n        return \"view\";\n    }\n    return \"nonpayable\";\n}\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens, allowIndexed) {\n    return tokens.popParams().map((t) => ParamType.fromTokens(t, allowIndexed));\n}\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens) {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return logger.getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\nfunction consumeEoi(tokens) {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens: ${tokens.toString()}`);\n    }\n}\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nfunction verifyBasicType(type) {\n    const match = type.match(regexType);\n    if (!match) {\n        return logger.throwArgumentError(\"invalid type\", \"type\", type);\n    }\n    if (type === \"uint\") {\n        return \"uint256\";\n    }\n    if (type === \"int\") {\n        return \"int256\";\n    }\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        if (length === 0 || length > 32) {\n            logger.throwArgumentError(\"invalid bytes length\", \"type\", type);\n        }\n    }\n    else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3]);\n        if (size === 0 || size > 256 || size % 8) {\n            logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n        }\n    }\n    return type;\n}\n// Make the Fragment constructors effectively private\nconst _guard = {};\nconst internal = Symbol.for(\"_ethers_internal\");\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nexport class ParamType {\n    constructor(guard, name, type, baseType, indexed, components, arrayLength, arrayChildren) {\n        _ParamType_instances.add(this);\n        logger.assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n        if (components) {\n            components = Object.freeze(components.slice());\n        }\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n        if (baseType === \"tuple\") {\n            if (components == null) {\n                throw new Error(\"\");\n            }\n        }\n        else if (components != null) {\n            throw new Error(\"\");\n        }\n        defineProperties(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format = FormatType.sighash) {\n        if (!FormatType[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatType.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${(this.arrayLength < 0 ? \"\" : String(this.arrayLength))}]`;\n        }\n        else {\n            if (this.isTuple()) {\n                if (format !== FormatType.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatType.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatType.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatType.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static isArray(value) {\n        return value && (value.baseType === \"array\");\n    }\n    isArray() {\n        return (this.baseType === \"array\");\n    }\n    isTuple() {\n        return (this.baseType === \"tuple\");\n    }\n    isIndexable() {\n        return (this.indexed != null);\n    }\n    walk(value, process) {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invlaid array value\");\n            }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            return value.map((v) => (this.arrayChildren.walk(v, process)));\n        }\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) {\n                throw new Error(\"invlaid tuple value\");\n            }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            return value.map((v, i) => (this.components[i].walk(v, process)));\n        }\n        return process(this.type, value);\n    }\n    async walkAsync(value, process) {\n        const promises = [];\n        const result = [value];\n        __classPrivateFieldGet(this, _ParamType_instances, \"m\", _ParamType_walkAsync).call(this, promises, value, process, (value) => {\n            result[0] = value;\n        });\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        return result[0];\n    }\n    static from(obj, allowIndexed) {\n        if (ParamType.isParamType(obj)) {\n            return obj;\n        }\n        if (typeof (obj) === \"string\") {\n            return ParamType.fromTokens(lex(obj), allowIndexed);\n        }\n        if (obj instanceof TokenString) {\n            return ParamType.fromTokens(obj, allowIndexed);\n        }\n        const name = obj.name;\n        if (name && (typeof (name) !== \"string\" || !name.match(regexIdentifier))) {\n            logger.throwArgumentError(\"invalid name\", \"obj.name\", name);\n        }\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            if (!allowIndexed) {\n                logger.throwArgumentError(\"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            }\n            indexed = !!indexed;\n        }\n        let type = obj.type;\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = arrayMatch[2];\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n            return new ParamType(_guard, name, type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n        if (type.substring(0, 5) === \"tuple(\" || type[0] === \"(\") {\n            const comps = (obj.components != null) ? obj.components.map((c) => ParamType.from(c)) : null;\n            const tuple = new ParamType(_guard, name, type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n        type = verifyBasicType(obj.type);\n        return new ParamType(_guard, name, type, type, indexed, null, null, null);\n    }\n    static fromObject(obj, allowIndexed) {\n        throw new Error(\"@TODO\");\n    }\n    static fromTokens(tokens, allowIndexed) {\n        let type = \"\", baseType = \"\";\n        let comps = null;\n        if (consumeKeywords(tokens, setify([\"tuple\"])).has(\"tuple\") || tokens.peekType(\"OPEN_PAREN\")) {\n            // Tuple\n            baseType = \"tuple\";\n            comps = tokens.popParams().map((t) => ParamType.from(t));\n            type = `tuple(${comps.map((c) => c.format()).join(\",\")})`;\n        }\n        else {\n            // Normal\n            type = verifyBasicType(tokens.popType(\"TYPE\"));\n            baseType = type;\n        }\n        // Check for Array\n        let arrayChildren = null;\n        let arrayLength = null;\n        while (tokens.length && tokens.peekType(\"BRACKET\")) {\n            const bracket = tokens.pop(); //arrays[i];\n            arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n            arrayLength = bracket.value;\n            type += bracket.text;\n            baseType = \"array\";\n            comps = null;\n        }\n        let indexed = null;\n        const keywords = consumeKeywords(tokens, KwModifiers);\n        if (keywords.has(\"indexed\")) {\n            if (!allowIndexed) {\n                throw new Error(\"\");\n            }\n            indexed = true;\n        }\n        const name = (tokens.peekType(\"ID\") ? tokens.pop().text : \"\");\n        if (tokens.length) {\n            throw new Error(\"leftover tokens\");\n        }\n        return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n    }\n    static isParamType(value) {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n_ParamType_instances = new WeakSet(), _ParamType_walkAsync = function _ParamType_walkAsync(promises, value, process, setValue) {\n    if (this.isArray()) {\n        if (!Array.isArray(value)) {\n            throw new Error(\"invlaid array value\");\n        }\n        if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n            throw new Error(\"array is wrong length\");\n        }\n        const childType = this.arrayChildren;\n        const result = value.slice();\n        result.forEach((value, index) => {\n            __classPrivateFieldGet(childType, _ParamType_instances, \"m\", _ParamType_walkAsync).call(childType, promises, value, process, (value) => {\n                result[index] = value;\n            });\n        });\n        setValue(result);\n        return;\n    }\n    if (this.isTuple()) {\n        const components = this.components;\n        // Convert the object into an array\n        let result;\n        if (Array.isArray(value)) {\n            result = value.slice();\n        }\n        else {\n            if (value == null || typeof (value) !== \"object\") {\n                throw new Error(\"invlaid tuple value\");\n            }\n            result = components.map((param) => {\n                if (!param.name) {\n                    throw new Error(\"cannot use object value with unnamed components\");\n                }\n                if (!(param.name in value)) {\n                    throw new Error(`missing value for component ${param.name}`);\n                }\n                return value[param.name];\n            });\n        }\n        if (value.length !== this.components.length) {\n            throw new Error(\"array is wrong length\");\n        }\n        result.forEach((value, index) => {\n            var _a;\n            __classPrivateFieldGet((_a = components[index]), _ParamType_instances, \"m\", _ParamType_walkAsync).call(_a, promises, value, process, (value) => {\n                result[index] = value;\n            });\n        });\n        setValue(result);\n        return;\n    }\n    const result = process(this.type, value);\n    if (result.then) {\n        promises.push((async function () { setValue(await result); })());\n    }\n    else {\n        setValue(result);\n    }\n};\nexport var FragmentType;\n(function (FragmentType) {\n    FragmentType[\"constructor\"] = \"constructor\";\n    FragmentType[\"error\"] = \"error\";\n    FragmentType[\"event\"] = \"event\";\n    FragmentType[\"function\"] = \"function\";\n    FragmentType[\"struct\"] = \"struct\";\n})(FragmentType || (FragmentType = {}));\n;\nexport class Fragment {\n    constructor(guard, type, inputs) {\n        logger.assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { type, inputs });\n    }\n    static from(obj) {\n        if (typeof (obj) === \"string\") {\n            return this.fromString(obj);\n        }\n        if (obj instanceof TokenString) {\n            return this.fromTokens(obj);\n        }\n        if (typeof (obj) === \"object\") {\n            return this.fromObject(obj);\n        }\n        throw new Error(`unsupported type: ${obj}`);\n    }\n    static fromObject(obj) {\n        switch (obj.type) {\n            case \"constructor\": return ConstructorFragment.fromObject(obj);\n            case \"error\": return ErrorFragment.fromObject(obj);\n            case \"event\": return EventFragment.fromObject(obj);\n            case \"function\": return FunctionFragment.fromObject(obj);\n            case \"struct\": return StructFragment.fromObject(obj);\n        }\n        throw new Error(\"not implemented yet\");\n    }\n    static fromString(text) {\n        try {\n            Fragment.from(JSON.parse(text));\n        }\n        catch (e) { }\n        return Fragment.fromTokens(lex(text));\n    }\n    static fromTokens(tokens) {\n        const type = tokens.popKeyword(KwTypes);\n        switch (type) {\n            case \"constructor\": return ConstructorFragment.fromTokens(tokens);\n            case \"error\": return ErrorFragment.fromTokens(tokens);\n            case \"event\": return EventFragment.fromTokens(tokens);\n            case \"function\": return FunctionFragment.fromTokens(tokens);\n            case \"struct\": return StructFragment.fromTokens(tokens);\n        }\n        throw new Error(`unsupported type: ${type}`);\n    }\n    /*\n    static fromTokens(tokens: TokenString): Fragment {\n        const assertDone = () => {\n            if (tokens.length) { throw new Error(`unexpected tokens: ${ tokens.toString() }`); }\n        });\n\n        const type = (tokens.length && tokens.peek().type === \"KEYWORD\") ? tokens.peek().text: \"unknown\";\n\n        const name = consumeName(\"error\", tokens);\n        const inputs = consumeParams(tokens, type === \"event\");\n\n        switch (type) {\n            case \"event\": case \"struct\":\n                assertDone();\n        }\n\n    }\n    */\n    static isConstructor(value) {\n        return (value && value.type === \"constructor\");\n    }\n    static isError(value) {\n        return (value && value.type === \"error\");\n    }\n    static isEvent(value) {\n        return (value && value.type === \"event\");\n    }\n    static isFunction(value) {\n        return (value && value.type === \"function\");\n    }\n    static isStruct(value) {\n        return (value && value.type === \"struct\");\n    }\n}\nexport class NamedFragment extends Fragment {\n    constructor(guard, type, name, inputs) {\n        super(guard, type, inputs);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties(this, { name });\n    }\n}\nfunction joinParams(format, params) {\n    return \"(\" + params.map((p) => p.format(format)).join((format === FormatType.full) ? \", \" : \",\") + \")\";\n}\nexport class ErrorFragment extends NamedFragment {\n    constructor(guard, name, inputs) {\n        super(guard, FragmentType.error, name, inputs);\n    }\n    format(format = FormatType.sighash) {\n        if (!FormatType[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatType.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== FormatType.sighash) {\n            result.push(\"error\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n    static fromString(text) {\n        return ErrorFragment.fromTokens(lex(text));\n    }\n    static fromTokens(tokens) {\n        const name = consumeName(\"error\", tokens);\n        const inputs = consumeParams(tokens);\n        consumeEoi(tokens);\n        return new ErrorFragment(_guard, name, inputs);\n    }\n}\nexport class EventFragment extends NamedFragment {\n    constructor(guard, name, inputs, anonymous) {\n        super(guard, FragmentType.event, name, inputs);\n        defineProperties(this, { anonymous });\n    }\n    format(format = FormatType.sighash) {\n        if (!FormatType[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatType.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [];\n        if (format !== FormatType.sighash) {\n            result.push(\"event\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== FormatType.sighash && this.anonymous) {\n            result.push(\"anonymous\");\n        }\n        return result.join(\" \");\n    }\n    static fromString(text) {\n        return EventFragment.fromTokens(lex(text));\n    }\n    static fromTokens(tokens) {\n        const name = consumeName(\"event\", tokens);\n        const inputs = consumeParams(tokens, true);\n        const anonymous = !!consumeKeywords(tokens, setify([\"anonymous\"])).has(\"anonymous\");\n        consumeEoi(tokens);\n        return new EventFragment(_guard, name, inputs, anonymous);\n    }\n}\nexport class ConstructorFragment extends Fragment {\n    constructor(guard, type, inputs, payable, gas) {\n        super(guard, type, inputs);\n        defineProperties(this, { payable, gas });\n    }\n    format(format = FormatType.sighash) {\n        if (!FormatType[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatType.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"format(sighash)\"\n            });\n        }\n        if (format === FormatType.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\" : \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n        const result = [`constructor${joinParams(format, this.inputs)}`];\n        result.push((this.payable) ? \"payable\" : \"nonpayable\");\n        if (this.gas != null) {\n            result.push(`@${this.gas.toString()}`);\n        }\n        return result.join(\" \");\n    }\n    static fromString(text) {\n        return ConstructorFragment.fromTokens(lex(text));\n    }\n    static fromObject(obj) {\n        throw new Error(\"TODO\");\n    }\n    static fromTokens(tokens) {\n        consumeKeywords(tokens, setify([\"constructor\"]));\n        const inputs = consumeParams(tokens);\n        const payable = !!consumeKeywords(tokens, setify([\"payable\"])).has(\"payable\");\n        const gas = consumeGas(tokens);\n        consumeEoi(tokens);\n        return new ConstructorFragment(_guard, FragmentType.constructor, inputs, payable, gas);\n    }\n}\nexport class FunctionFragment extends NamedFragment {\n    constructor(guard, name, stateMutability, inputs, outputs, gas) {\n        super(guard, FragmentType.function, name, inputs);\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties(this, { constant, gas, outputs, payable, stateMutability });\n    }\n    format(format = FormatType.sighash) {\n        if (!FormatType[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatType.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas : undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n        const result = [];\n        if (format !== FormatType.sighash) {\n            result.push(\"function\");\n        }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== FormatType.sighash) {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n            if (this.gas != null) {\n                result.push(`@${this.gas.toString()}`);\n            }\n        }\n        return result.join(\" \");\n    }\n    static fromString(text) {\n        return FunctionFragment.fromTokens(lex(text));\n    }\n    static fromTokens(tokens) {\n        const name = consumeName(\"function\", tokens);\n        const inputs = consumeParams(tokens);\n        const mutability = consumeMutability(tokens);\n        let outputs = [];\n        if (consumeKeywords(tokens, setify([\"returns\"])).has(\"returns\")) {\n            outputs = consumeParams(tokens);\n        }\n        const gas = consumeGas(tokens);\n        consumeEoi(tokens);\n        return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n    }\n}\nexport class StructFragment extends NamedFragment {\n    format() {\n        throw new Error(\"@TODO\");\n    }\n    static fromString(text) {\n        return StructFragment.fromTokens(lex(text));\n    }\n    static fromTokens(tokens) {\n        const name = consumeName(\"struct\", tokens);\n        const inputs = consumeParams(tokens);\n        consumeEoi(tokens);\n        return new StructFragment(_guard, FragmentType.struct, name, inputs);\n    }\n}\n//# sourceMappingURL=fragments.js.map","export const version = \"@ethersproject/math@6.0.0-beta.2\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { logger } from \"./logger.js\";\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\nconst nibbles = \"0123456789abcdef\";\nconst BN_0 = BigInt(0);\n// Converts a value to a BigInt, including big endian data\nexport function toBigInt(_value) {\n    if (_value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of _value) {\n            result += nibbles[v >> 4];\n            result += nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n    return logger.getBigInt(_value, \"value\");\n}\nexport function toNumber(_value) {\n    const value = toBigInt(_value);\n    if (value < -maxValue || value > maxValue) {\n        logger.throwArgumentError(\"overflow\", \"value\", _value);\n    }\n    return Number(value);\n}\n// Converts value to hex, optionally padding on the left to width bytes\nexport function toHex(_value, _width) {\n    const value = logger.getBigInt(_value, \"value\");\n    if (value < 0) {\n        throw new Error(\"cannot convert negative value to hex\");\n    }\n    let result = value.toString(16);\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) {\n            result = \"0\" + result;\n        }\n    }\n    else {\n        const width = logger.getNumber(_width, \"width\");\n        if (width * 2 < result.length) {\n            throw new Error(`value ${value} exceeds width ${width}`);\n        }\n        // Pad the value to the required width\n        while (result.length < (width * 2)) {\n            result = \"0\" + result;\n        }\n    }\n    return \"0x\" + result;\n}\nexport function toArray(_value) {\n    const value = logger.getBigInt(_value, \"value\");\n    if (value < 0) {\n        throw new Error(\"cannot convert negative value to hex\");\n    }\n    if (value === BN_0) {\n        return new Uint8Array([]);\n    }\n    let hex = value.toString(16);\n    if (hex.length % 2) {\n        hex = \"0\" + hex;\n    }\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n    return result;\n}\n//# sourceMappingURL=convert.js.map","import { logger } from \"./logger.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n// Convert a value from a twos-compliment value\nexport function fromTwos(_value, _width) {\n    const value = logger.getBigInt(_value, \"value\");\n    const width = BigInt(logger.getNumber(_width, \"width\"));\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n    return value;\n}\n// Convert value to a twos-compliment value\nexport function toTwos(_value, _width) {\n    const value = logger.getBigInt(_value, \"value\");\n    const width = BigInt(logger.getNumber(_width, \"width\"));\n    if (value < BN_0) {\n        const mask = (BN_1 << width) - BN_1;\n        return ((~(-value)) & mask) + BN_1;\n    }\n    return value;\n}\nexport function mask(_value, _bits) {\n    const value = logger.getBigInt(_value, \"value\");\n    const bits = logger.getBigInt(_bits, \"bits\");\n    return value & ((BN_1 << bits) - BN_1);\n}\n//# sourceMappingURL=maths.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FixedNumber_instances, _FixedNumber_value, _FixedNumber_checkFormat;\nimport { toBigInt, toHex } from \"./convert.js\";\nimport { logger } from \"./logger.js\";\nimport { fromTwos, toTwos } from \"./maths.js\";\nconst _constructorGuard = {};\n//const Zero = BigInt(0);\nconst NegativeOne = BigInt(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, \"NUMERIC_FAULT\", params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\" || decimals < 0 || decimals > 256 || decimals % 1) {\n        logger.throwArgumentError(\"invalid decimal length\", \"decimals\", decimals);\n    }\n    return BigInt(\"1\" + zeros.substring(0, decimals));\n}\nexport function formatFixed(_value, _decimals) {\n    if (_decimals == null) {\n        _decimals = 18;\n    }\n    let value = logger.getBigInt(_value, \"value\");\n    const decimals = logger.getNumber(_decimals, \"decimals\");\n    const multiplier = getMultiplier(decimals);\n    const multiplierStr = String(multiplier);\n    const negative = (value < 0);\n    if (negative) {\n        value *= NegativeOne;\n    }\n    let fraction = String(value % multiplier);\n    // Make sure there are enough place-holders\n    while (fraction.length < multiplierStr.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    while (fraction.length > 1 && fraction.substring(fraction.length - 1) === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    let result = String(value / multiplier);\n    if (multiplierStr.length !== 1) {\n        result += \".\" + fraction;\n    }\n    if (negative) {\n        result = \"-\" + result;\n    }\n    return result;\n}\nexport function parseFixed(value, _decimals) {\n    if (_decimals == null) {\n        _decimals = 18;\n    }\n    const decimals = logger.getNumber(_decimals, \"decimals\");\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = (comps[0] || \"0\"), fraction = (comps[1] || \"0\");\n    // Trim trialing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > String(multiplier).length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < String(multiplier).length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigInt(whole);\n    const fractionValue = BigInt(fraction);\n    let wei = (wholeValue * multiplier) + fractionValue;\n    if (negative) {\n        wei *= NegativeOne;\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    return logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        _FixedNumber_instances.add(this);\n        //#hex: string;\n        _FixedNumber_value.set(this, void 0);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = FixedFormat.from(format);\n        //this.#hex = hex;\n        __classPrivateFieldSet(this, _FixedNumber_value, value, \"f\");\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    addUnsafe(other) {\n        __classPrivateFieldGet(this, _FixedNumber_instances, \"m\", _FixedNumber_checkFormat).call(this, other);\n        const a = parseFixed(__classPrivateFieldGet(this, _FixedNumber_value, \"f\"), this.format.decimals);\n        const b = parseFixed(__classPrivateFieldGet(other, _FixedNumber_value, \"f\"), other.format.decimals);\n        return FixedNumber.fromValue(a + b, this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        __classPrivateFieldGet(this, _FixedNumber_instances, \"m\", _FixedNumber_checkFormat).call(this, other);\n        const a = parseFixed(__classPrivateFieldGet(this, _FixedNumber_value, \"f\"), this.format.decimals);\n        const b = parseFixed(__classPrivateFieldGet(other, _FixedNumber_value, \"f\"), other.format.decimals);\n        return FixedNumber.fromValue(a - b, this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        __classPrivateFieldGet(this, _FixedNumber_instances, \"m\", _FixedNumber_checkFormat).call(this, other);\n        const a = parseFixed(__classPrivateFieldGet(this, _FixedNumber_value, \"f\"), this.format.decimals);\n        const b = parseFixed(__classPrivateFieldGet(other, _FixedNumber_value, \"f\"), other.format.decimals);\n        return FixedNumber.fromValue((a * b) / this.format._multiplier, this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        __classPrivateFieldGet(this, _FixedNumber_instances, \"m\", _FixedNumber_checkFormat).call(this, other);\n        const a = parseFixed(__classPrivateFieldGet(this, _FixedNumber_value, \"f\"), this.format.decimals);\n        const b = parseFixed(__classPrivateFieldGet(other, _FixedNumber_value, \"f\"), other.format.decimals);\n        return FixedNumber.fromValue((a * this.format._multiplier) / b, this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (__classPrivateFieldGet(this, _FixedNumber_value, \"f\") === \"0.0\" || __classPrivateFieldGet(this, _FixedNumber_value, \"f\") === \"0\");\n    }\n    isNegative() {\n        return (__classPrivateFieldGet(this, _FixedNumber_value, \"f\")[0] === \"-\");\n    }\n    toString() { return __classPrivateFieldGet(this, _FixedNumber_value, \"f\"); }\n    toHexString(_width) {\n        throw new Error(\"TODO\");\n        /*\n        return toHex();\n        if (width == null) { return this.#hex; }\n\n        const width = logger.getNumeric(_width);\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n\n        const hex = BigNumber.from(this.#hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return zeroPadLeft(hex, width / 8);\n        */\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(__classPrivateFieldGet(this, _FixedNumber_value, \"f\"), format);\n    }\n    static fromValue(value, decimals = 0, format = \"fixed\") {\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format = \"fixed\") {\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric < 0) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        const hex = (function () {\n            if (fixedFormat.signed) {\n                return toHex(toTwos(numeric, fixedFormat.width));\n            }\n            return toHex(numeric, fixedFormat.width / 8);\n        })();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(_value, format = \"fixed\") {\n        const value = logger.getBytes(_value, \"value\");\n        const fixedFormat = FixedFormat.from(format);\n        if (value.length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = toBigInt(value);\n        if (fixedFormat.signed) {\n            numeric = fromTwos(numeric, fixedFormat.width);\n        }\n        const hex = toHex(toTwos(numeric, (fixedFormat.signed ? 0 : 1) + fixedFormat.width));\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (value instanceof Uint8Array) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== \"INVALID_ARGUMENT\") {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\n_FixedNumber_value = new WeakMap(), _FixedNumber_instances = new WeakSet(), _FixedNumber_checkFormat = function _FixedNumber_checkFormat(other) {\n    if (this.format.name !== other.format.name) {\n        logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n};\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","import { toBigInt, toHex } from \"./convert.js\";\nimport { logger } from \"./logger.js\";\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup = null;\nfunction getAlpha(letter) {\n    if (Lookup == null) {\n        Lookup = {};\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    if (result == null) {\n        logger.throwArgumentError(`invalid base58 value`, \"letter\", letter);\n    }\n    return result;\n}\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\nexport function encodeBase58(_value) {\n    let value = toBigInt(logger.getBytes(_value));\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n    return result;\n}\nexport function decodeBase58(value) {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return toHex(result);\n}\n//# sourceMappingURL=base58.js.map","import { formatFixed, parseFixed } from \"./fixednumber.js\";\nimport { logger } from \"./logger.js\";\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\nexport function formatUnits(value, unit) {\n    if (typeof (unit) === \"string\") {\n        const index = names.indexOf(unit);\n        if (index === -1) {\n            logger.throwArgumentError(\"invalid unit\", \"unit\", unit);\n        }\n        unit = 3 * index;\n    }\n    return formatFixed(value, (unit != null) ? unit : 18);\n}\nexport function parseUnits(value, unit) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unit) === \"string\") {\n        const index = names.indexOf(unit);\n        if (index === -1) {\n            logger.throwArgumentError(\"invalid unit\", \"unit\", unit);\n        }\n        unit = 3 * index;\n    }\n    return parseFixed(value, (unit != null) ? unit : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=units.js.map","export function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (typeof (length) === \"number\" && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    if (length === true && (value.length % 2) !== 0) {\n        return false;\n    }\n    return true;\n}\n/*\nfunction _isByte(value: number): boolean {\n    return (typeof(value) === \"number\" && value >= 0 && value < 256 && Math.floor(value) === value);\n}\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value instanceof Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n\n    if (Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            if (!_isByte(value[i])) { return false; }\n        }\n        return true;\n    }\n\n    return false;\n}\n*/\nexport function isBytesLike(value) {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n//# sourceMappingURL=check.js.map","export const version = \"@ethersproject/bytes@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { version } from \"./_version.js\";\nimport { Logger } from \"@ethersproject/logger\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { isBytesLike } from \"./check.js\";\nimport { logger } from \"./logger.js\";\nlet BN_8 = null;\nlet BN_255 = null;\ntry {\n    BN_8 = BigInt(\"8\");\n    BN_255 = BigInt(\"255\");\n}\ncatch (error) {\n    console.log(\"Unsupported bigint\", error);\n}\nfunction isHexable(value) {\n    return (value && typeof (value.toHexString) === \"function\");\n}\nexport function arrayify(data) {\n    if (data == null) {\n        logger.throwArgumentError(\"cannot arrayify nullish\", \"data\", data);\n    }\n    if (typeof (data) === \"number\") {\n        logger.assertUint53(data);\n        const result = [];\n        while (data) {\n            result.unshift(data & 0xff);\n            data = parseInt(String(data / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return new Uint8Array(result);\n    }\n    if (BN_8 && typeof (data) === \"bigint\") {\n        const result = [];\n        while (data) {\n            result.unshift(Number(data & BN_255));\n            data >>= BN_8;\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return new Uint8Array(result);\n    }\n    if (isHexable(data)) {\n        return arrayify(data.toHexString());\n    }\n    if (typeof (data) === \"string\") {\n        let hex = data;\n        //if (options.allowMissingPrefix && hex.substring(0, 2) !== \"0x\") {\n        //    hex = \"0x\" + hex;\n        //}\n        if (!hex.match(/^0x[0-9a-f]*$/i)) {\n            throw new RangeError(`invalid hex data string (${JSON.stringify(data)})`);\n        }\n        const result = [];\n        for (let i = 2; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return new Uint8Array(result);\n    }\n    if (data instanceof Uint8Array) {\n        return new Uint8Array(data);\n    }\n    throw new TypeError(`cannot arrayify ${JSON.stringify(data)}`);\n}\nexport function _noCopyArrayify(data) {\n    if (!isBytesLike(data)) {\n        logger.throwArgumentError(\"invalid BytesLike value\", \"data\", data);\n    } // @TODO: ArgumentE>\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    return arrayify(data);\n}\n//# sourceMappingURL=array.js.map","import { logger } from \"./logger.js\";\nexport function decodeBase64(textData) {\n    return new Uint8Array(Buffer.from(textData, \"base64\"));\n}\n;\nexport function encodeBase64(data) {\n    return Buffer.from(logger.getBytes(data, \"data\")).toString(\"base64\");\n}\n//# sourceMappingURL=base64.js.map","import { arrayify, _noCopyArrayify } from \"./array.js\";\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(data) {\n    const bytes = _noCopyArrayify(data);\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\nexport function quantity(value) {\n    let result = hexlify(arrayify(value)).substring(2);\n    while (result.substring(0, 1) === \"0\") {\n        result = result.substring(1);\n    }\n    if (result === \"\") {\n        result = \"0\";\n    }\n    return \"0x\" + result;\n}\n//# sourceMappingURL=hex.js.map","import { _noCopyArrayify } from \"./array.js\";\nimport { isHexString } from \"./check.js\";\nimport { hexlify } from \"./hex.js\";\nimport { logger } from \"./logger.js\";\nexport function concat(datas) {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\nexport function dataLength(data) {\n    if (isHexString(data, true)) {\n        return (data.length - 2) / 2;\n    }\n    return _noCopyArrayify(data).length;\n}\nexport function dataSlice(data, start, end) {\n    const bytes = _noCopyArrayify(data);\n    if (end != null && end > bytes.length) {\n        logger.throwError(\"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0 : start, (end == null) ? bytes.length : end));\n}\nexport function stripZerosLeft(data) {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.substring(0, 2) == \"00\") {\n        bytes = bytes.substring(2);\n    }\n    return \"0x\" + bytes;\n}\n//# sourceMappingURL=data.js.map","import { _noCopyArrayify } from \"./array.js\";\nimport { hexlify } from \"./hex.js\";\nimport { logger } from \"./logger.js\";\nfunction zeroPad(data, length, left) {\n    const bytes = _noCopyArrayify(data);\n    if (length < bytes.length) {\n        logger.throwError(\"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n            buffer: new Uint8Array(bytes),\n            length: length,\n            offset: length + 1\n        });\n    }\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    }\n    else {\n        result.set(bytes, 0);\n    }\n    return hexlify(result);\n}\nexport function zeroPadLeft(data, length) {\n    return zeroPad(data, length, true);\n}\nexport function zeroPadRight(data, length) {\n    return zeroPad(data, length, false);\n}\n//# sourceMappingURL=pad.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Result_instances, _Result_indices, _Result_throwError, _Writer_instances, _Writer_data, _Writer_dataLength, _Writer_writeData, _Reader_instances, _Reader_data, _Reader_offset, _Reader_coerceFunc, _Reader_peekBytes;\nimport { toArray, toBigInt, toNumber } from \"@ethersproject/math\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { logger } from \"../logger.js\";\nexport const WordSize = 32;\nconst Padding = new Uint8Array(WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [\"then\"];\nconst _guard = {};\nexport class Result extends Array {\n    constructor(guard, items, keys) {\n        logger.assertPrivate(guard, _guard, \"Result\");\n        super(...items);\n        _Result_instances.add(this);\n        _Result_indices.set(this, void 0);\n        // Name lookup table\n        __classPrivateFieldSet(this, _Result_indices, new Map(), \"f\");\n        if (keys) {\n            keys.forEach((key, index) => {\n                if (key == null) {\n                    return;\n                }\n                if (__classPrivateFieldGet(this, _Result_indices, \"f\").has(key)) {\n                    (__classPrivateFieldGet(this, _Result_indices, \"f\").get(key)).push(index);\n                }\n                else {\n                    __classPrivateFieldGet(this, _Result_indices, \"f\").set(key, [index]);\n                }\n            });\n        }\n        Object.freeze(this);\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof (prop) === \"string\") {\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = logger.getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            __classPrivateFieldGet(this, _Result_instances, \"m\", _Result_throwError).call(this, `index ${index}`, item);\n                        }\n                        return item;\n                    }\n                    // Pass important checks (like `then` for Promise) through\n                    if (prop in target || passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n                    // Something that could be a result keyword value\n                    if (!(prop in target)) {\n                        return target.getValue(prop);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n    }\n    slice(start, end) {\n        if (start == null) {\n            start = 0;\n        }\n        if (end == null) {\n            end = this.length;\n        }\n        const result = [];\n        for (let i = start; i < end; i++) {\n            let value;\n            try {\n                value = this[i];\n            }\n            catch (error) {\n                value = error.error;\n            }\n            result.push(value);\n        }\n        return result;\n    }\n    getValue(name) {\n        const index = __classPrivateFieldGet(this, _Result_indices, \"f\").get(name);\n        if (index != null && index.length === 1) {\n            const item = this[index[0]];\n            if (item instanceof Error) {\n                __classPrivateFieldGet(this, _Result_instances, \"m\", _Result_throwError).call(this, `property ${JSON.stringify(name)}`, item);\n            }\n            return item;\n        }\n        throw new Error(`no named parameter: ${JSON.stringify(name)}`);\n    }\n    static fromItems(items, keys) {\n        return new Result(_guard, items, keys);\n    }\n}\n_Result_indices = new WeakMap(), _Result_instances = new WeakSet(), _Result_throwError = function _Result_throwError(name, error) {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n    wrapped.error = error;\n    throw wrapped;\n};\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nfunction getValue(value) {\n    let bytes = toArray(value);\n    if (bytes.length > WordSize) {\n        logger.throwError(\"value out-of-bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes,\n            length: WordSize,\n            offset: bytes.length\n        });\n    }\n    if (bytes.length % WordSize) {\n        bytes = arrayify(concat([Padding.slice(bytes.length % WordSize), bytes]));\n    }\n    return bytes;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        defineProperties(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n    _throwError(message, value) {\n        return logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor() {\n        _Writer_instances.add(this);\n        // An array of WordSize lengthed objects to concatenation\n        _Writer_data.set(this, void 0);\n        _Writer_dataLength.set(this, void 0);\n        __classPrivateFieldSet(this, _Writer_data, [], \"f\");\n        __classPrivateFieldSet(this, _Writer_dataLength, 0, \"f\");\n    }\n    get data() {\n        return concat(__classPrivateFieldGet(this, _Writer_data, \"f\"));\n    }\n    get length() { return __classPrivateFieldGet(this, _Writer_dataLength, \"f\"); }\n    appendWriter(writer) {\n        return __classPrivateFieldGet(this, _Writer_instances, \"m\", _Writer_writeData).call(this, arrayify(writer.data));\n    }\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = arrayify(concat([bytes, Padding.slice(paddingOffset)]));\n        }\n        return __classPrivateFieldGet(this, _Writer_instances, \"m\", _Writer_writeData).call(this, bytes);\n    }\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value) {\n        return __classPrivateFieldGet(this, _Writer_instances, \"m\", _Writer_writeData).call(this, getValue(value));\n    }\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue() {\n        const offset = __classPrivateFieldGet(this, _Writer_data, \"f\").length;\n        __classPrivateFieldGet(this, _Writer_data, \"f\").push(Padding);\n        __classPrivateFieldSet(this, _Writer_dataLength, __classPrivateFieldGet(this, _Writer_dataLength, \"f\") + WordSize, \"f\");\n        return (value) => {\n            __classPrivateFieldGet(this, _Writer_data, \"f\")[offset] = getValue(value);\n        };\n    }\n}\n_Writer_data = new WeakMap(), _Writer_dataLength = new WeakMap(), _Writer_instances = new WeakSet(), _Writer_writeData = function _Writer_writeData(data) {\n    __classPrivateFieldGet(this, _Writer_data, \"f\").push(data);\n    __classPrivateFieldSet(this, _Writer_dataLength, __classPrivateFieldGet(this, _Writer_dataLength, \"f\") + data.length, \"f\");\n    return data.length;\n};\nexport class Reader {\n    constructor(data, coerceFunc, allowLoose) {\n        _Reader_instances.add(this);\n        _Reader_data.set(this, void 0);\n        _Reader_offset.set(this, void 0);\n        _Reader_coerceFunc.set(this, void 0);\n        defineProperties(this, { allowLoose: !!allowLoose });\n        __classPrivateFieldSet(this, _Reader_data, arrayify(data), \"f\");\n        __classPrivateFieldSet(this, _Reader_coerceFunc, coerceFunc || Reader.coerce, \"f\");\n        __classPrivateFieldSet(this, _Reader_offset, 0, \"f\");\n    }\n    get data() { return hexlify(__classPrivateFieldGet(this, _Reader_data, \"f\")); }\n    get dataLength() { return __classPrivateFieldGet(this, _Reader_data, \"f\").length; }\n    get consumed() { return __classPrivateFieldGet(this, _Reader_offset, \"f\"); }\n    get bytes() { return new Uint8Array(__classPrivateFieldGet(this, _Reader_data, \"f\")); }\n    // The default Coerce function\n    static coerce(type, value) {\n        let match = type.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(type, value) {\n        return __classPrivateFieldGet(this, _Reader_coerceFunc, \"f\").call(this, type, value);\n    }\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset) {\n        return new Reader(__classPrivateFieldGet(this, _Reader_data, \"f\").slice(__classPrivateFieldGet(this, _Reader_offset, \"f\") + offset), __classPrivateFieldGet(this, _Reader_coerceFunc, \"f\"), this.allowLoose);\n    }\n    // Read bytes\n    readBytes(length, loose) {\n        let bytes = __classPrivateFieldGet(this, _Reader_instances, \"m\", _Reader_peekBytes).call(this, 0, length, !!loose);\n        __classPrivateFieldSet(this, _Reader_offset, __classPrivateFieldGet(this, _Reader_offset, \"f\") + bytes.length, \"f\");\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    // Read a numeric values\n    readValue() {\n        return toBigInt(this.readBytes(WordSize));\n    }\n    readIndex() {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n_Reader_data = new WeakMap(), _Reader_offset = new WeakMap(), _Reader_coerceFunc = new WeakMap(), _Reader_instances = new WeakSet(), _Reader_peekBytes = function _Reader_peekBytes(offset, length, loose) {\n    let alignedLength = Math.ceil(length / WordSize) * WordSize;\n    if (__classPrivateFieldGet(this, _Reader_offset, \"f\") + alignedLength > __classPrivateFieldGet(this, _Reader_data, \"f\").length) {\n        if (this.allowLoose && loose && __classPrivateFieldGet(this, _Reader_offset, \"f\") + length <= __classPrivateFieldGet(this, _Reader_data, \"f\").length) {\n            alignedLength = length;\n        }\n        else {\n            logger.throwError(\"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                buffer: arrayify(__classPrivateFieldGet(this, _Reader_data, \"f\")),\n                length: __classPrivateFieldGet(this, _Reader_data, \"f\").length,\n                offset: __classPrivateFieldGet(this, _Reader_offset, \"f\") + alignedLength\n            });\n        }\n    }\n    return __classPrivateFieldGet(this, _Reader_data, \"f\").slice(__classPrivateFieldGet(this, _Reader_offset, \"f\"), __classPrivateFieldGet(this, _Reader_offset, \"f\") + alignedLength);\n};\n//# sourceMappingURL=abstract-coder.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { hmac } from './hmac.js';\n// prettier-ignore\nimport { createView, toBytes, assertNumber, assertHash, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nexport const shrSH = (h, l, s) => h >>> s;\nexport const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nexport const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexport const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexport const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nexport const rotr32H = (h, l) => l;\nexport const rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nexport const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexport const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexport const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nexport const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexport const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexport const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexport const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexport const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexport const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n","import { SHA2 } from './_sha2.js';\nimport * as u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","export const version = \"@ethersproject/crypto@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","/* Browser Crypto Shims */\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { pbkdf2 } from \"@noble/hashes/pbkdf2\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport { logger } from \"./logger.js\";\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nexport function createHash(algo) {\n    switch (algo) {\n        case \"sha256\": return sha256.create();\n        case \"sha512\": return sha512.create();\n    }\n    return logger.throwArgumentError(\"invalid hashing algorithm name\", \"algorithm\", algo);\n}\nexport function createHmac(_algo, key) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    if (algo == null) {\n        return logger.throwArgumentError(\"invalid hmac algorithm\", \"algorithm\", _algo);\n    }\n    return hmac.create(algo, key);\n}\nexport function pbkdf2Sync(password, salt, iterations, keylen, _algo) {\n    const algo = ({ sha256, sha512 }[_algo]);\n    if (algo == null) {\n        return logger.throwArgumentError(\"invalid pbkdf2 algorithm\", \"algorithm\", _algo);\n    }\n    return pbkdf2(algo, password, salt, { c: iterations, dkLen: keylen });\n}\nexport function randomBytes(length) {\n    if (crypto == null) {\n        return logger.throwError(\"platform does not support secure random numbers\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"randomBytes\"\n        });\n    }\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return result;\n}\n//# sourceMappingURL=crypto-browser.js.map","import { createHmac } from \"crypto\"; /*-browser*/\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nlet locked = false;\nconst _computeHmac = function (algorithm, key, data) {\n    return \"0x\" + createHmac(algorithm, key).update(data).digest(\"hex\");\n};\nlet __computeHmac = _computeHmac;\nexport function computeHmac(algorithm, _key, _data) {\n    const key = logger.getBytes(_key, \"key\");\n    const data = logger.getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock = function () { locked = true; };\ncomputeHmac.register = function (func) {\n    if (locked) {\n        throw new Error(\"computeHmac is locked\");\n    }\n    __computeHmac = func;\n};\nObject.freeze(computeHmac);\n//# sourceMappingURL=hmac.js.map","import * as u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, assertNumber, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assertNumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array))\n            throw new Error('Keccak: invalid output buffer');\n        this.finish();\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= this.blockLen)\n                this.keccak();\n            const take = Math.min(this.blockLen - this.posOut, len - pos);\n            out.set(this.state.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assertNumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        if (out.length < this.outputLen)\n            throw new Error('Keccak: invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finish();\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import { keccak_256 } from \"@noble/hashes/sha3\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nlet locked = false;\nconst _keccak256 = function (data) {\n    return keccak_256(data);\n};\nlet __keccak256 = _keccak256;\nexport function keccak256(_data) {\n    const data = logger.getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function () { locked = true; };\nkeccak256.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"keccak256 is locked\");\n    }\n    __keccak256 = func;\n};\nObject.freeze(keccak256);\n//# sourceMappingURL=keccak.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nlet locked = false;\nconst _ripemd160 = function (data) {\n    return noble_ripemd160(data);\n};\nlet __ripemd160 = _ripemd160;\nexport function ripemd160(_data) {\n    const data = logger.getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function () { locked = true; };\nripemd160.register = function (func) {\n    if (locked) {\n        throw new TypeError(\"ripemd160 is locked\");\n    }\n    __ripemd160 = func;\n};\nObject.freeze(ripemd160);\n//# sourceMappingURL=ripemd160.js.map","import { pbkdf2Sync } from \"crypto\"; /*-browser*/\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nlet locked = false;\nconst _pbkdf2 = function (password, salt, iterations, keylen, algo) {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n};\nlet __pbkdf2 = _pbkdf2;\nexport function pbkdf2(_password, _salt, iterations, keylen, algo) {\n    const password = logger.getBytes(_password, \"password\");\n    const salt = logger.getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function () { locked = true; };\npbkdf2.register = function (func) {\n    if (locked) {\n        throw new Error(\"pbkdf2 is locked\");\n    }\n    __pbkdf2 = func;\n};\nObject.freeze(pbkdf2);\n//# sourceMappingURL=pbkdf2.js.map","import { randomBytes as crypto_random } from \"crypto\"; /*-browser*/\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\nexport function randomBytes(length) {\n    return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () { locked = true; };\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error(\"random is locked\");\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map","import { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { assertNumber, asyncLoop, checkOpts, u32 } from './utils.js';\n// RFC 7914 Scrypt KDF\n// Left rotate for uint32\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(prev, pi, input, ii, out, oi) {\n    // Based on https://cr.yp.to/salsa20.html\n    // Xor blocks\n    let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    // Save state to temporary variables (salsa)\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    // Main loop (salsa)\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl(x00 + x12 | 0, 7);\n        x08 ^= rotl(x04 + x00 | 0, 9);\n        x12 ^= rotl(x08 + x04 | 0, 13);\n        x00 ^= rotl(x12 + x08 | 0, 18);\n        x09 ^= rotl(x05 + x01 | 0, 7);\n        x13 ^= rotl(x09 + x05 | 0, 9);\n        x01 ^= rotl(x13 + x09 | 0, 13);\n        x05 ^= rotl(x01 + x13 | 0, 18);\n        x14 ^= rotl(x10 + x06 | 0, 7);\n        x02 ^= rotl(x14 + x10 | 0, 9);\n        x06 ^= rotl(x02 + x14 | 0, 13);\n        x10 ^= rotl(x06 + x02 | 0, 18);\n        x03 ^= rotl(x15 + x11 | 0, 7);\n        x07 ^= rotl(x03 + x15 | 0, 9);\n        x11 ^= rotl(x07 + x03 | 0, 13);\n        x15 ^= rotl(x11 + x07 | 0, 18);\n        x01 ^= rotl(x00 + x03 | 0, 7);\n        x02 ^= rotl(x01 + x00 | 0, 9);\n        x03 ^= rotl(x02 + x01 | 0, 13);\n        x00 ^= rotl(x03 + x02 | 0, 18);\n        x06 ^= rotl(x05 + x04 | 0, 7);\n        x07 ^= rotl(x06 + x05 | 0, 9);\n        x04 ^= rotl(x07 + x06 | 0, 13);\n        x05 ^= rotl(x04 + x07 | 0, 18);\n        x11 ^= rotl(x10 + x09 | 0, 7);\n        x08 ^= rotl(x11 + x10 | 0, 9);\n        x09 ^= rotl(x08 + x11 | 0, 13);\n        x10 ^= rotl(x09 + x08 | 0, 18);\n        x12 ^= rotl(x15 + x14 | 0, 7);\n        x13 ^= rotl(x12 + x15 | 0, 9);\n        x14 ^= rotl(x13 + x12 | 0, 13);\n        x15 ^= rotl(x14 + x13 | 0, 18);\n    }\n    // Write output (salsa)\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n}\nfunction BlockMix(input, ii, out, oi, r) {\n    // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n        XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n        if (i > 0)\n            tail += 16; // First iteration overwrites tmp value in tail\n        XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n    }\n}\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password, salt, _opts) {\n    // Maxmem - 1GB+1KB by default\n    const opts = checkOpts({\n        dkLen: 32,\n        asyncTick: 10,\n        maxmem: 1024 ** 3 + 1024,\n    }, _opts);\n    const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n    assertNumber(N);\n    assertNumber(r);\n    assertNumber(p);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    assertNumber(maxmem);\n    if (onProgress !== undefined && typeof onProgress !== 'function')\n        throw new Error('progressCb should be function');\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n        // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n        // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n        throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n    // Since it has only one iteration there is no reason to use async variant\n    const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    // Re-used between parallel iterations. Array(iterations) of B\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    let blockMixCb = () => { };\n    if (onProgress) {\n        const totalBlockMix = 2 * N * p;\n        // Invoke callback if progress changes from 10.01 to 10.02\n        // Allows to draw smooth progress bar on up to 8K screen\n        const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n        let blockMixCnt = 0;\n        blockMixCb = () => {\n            blockMixCnt++;\n            if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n                onProgress(blockMixCnt / totalBlockMix);\n        };\n    }\n    return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\nfunction scryptOutput(password, dkLen, B, V, tmp) {\n    const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n}\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        }\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password, salt, opts) {\n    const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(password, salt, opts);\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        let pos = 0;\n        await asyncLoop(N - 1, asyncTick, (i) => {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            blockMixCb();\n        });\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        blockMixCb();\n        await asyncLoop(N, asyncTick, (i) => {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++)\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            blockMixCb();\n        });\n    }\n    return scryptOutput(password, dkLen, B, V, tmp);\n}\n","import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\nimport { hexlify as H } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nlet lockedSync = false, lockedAsync = false;\nconst _scryptAsync = async function (passwd, salt, N, r, p, dkLen, onProgress) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n};\nconst _scryptSync = function (passwd, salt, N, r, p, dkLen) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n};\nlet __scryptAsync = _scryptAsync;\nlet __scryptSync = _scryptSync;\nexport async function scrypt(_passwd, _salt, N, r, p, dkLen, progress) {\n    const passwd = logger.getBytes(_passwd, \"passwd\");\n    const salt = logger.getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function () { lockedAsync = true; };\nscrypt.register = function (func) {\n    if (lockedAsync) {\n        throw new Error(\"scrypt is locked\");\n    }\n    __scryptAsync = func;\n};\nObject.freeze(scrypt);\nexport function scryptSync(_passwd, _salt, N, r, p, dkLen) {\n    const passwd = logger.getBytes(_passwd, \"passwd\");\n    const salt = logger.getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function () { lockedSync = true; };\nscryptSync.register = function (func) {\n    if (lockedSync) {\n        throw new Error(\"scryptSync is locked\");\n    }\n    __scryptSync = func;\n};\nObject.freeze(scryptSync);\n//# sourceMappingURL=scrypt.js.map","import { createHash } from \"crypto\"; /*-browser*/\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nconst _sha256 = function (data) {\n    return createHash(\"sha256\").update(data).digest();\n};\nconst _sha512 = function (data) {\n    return createHash(\"sha512\").update(data).digest();\n};\nlet __sha256 = _sha256;\nlet __sha512 = _sha512;\nlet locked256 = false, locked512 = false;\nexport function sha256(_data) {\n    const data = logger.getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function () { locked256 = true; };\nsha256.register = function (func) {\n    if (locked256) {\n        throw new Error(\"sha256 is locked\");\n    }\n    __sha256 = func;\n};\nObject.freeze(sha256);\nexport function sha512(_data) {\n    const data = logger.getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function () { locked512 = true; };\nsha512.register = function (func) {\n    if (locked512) {\n        throw new Error(\"sha512 is locked\");\n    }\n    __sha512 = func;\n};\nObject.freeze(sha256);\n//# sourceMappingURL=sha2.js.map","// We import all these so we can export lock()\nimport { computeHmac } from \"./hmac.js\";\nimport { keccak256 } from \"./keccak.js\";\nimport { ripemd160 } from \"./ripemd160.js\";\nimport { pbkdf2 } from \"./pbkdf2.js\";\nimport { randomBytes } from \"./random.js\";\nimport { scrypt, scryptSync } from \"./scrypt.js\";\nimport { sha256, sha512 } from \"./sha2.js\";\nexport { computeHmac, randomBytes, keccak256, ripemd160, sha256, sha512, pbkdf2, scrypt, scryptSync };\nexport function lock() {\n    computeHmac.lock();\n    keccak256.lock();\n    pbkdf2.lock();\n    randomBytes.lock();\n    ripemd160.lock();\n    scrypt.lock();\n    scryptSync.lock();\n    sha256.lock();\n    sha512.lock();\n}\n//# sourceMappingURL=index.js.map","export const version = \"@ethersproject/address@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { logger } from \"./logger.js\";\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\nfunction getChecksumAddress(address) {\n    //    if (!isHexString(address, 20)) {\n    //        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    //    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nconst Base36 = (function () {\n    ;\n    const result = {};\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\nfunction fromBase36(value) {\n    value = value.toLowerCase();\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\nexport function getAddress(address) {\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        const result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        return result;\n    }\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        return getChecksumAddress(\"0x\" + result);\n    }\n    return logger.throwArgumentError(\"invalid address\", \"address\", address);\n}\nexport function getIcapAddress(address) {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n//# sourceMappingURL=address.js.map","export const version = \"@ethersproject/rlp@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { logger } from \"./logger.js\";\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    const data = Array.prototype.slice.call(logger.getBytes(object, \"object\"));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nconst nibbles = \"0123456789abcdef\";\nexport function encodeRlp(object) {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n//# sourceMappingURL=encode.js.map","//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nfunction hexlifyByte(value) {\n    let result = value.toString(16);\n    while (result.length < 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", \"BUFFER_OVERRUN\", {\n                buffer: data, length, offset\n            });\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: 0, offset: 1\n        });\n    }\n    const checkOffset = (offset) => {\n        if (offset > data.length) {\n            logger.throwError(\"data short segment too short\", \"BUFFER_OVERRUN\", {\n                buffer: data, length: data.length, offset\n            });\n        }\n    };\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\nexport function decodeRlp(_data) {\n    const data = logger.getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    if (decoded.consumed !== data.length) {\n        logger.throwArgumentError(\"unexpected junk after rlp payload\", \"data\", _data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=decode.js.map","import { concat, dataSlice } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { encodeRlp } from \"@ethersproject/rlp\";\nimport { getAddress } from \"./address.js\";\nimport { logger } from \"./logger.js\";\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getCreateAddress(tx) {\n    const from = getAddress(tx.from);\n    const nonce = logger.getBigInt(tx.nonce, \"tx.nonce\");\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    }\n    else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    }\n    else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n    return getAddress(dataSlice(keccak256(encodeRlp([from, nonceHex])), 12));\n}\nexport function getCreate2Address(_from, _salt, _initCodeHash) {\n    const from = getAddress(_from);\n    const salt = logger.getBytes(_salt, \"salt\");\n    const initCodeHash = logger.getBytes(_initCodeHash, \"initCodeHash\");\n    if (salt.length !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", _salt);\n    }\n    if (initCodeHash.length !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n    }\n    return getAddress(dataSlice(keccak256(concat([\"0xff\", from, salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=contract-address.js.map","import { getAddress } from \"./address.js\";\nimport { logger } from \"./logger.js\";\nexport function isAddressable(value) {\n    return (value && typeof (value.getAddress) === \"function\");\n}\nexport function isAddress(value) {\n    try {\n        getAddress(value);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\n// Resolves an Ethereum address, ENS name or Addressable object,\n// throwing if the result is null; an explicit null returns null\n//export async function resolveAddress(target?: null, resolver?: null | NameResolver): Promise<null>;\n//export async function resolveAddress(target: string | Addressable, resolver?: null | NameResolver): Promise<string>;\n//export async function resolveAddress(target: null | undefined | string | Addressable, resolver?: null | NameResolver) {\nexport async function resolveAddress(target, resolver) {\n    //if (target == null) { return null; }\n    if (typeof (target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) {\n            return getAddress(target);\n        }\n        if (resolver == null) {\n            return logger.throwError(\"ENS resolution requires a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n            });\n        }\n        const result = await resolver.resolveName(target);\n        if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n            return logger.throwError(\"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        }\n        return getAddress(result);\n    }\n    else if (isAddressable(target)) {\n        const result = await target.getAddress();\n        if (result == null) {\n            logger.throwArgumentError(\"addressable resolved to null\", \"target\", target);\n        }\n        return getAddress(result);\n    }\n    return logger.throwArgumentError(\"unsupported addressable value\", \"target\", target);\n}\n//# sourceMappingURL=checks.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Typed_options;\nimport { defineProperties } from \"@ethersproject/properties\";\nconst _gaurd = {};\nfunction n(value, width) {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${signed ? \"\" : \"u\"}int${width}`, value, { signed, width });\n}\nfunction b(value, size) {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${(size) ? size : \"\"}`, value, { size });\n}\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\nexport class Typed {\n    constructor(gaurd, type, value, options = null) {\n        _Typed_options.set(this, void 0);\n        if (gaurd !== _gaurd) {\n            throw new Error(\"private constructor\");\n        }\n        defineProperties(this, { _typedSymbol, type, value });\n        __classPrivateFieldSet(this, _Typed_options, options, \"f\");\n        // Check the value is valid\n        this.format();\n    }\n    format() {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        }\n        else if (this.type === \"tuple\") {\n            return `tuple(${this.value.map((v) => v.format()).join(\",\")})`;\n        }\n        return this.type;\n    }\n    defaultValue() {\n        return 0;\n    }\n    minValue() {\n        return 0;\n    }\n    maxValue() {\n        return 0;\n    }\n    isBigInt() {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n    isData() {\n        return (this.type.substring(0, 5) === \"bytes\");\n    }\n    isString() {\n        return (this.type === \"string\");\n    }\n    get tupleName() {\n        if (this.type !== \"tuple\") {\n            throw TypeError(\"not a tuple\");\n        }\n        return __classPrivateFieldGet(this, _Typed_options, \"f\");\n    }\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n    get arrayLength() {\n        if (this.type !== \"array\") {\n            throw TypeError(\"not an array\");\n        }\n        if (__classPrivateFieldGet(this, _Typed_options, \"f\") === true) {\n            return -1;\n        }\n        if (__classPrivateFieldGet(this, _Typed_options, \"f\") === false) {\n            return (this.value).length;\n        }\n        return null;\n    }\n    static from(type, value) {\n        return new Typed(_gaurd, type, value);\n    }\n    static uint8(v) { return n(v, 8); }\n    static uint16(v) { return n(v, 16); }\n    static uint24(v) { return n(v, 24); }\n    static uint32(v) { return n(v, 32); }\n    static uint40(v) { return n(v, 40); }\n    static uint48(v) { return n(v, 46); }\n    static uint56(v) { return n(v, 56); }\n    static uint64(v) { return n(v, 64); }\n    static uint72(v) { return n(v, 72); }\n    static uint80(v) { return n(v, 80); }\n    static uint88(v) { return n(v, 88); }\n    static uint96(v) { return n(v, 96); }\n    static uint104(v) { return n(v, 104); }\n    static uint112(v) { return n(v, 112); }\n    static uint120(v) { return n(v, 120); }\n    static uint128(v) { return n(v, 128); }\n    static uint136(v) { return n(v, 136); }\n    static uint144(v) { return n(v, 144); }\n    static uint152(v) { return n(v, 152); }\n    static uint160(v) { return n(v, 160); }\n    static uint168(v) { return n(v, 168); }\n    static uint176(v) { return n(v, 176); }\n    static uint184(v) { return n(v, 184); }\n    static uint192(v) { return n(v, 192); }\n    static uint200(v) { return n(v, 200); }\n    static uint208(v) { return n(v, 208); }\n    static uint216(v) { return n(v, 216); }\n    static uint224(v) { return n(v, 224); }\n    static uint232(v) { return n(v, 232); }\n    static uint240(v) { return n(v, 240); }\n    static uint248(v) { return n(v, 248); }\n    static uint256(v) { return n(v, 256); }\n    static uint(v) { return n(v, 256); }\n    static int8(v) { return n(v, -8); }\n    static int16(v) { return n(v, -16); }\n    static int24(v) { return n(v, -24); }\n    static int32(v) { return n(v, -32); }\n    static int40(v) { return n(v, -40); }\n    static int48(v) { return n(v, -46); }\n    static int56(v) { return n(v, -56); }\n    static int64(v) { return n(v, -64); }\n    static int72(v) { return n(v, -72); }\n    static int80(v) { return n(v, -80); }\n    static int88(v) { return n(v, -88); }\n    static int96(v) { return n(v, -96); }\n    static int104(v) { return n(v, -104); }\n    static int112(v) { return n(v, -112); }\n    static int120(v) { return n(v, -120); }\n    static int128(v) { return n(v, -128); }\n    static int136(v) { return n(v, -136); }\n    static int144(v) { return n(v, -144); }\n    static int152(v) { return n(v, -152); }\n    static int160(v) { return n(v, -160); }\n    static int168(v) { return n(v, -168); }\n    static int176(v) { return n(v, -176); }\n    static int184(v) { return n(v, -184); }\n    static int192(v) { return n(v, -192); }\n    static int200(v) { return n(v, -200); }\n    static int208(v) { return n(v, -208); }\n    static int216(v) { return n(v, -216); }\n    static int224(v) { return n(v, -224); }\n    static int232(v) { return n(v, -232); }\n    static int240(v) { return n(v, -240); }\n    static int248(v) { return n(v, -248); }\n    static int256(v) { return n(v, -256); }\n    static int(v) { return n(v, -256); }\n    static bytes(v) { return b(v); }\n    static bytes1(v) { return b(v, 1); }\n    static bytes2(v) { return b(v, 2); }\n    static bytes3(v) { return b(v, 3); }\n    static bytes4(v) { return b(v, 4); }\n    static bytes5(v) { return b(v, 5); }\n    static bytes6(v) { return b(v, 6); }\n    static bytes7(v) { return b(v, 7); }\n    static bytes8(v) { return b(v, 8); }\n    static bytes9(v) { return b(v, 9); }\n    static bytes10(v) { return b(v, 10); }\n    static bytes11(v) { return b(v, 11); }\n    static bytes12(v) { return b(v, 12); }\n    static bytes13(v) { return b(v, 13); }\n    static bytes14(v) { return b(v, 14); }\n    static bytes15(v) { return b(v, 15); }\n    static bytes16(v) { return b(v, 16); }\n    static bytes17(v) { return b(v, 17); }\n    static bytes18(v) { return b(v, 18); }\n    static bytes19(v) { return b(v, 19); }\n    static bytes20(v) { return b(v, 20); }\n    static bytes21(v) { return b(v, 21); }\n    static bytes22(v) { return b(v, 22); }\n    static bytes23(v) { return b(v, 23); }\n    static bytes24(v) { return b(v, 24); }\n    static bytes25(v) { return b(v, 25); }\n    static bytes26(v) { return b(v, 26); }\n    static bytes27(v) { return b(v, 27); }\n    static bytes28(v) { return b(v, 28); }\n    static bytes29(v) { return b(v, 29); }\n    static bytes30(v) { return b(v, 30); }\n    static bytes31(v) { return b(v, 31); }\n    static bytes32(v) { return b(v, 32); }\n    static address(v) { return new Typed(_gaurd, \"address\", v); }\n    static bool(v) { return new Typed(_gaurd, \"bool\", !!v); }\n    static string(v) { return new Typed(_gaurd, \"string\", v); }\n    static array(v, dynamic) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n    static tuple(v, name) {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n    static overrides(v) {\n        return new Typed(_gaurd, \"overrides\", Object.assign({}, v));\n    }\n    static isTyped(value) {\n        return (value && value._typedSymbol === _typedSymbol);\n    }\n    static dereference(value, type) {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${type}, got ${value.type}`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n_Typed_options = new WeakMap();\n//# sourceMappingURL=typed.js.map","import { getAddress } from \"@ethersproject/address\";\nimport { toHex } from \"@ethersproject/math\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, _value) {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(toHex(reader.readValue(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","import { Coder } from \"./abstract-coder.js\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { isError } from \"@ethersproject/logger\";\nimport { logger } from \"../logger.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\nexport function pack(writer, coders, values) {\n    let arrayValues = [];\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", \"INVALID_ARGUMENT\", {\n                    argument: \"values\",\n                    info: { coder },\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", \"INVALID_ARGUMENT\", {\n                    argument: \"values\",\n                    info: { coder },\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    let keys = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n    return Result.fromItems(values, keys);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties(this, { coder, length });\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"array\");\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.assertArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * WordSize > reader.dataLength) {\n                logger.throwError(\"insufficient data length\", \"BUFFER_OVERRUN\", {\n                    buffer: reader.bytes,\n                    offset: count * WordSize,\n                    length: reader.dataLength\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue());\n    }\n}\n//# sourceMappingURL=boolean.js.map","import { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder.js\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","import { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties(this, { size }, { size: \"number\" });\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, _value) {\n        let data = arrayify(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", _value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","import { Coder } from \"./abstract-coder.js\";\nconst Empty = new Uint8Array([]);\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes(Empty);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","import { fromTwos, mask, toTwos } from \"@ethersproject/math\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { logger } from \"../logger.js\";\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        defineProperties(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, _value) {\n        let value = logger.getBigInt(Typed.dereference(_value, this.type));\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n        }\n        else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n        value = mask(toTwos(value, this.size * 8), this.size * 8);\n        if (this.signed) {\n            value = toTwos(fromTwos(value, this.size * 8), 8 * WordSize);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        let value = mask(reader.readValue(), this.size * 8);\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","export const version = \"@ethersproject/strings@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { logger } from \"./logger.js\";\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push((badCodepoint != null) ? badCodepoint : -1);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    const bytes = logger.getBytes(_bytes, \"bytes\");\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.assertNormalize(form);\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return new Uint8Array(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","import { zeroPadRight } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadRight(bytes, 32);\n}\nexport function parseBytes32String(_bytes) {\n    const data = logger.getBytes(_bytes, \"bytes\");\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","import { logger } from \"./logger.js\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8.js\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"should not happen; bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, _func) {\n    const func = _func || function (value) { return [parseInt(value, 16)]; };\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    const range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        if (range.s == null) {\n            throw new Error(\"should not happenl bad range\");\n        }\n        return [codepoint + range.s];\n    }\n    const codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    const shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    const complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            logger.throwArgumentError(\"STRINGPREP_CONTAINS_PROHIBITED\", \"value\", value);\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            logger.throwArgumentError(\"STRINGPREP_CONTAINS_UNASSIGNED\", \"value\", value);\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        logger.throwArgumentError(\"invalid hyphen\", \"value\", value);\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        logger.throwArgumentError(\"too long\", \"value\", value);\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","import { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, _value) {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\nimport { pack, unpack } from \"./array.js\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties(this, { coders: Object.freeze(coders.slice()) });\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, _value) {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbiCoder_instances, _AbiCoder_getCoder;\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n//import { arrayify } from \"@ethersproject/bytes\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { logger } from \"./logger.js\";\nimport { Reader, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        _AbiCoder_instances.add(this);\n        defineProperties(this, { coerceFunc }, {}, { coerceFunc: null });\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => __classPrivateFieldGet(this, _AbiCoder_instances, \"m\", _AbiCoder_getCoder).call(this, ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        logger.assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n        const coders = types.map((type) => __classPrivateFieldGet(this, _AbiCoder_instances, \"m\", _AbiCoder_getCoder).call(this, ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => __classPrivateFieldGet(this, _AbiCoder_instances, \"m\", _AbiCoder_getCoder).call(this, ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, this.coerceFunc, loose));\n    }\n}\n_AbiCoder_instances = new WeakSet(), _AbiCoder_getCoder = function _AbiCoder_getCoder(param) {\n    if (param.isArray()) {\n        return new ArrayCoder(__classPrivateFieldGet(this, _AbiCoder_instances, \"m\", _AbiCoder_getCoder).call(this, param.arrayChildren), param.arrayLength, param.name);\n    }\n    if (param.isTuple()) {\n        return new TupleCoder(param.components.map((c) => __classPrivateFieldGet(this, _AbiCoder_instances, \"m\", _AbiCoder_getCoder).call(this, c)), param.name);\n    }\n    switch (param.baseType) {\n        case \"address\":\n            return new AddressCoder(param.name);\n        case \"bool\":\n            return new BooleanCoder(param.name);\n        case \"string\":\n            return new StringCoder(param.name);\n        case \"bytes\":\n            return new BytesCoder(param.name);\n        case \"\":\n            return new NullCoder(param.name);\n    }\n    // u?int[0-9]*\n    let match = param.type.match(paramTypeNumber);\n    if (match) {\n        let size = parseInt(match[2] || \"256\");\n        if (size === 0 || size > 256 || (size % 8) !== 0) {\n            logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n        }\n        return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n    }\n    // bytes[0-9]+\n    match = param.type.match(paramTypeBytes);\n    if (match) {\n        let size = parseInt(match[1]);\n        if (size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n        }\n        return new FixedBytesCoder(size, param.name);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n};\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","import { keccak256 } from \"@ethersproject/crypto\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport function id(value) {\n    return keccak256(toUtf8Bytes(value));\n}\n//# sourceMappingURL=id.js.map","export const version = \"@ethersproject/hash@6.0.0-beta.2\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { logger } from \"./logger.js\";\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            return logger.throwArgumentError(\"invalid ENS name; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\nexport function dnsEncode(name) {\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid DNS name; not a string\", \"name\", name);\n    }\n    if (name === \"\") {\n        return \"0x00\";\n    }\n    // @TODO: should we enforce the 255 octet limit?\n    return concat(name.split(\".\").map((comp) => {\n        if (comp === \"\") {\n            logger.throwArgumentError(\"invalid DNS name; missing component\", \"name\", name);\n        }\n        // We jam in an _ prefix to fill in with the length later\n        // Note: Nameprep throws if the component is over 63 bytes\n        const bytes = toUtf8Bytes(\"_\" + nameprep(comp));\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    })) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TypedDataEncoder_instances, _TypedDataEncoder_types, _TypedDataEncoder_fullTypes, _TypedDataEncoder_encoderCache, _TypedDataEncoder_getEncoder;\n//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify, zeroPadLeft, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { mask, toHex, toTwos } from \"@ethersproject/math\";\nimport { id } from \"./id.js\";\nimport { logger } from \"./logger.js\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n;\n;\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return concat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = toHex(BN_1, 32);\nconst hexFalse = toHex(BN_0, 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        return logger.getBigInt(value, \"domain.chainId\");\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        const bytes = logger.getBytes(value, \"domain.salt\");\n        if (bytes.length !== 32) {\n            logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n        }\n        return hexlify(bytes);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1) : width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1) : BN_0;\n            return function (_value) {\n                const value = logger.getBigInt(_value, \"value\");\n                if (value < boundsLower || value > boundsUpper) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return toHex(toTwos(value, 256), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return zeroPadLeft(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        _TypedDataEncoder_instances.add(this);\n        _TypedDataEncoder_types.set(this, void 0);\n        _TypedDataEncoder_fullTypes.set(this, void 0);\n        _TypedDataEncoder_encoderCache.set(this, void 0);\n        __classPrivateFieldSet(this, _TypedDataEncoder_types, JSON.stringify(types), \"f\");\n        __classPrivateFieldSet(this, _TypedDataEncoder_fullTypes, new Map(), \"f\");\n        __classPrivateFieldSet(this, _TypedDataEncoder_encoderCache, new Map(), \"f\");\n        // Link struct types to their direct child structs\n        const links = new Map();\n        // Link structs to structs which contain them as a child\n        const parents = new Map();\n        // Link all subtypes within a given struct\n        const subtypes = new Map();\n        Object.keys(types).forEach((type) => {\n            links.set(type, new Set());\n            parents.set(type, []);\n            subtypes.set(type, new Set());\n        });\n        for (const name in types) {\n            const uniqueNames = new Set();\n            for (const field of types[name]) {\n                // Check each field has a unique name\n                if (uniqueNames.has(field.name)) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames.add(field.name);\n                // Get the base type (drop any array specifiers)\n                const baseType = (field.type.match(/^([^\\x5b]*)(\\x5b|$)/))[1] || null;\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    continue;\n                }\n                if (!parents.has(baseType)) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents.get(baseType).push(name);\n                links.get(name).add(baseType);\n            }\n        }\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => (parents.get(n).length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineProperties(this, { primaryType: primaryTypes[0] });\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found.has(type)) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found.add(type);\n            for (const child of links.get(type)) {\n                if (!parents.has(child)) {\n                    continue;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    subtypes.get(subtype).add(child);\n                }\n            }\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n        // Compute each fully describe type\n        for (const [name, set] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            __classPrivateFieldGet(this, _TypedDataEncoder_fullTypes, \"f\").set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n    get types() {\n        return JSON.parse(__classPrivateFieldGet(this, _TypedDataEncoder_types, \"f\"));\n    }\n    getEncoder(type) {\n        let encoder = __classPrivateFieldGet(this, _TypedDataEncoder_encoderCache, \"f\").get(type);\n        if (!encoder) {\n            encoder = __classPrivateFieldGet(this, _TypedDataEncoder_instances, \"m\", _TypedDataEncoder_getEncoder).call(this, type);\n            __classPrivateFieldGet(this, _TypedDataEncoder_encoderCache, \"f\").set(type, encoder);\n        }\n        return encoder;\n    }\n    encodeType(name) {\n        const result = __classPrivateFieldGet(this, _TypedDataEncoder_fullTypes, \"f\").get(name);\n        if (!result) {\n            return logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain, types, value, resolveName) {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({}, domain);\n        // Look up all ENS names\n        const ensCache = {};\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n        // Get a list of all the addresses\n        encoder.visit(value, (type, value) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type, value) => {\n            if (type === \"address\" && ensCache[value]) {\n                return ensCache[value];\n            }\n            return value;\n        });\n        return { domain, value };\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = Object.assign({}, types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(logger.getBytes(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return logger.getBigInt(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n_TypedDataEncoder_types = new WeakMap(), _TypedDataEncoder_fullTypes = new WeakMap(), _TypedDataEncoder_encoderCache = new WeakMap(), _TypedDataEncoder_instances = new WeakSet(), _TypedDataEncoder_getEncoder = function _TypedDataEncoder_getEncoder(type) {\n    // Basic encoder type (address, bool, uint256, etc)\n    {\n        const encoder = getBaseEncoder(type);\n        if (encoder) {\n            return encoder;\n        }\n    }\n    // Array\n    const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        const subtype = match[1];\n        const subEncoder = this.getEncoder(subtype);\n        const length = parseInt(match[3]);\n        return (value) => {\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            let result = value.map(subEncoder);\n            if (__classPrivateFieldGet(this, _TypedDataEncoder_fullTypes, \"f\").has(subtype)) {\n                result = result.map(keccak256);\n            }\n            return keccak256(concat(result));\n        };\n    }\n    // Struct\n    const fields = this.types[type];\n    if (fields) {\n        const encodedType = id(__classPrivateFieldGet(this, _TypedDataEncoder_fullTypes, \"f\").get(type));\n        return (value) => {\n            const values = fields.map(({ name, type }) => {\n                const result = this.getEncoder(type)(value[name]);\n                if (__classPrivateFieldGet(this, _TypedDataEncoder_fullTypes, \"f\").has(type)) {\n                    return keccak256(result);\n                }\n                return result;\n            });\n            values.unshift(encodedType);\n            return concat(values);\n        };\n    }\n    return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n};\n//# sourceMappingURL=typed-data.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Interface_instances, _Interface_errors, _Interface_events, _Interface_functions, _Interface_abiCoder, _Interface_getFunction, _Interface_getEvent;\nimport { arrayify, concat, dataSlice, hexlify, zeroPadLeft, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { id } from \"@ethersproject/hash\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatType, Fragment, FunctionFragment, ParamType } from \"./fragments.js\";\nimport { logger } from \"./logger.js\";\nimport { Typed } from \"./typed.js\";\nexport { checkResultErrors, Result };\nexport class LogDescription {\n    constructor(fragment, topic, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\nexport class TransactionDescription {\n    constructor(fragment, selector, args, value) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\nexport class ErrorDescription {\n    constructor(fragment, selector, args) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\nexport class Indexed {\n    constructor(hash) {\n        defineProperties(this, { hash, _isIndexed: true });\n    }\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n};\nconst BuiltinErrors = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [\"string\"],\n        reason: (message) => {\n            return `reverted with reason string ${JSON.stringify(message)}`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [\"uint256\"],\n        reason: (code) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${code.toString(16)} (${reason})`;\n        }\n    }\n};\nexport class Interface {\n    constructor(fragments) {\n        _Interface_instances.add(this);\n        _Interface_errors.set(this, void 0);\n        _Interface_events.set(this, void 0);\n        _Interface_functions.set(this, void 0);\n        //    #structs: Map<string, StructFragment>;\n        _Interface_abiCoder.set(this, void 0);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        __classPrivateFieldSet(this, _Interface_functions, new Map(), \"f\");\n        __classPrivateFieldSet(this, _Interface_errors, new Map(), \"f\");\n        __classPrivateFieldSet(this, _Interface_events, new Map(), \"f\");\n        //        this.#structs = new Map();\n        defineProperties(this, {\n            fragments: Object.freeze(abi.map((f) => Fragment.from(f)).filter((f) => (f != null))),\n        });\n        __classPrivateFieldSet(this, _Interface_abiCoder, this.getAbiCoder(), \"f\");\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties(this, { deploy: fragment });\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = __classPrivateFieldGet(this, _Interface_functions, \"f\");\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = __classPrivateFieldGet(this, _Interface_events, \"f\");\n                    break;\n                case \"error\":\n                    bucket = __classPrivateFieldGet(this, _Interface_errors, \"f\");\n                    break;\n                default:\n                    return;\n            }\n            const signature = fragment.format();\n            if (bucket.has(signature)) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket.set(signature, fragment);\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties(this, {\n                deploy: ConstructorFragment.fromString(\"constructor()\")\n            });\n        }\n    }\n    // @TODO: multi sig?\n    format(format) {\n        if (!format) {\n            format = FormatType.full;\n        }\n        if (format === FormatType.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((f) => f.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatType.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    getFunctionName(key) {\n        return (__classPrivateFieldGet(this, _Interface_instances, \"m\", _Interface_getFunction).call(this, key, null, false)).name;\n    }\n    getFunction(key, values) {\n        return __classPrivateFieldGet(this, _Interface_instances, \"m\", _Interface_getFunction).call(this, key, values || null, true);\n    }\n    getEventName(key) {\n        return (__classPrivateFieldGet(this, _Interface_instances, \"m\", _Interface_getEvent).call(this, key, null, false)).name;\n    }\n    getEvent(key, values) {\n        return __classPrivateFieldGet(this, _Interface_instances, \"m\", _Interface_getEvent).call(this, key, values || null, true);\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(key, values) {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of __classPrivateFieldGet(this, _Interface_errors, \"f\").values()) {\n                if (selector === this.getSelector(fragment)) {\n                    return fragment;\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"selector\", key);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching = [];\n            for (const [name, fragment] of __classPrivateFieldGet(this, _Interface_errors, \"f\")) {\n                if (name.split(\"(\" /* fix:) */)[0] === key) {\n                    matching.push(fragment);\n                }\n            }\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", key);\n            }\n            else if (matching.length > 1) {\n                // @TODO: refine by Typed\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", key);\n            }\n            return matching[0];\n        }\n        // Normalize the signature and lookup the function\n        const result = __classPrivateFieldGet(this, _Interface_errors, \"f\").get(ErrorFragment.fromString(key).format());\n        if (result) {\n            return result;\n        }\n        return logger.throwArgumentError(\"no matching error\", \"signature\", key);\n    }\n    // Get the 4-byte selector used by Solidity to identify a function\n    getSelector(fragment) {\n        /*\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n        */\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    getEventTopic(fragment) {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    _decodeParams(params, data) {\n        return __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        if (dataSlice(data, 0, 4) !== this.getSelector(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", data);\n        }\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return concat([\n            this.getSelector(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getFunction(fragment);\n        }\n        if (dataSlice(data, 0, 4) !== this.getSelector(fragment)) {\n            logger.throwArgumentError(`data signature does not match function ${fragment.name}.`, \"data\", data);\n        }\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getFunction(fragment);\n        }\n        return concat([\n            this.getSelector(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]);\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getFunction(fragment);\n        }\n        let message = \"invalid length for result data\";\n        const bytes = arrayify(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(fragment.outputs, bytes);\n            }\n            catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n        // Call returned data with no error, but the data is junk\n        return logger.throwError(message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n    makeError(fragment, _data, tx) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getFunction(fragment);\n        }\n        const data = logger.getBytes(_data);\n        let args = undefined;\n        if (tx) {\n            try {\n                args = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(fragment.inputs, tx.data || \"0x\");\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n        let errorArgs = undefined;\n        let errorName = undefined;\n        let errorSignature = undefined;\n        let reason = \"unknown reason\";\n        if (data.length === 0) {\n            reason = \"missing error reason\";\n        }\n        else if ((data.length % 32) === 4) {\n            const selector = hexlify(data.slice(0, 4));\n            const builtin = BuiltinErrors[selector];\n            if (builtin) {\n                try {\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    errorArgs = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(builtin.inputs, data.slice(4));\n                    reason = builtin.reason(...errorArgs);\n                }\n                catch (error) {\n                    console.log(error); // @TODO: remove\n                }\n            }\n            else {\n                reason = \"unknown custom error\";\n                try {\n                    const error = this.getError(selector);\n                    errorName = error.name;\n                    errorSignature = error.format();\n                    reason = `custom error: ${errorSignature}`;\n                    try {\n                        errorArgs = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(error.inputs, data.slice(4));\n                    }\n                    catch (error) {\n                        reason = `custom error: ${errorSignature} (coult not decode error data)`;\n                    }\n                }\n                catch (error) {\n                    console.log(error); // @TODO: remove\n                }\n            }\n        }\n        return logger.makeError(\"call revert exception\", \"CALL_EXCEPTION\", {\n            data: hexlify(data), transaction: null,\n            method: fragment.name, signature: fragment.format(), args,\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(__classPrivateFieldGet(this, _Interface_abiCoder, \"f\").encode(functionFragment.outputs, values || []));\n    }\n    /*\n        spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n            const promises: Array<Promise<>> = [ ];\n            const process = function(type: ParamType, value: any): any {\n                if (type.baseType === \"array\") {\n                    return descend(type.child\n                }\n                if (type. === \"address\") {\n                }\n            };\n    \n            const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n                if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n                \n            };\n    \n            const result: Array<any> = [ ];\n            values.forEach((value, index) => {\n                if (value == null) {\n                    topics.push(null);\n                } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                    logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n                } else if (Array.isArray(value)) {\n                    topics.push(value.map((value) => encodeTopic(param, value)));\n                } else {\n                    topics.push(encodeTopic(param, value));\n                }\n            });\n        }\n    */\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), \"UNEXPECTED_ARGUMENT\", {\n                count: values.length,\n                expectedCount: eventFragment.inputs.length\n            });\n        }\n        const topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").encode([\"address\"], [value]);\n            }\n            return zeroPadLeft(hexlify(value), 32);\n            //@TOOD should probably be return toHex(value, 32)\n        };\n        values.forEach((value, index) => {\n            const param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(__classPrivateFieldGet(this, _Interface_abiCoder, \"f\").encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            const eventTopic = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== eventTopic) {\n                logger.throwArgumentError(\"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            }\n            topics = topics.slice(1);\n        }\n        const indexed = [];\n        const nonIndexed = [];\n        const dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        const resultIndexed = (topics != null) ? __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(indexed, concat(topics)) : null;\n        const resultNonIndexed = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(nonIndexed, data, true);\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values = [];\n        const keys = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            let value = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n                }\n                else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n                }\n                else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        value = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    value = error;\n                }\n            }\n            values.push(value);\n            keys.push(param.name || null);\n        });\n        return Result.fromItems(values, keys);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        const data = logger.getBytes(tx.data, \"tx.data\");\n        const value = logger.getBigInt((tx.value != null) ? tx.value : 0, \"tx.value\");\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n        if (!fragment) {\n            return null;\n        }\n        const args = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, this.getSelector(fragment), args, value);\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        const fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription(fragment, this.getEventTopic(fragment), this.decodeEventLog(fragment, log.data, log.topics));\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n        if (!fragment) {\n            return null;\n        }\n        const args = __classPrivateFieldGet(this, _Interface_abiCoder, \"f\").decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, this.getSelector(fragment), args);\n    }\n    static from(value) {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) {\n            return value;\n        }\n        // JSON\n        if (typeof (value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        // Maybe an interface from an older version, or from a symlinked copy\n        if (typeof (value.format) === \"function\") {\n            return new Interface(value.format(FormatType.json));\n        }\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n_Interface_errors = new WeakMap(), _Interface_events = new WeakMap(), _Interface_functions = new WeakMap(), _Interface_abiCoder = new WeakMap(), _Interface_instances = new WeakSet(), _Interface_getFunction = function _Interface_getFunction(key, values, forceUnique) {\n    // Selector\n    if (isHexString(key)) {\n        const selector = key.toLowerCase();\n        for (const fragment of __classPrivateFieldGet(this, _Interface_functions, \"f\").values()) {\n            if (selector === this.getSelector(fragment)) {\n                return fragment;\n            }\n        }\n        logger.throwArgumentError(\"no matching function\", \"selector\", key);\n    }\n    // It is a bare name, look up the function (will return null if ambiguous)\n    if (key.indexOf(\"(\") === -1) {\n        const matching = [];\n        for (const [name, fragment] of __classPrivateFieldGet(this, _Interface_functions, \"f\")) {\n            if (name.split(\"(\" /* fix:) */)[0] === key) {\n                matching.push(fragment);\n            }\n        }\n        if (values) {\n            const lastValue = (values.length > 0) ? values[values.length - 1] : null;\n            let valueLength = values.length;\n            let allowOptions = true;\n            if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                allowOptions = false;\n                valueLength--;\n            }\n            // Remove all matches that don't have a compatible length. The args\n            // may contain an overrides, so the match may have n or n - 1 parameters\n            for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs.length;\n                if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                    matching.splice(i, 1);\n                }\n            }\n            // Remove all matches that don't match the Typed signature\n            for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs;\n                for (let j = 0; j < values.length; j++) {\n                    // Not a typed value\n                    if (!Typed.isTyped(values[j])) {\n                        continue;\n                    }\n                    // We are past the inputs\n                    if (j >= inputs.length) {\n                        if (values[j].type === \"overrides\") {\n                            continue;\n                        }\n                        matching.splice(i, 1);\n                        break;\n                    }\n                    // Make sure the value type matches the input type\n                    if (values[j].type !== inputs[j].baseType) {\n                        matching.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        // We found a single matching signature with an overrides, but the\n        // last value is something that cannot possibly be an options\n        if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n            const lastArg = values[values.length - 1];\n            if (lastArg == null || Array.isArray(lastArg) || typeof (lastArg) !== \"object\") {\n                matching.splice(0, 1);\n            }\n        }\n        if (matching.length === 0) {\n            logger.throwArgumentError(\"no matching function\", \"name\", key);\n        }\n        else if (matching.length > 1 && forceUnique) {\n            const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n            logger.throwArgumentError(`multiple matching functions (i.e. ${matchStr})`, \"name\", key);\n        }\n        return matching[0];\n    }\n    // Normalize the signature and lookup the function\n    const result = __classPrivateFieldGet(this, _Interface_functions, \"f\").get(FunctionFragment.fromString(key).format());\n    if (result) {\n        return result;\n    }\n    return logger.throwArgumentError(\"no matching function\", \"signature\", key);\n}, _Interface_getEvent = function _Interface_getEvent(key, values, forceUnique) {\n    // EventTopic\n    if (isHexString(key)) {\n        const eventTopic = key.toLowerCase();\n        for (const fragment of __classPrivateFieldGet(this, _Interface_events, \"f\").values()) {\n            if (eventTopic === this.getEventTopic(fragment)) {\n                return fragment;\n            }\n        }\n        logger.throwArgumentError(\"no matching event\", \"eventTopic\", key);\n    }\n    // It is a bare name, look up the function (will return null if ambiguous)\n    if (key.indexOf(\"(\") === -1) {\n        const matching = [];\n        for (const [name, fragment] of __classPrivateFieldGet(this, _Interface_events, \"f\")) {\n            if (name.split(\"(\" /* fix:) */)[0] === key) {\n                matching.push(fragment);\n            }\n        }\n        if (values) {\n            // Remove all matches that don't have a compatible length.\n            for (let i = matching.length - 1; i >= 0; i--) {\n                if (matching[i].inputs.length < values.length) {\n                    matching.splice(i, 1);\n                }\n            }\n            // Remove all matches that don't match the Typed signature\n            for (let i = matching.length - 1; i >= 0; i--) {\n                const inputs = matching[i].inputs;\n                for (let j = 0; j < values.length; j++) {\n                    // Not a typed value\n                    if (!Typed.isTyped(values[j])) {\n                        continue;\n                    }\n                    // Make sure the value type matches the input type\n                    if (values[j].type !== inputs[j].baseType) {\n                        matching.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        if (matching.length === 0) {\n            logger.throwArgumentError(\"no matching event\", \"name\", key);\n        }\n        else if (matching.length > 1 && forceUnique) {\n            // @TODO: refine by Typed\n            logger.throwArgumentError(\"multiple matching events\", \"name\", key);\n        }\n        return matching[0];\n    }\n    // Normalize the signature and lookup the function\n    const result = __classPrivateFieldGet(this, _Interface_events, \"f\").get(EventFragment.fromString(key).format());\n    if (result) {\n        return result;\n    }\n    return logger.throwArgumentError(\"no matching event\", \"signature\", key);\n};\n//# sourceMappingURL=interface.js.map","export const version = \"@ethersproject/web@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { version } from \"./_version.js\";\nimport { Logger } from \"@ethersproject/logger\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FetchResponse_props, _FetchResponse_error;\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { defineProperties, getStore } from \"@ethersproject/properties\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { logger } from \"./logger.js\";\n;\nexport class FetchResponse {\n    constructor(statusCode, statusMessage, headers, body, request) {\n        _FetchResponse_props.set(this, void 0);\n        _FetchResponse_error.set(this, void 0);\n        __classPrivateFieldSet(this, _FetchResponse_props, {\n            statusCode,\n            statusMessage,\n            headers: Object.freeze(Object.assign({}, Object.keys(headers).reduce((accum, k) => {\n                accum[k.toLowerCase()] = headers[k];\n                return accum;\n            }, {}))),\n            body: ((body == null) ? null : new Uint8Array(body)),\n            request: (request || null),\n        }, \"f\");\n        __classPrivateFieldSet(this, _FetchResponse_error, { message: \"\" }, \"f\");\n    }\n    toString() {\n        const body = getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"body\");\n        return `<Response status=${this.statusCode} body=${body ? hexlify(body) : \"null\"}>`;\n    }\n    get statusCode() { return getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"statusCode\"); }\n    get statusMessage() { return getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"statusMessage\"); }\n    get headers() { return getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"headers\"); }\n    get body() {\n        const body = getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"body\");\n        return (body == null) ? null : new Uint8Array(body);\n    }\n    get bodyText() {\n        try {\n            const body = getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"body\");\n            return (body == null) ? \"\" : toUtf8String(body);\n        }\n        catch (error) {\n            return logger.throwError(\"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n    get bodyJson() {\n        try {\n            return JSON.parse(this.bodyText);\n        }\n        catch (error) {\n            return logger.throwError(\"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n    [(_FetchResponse_props = new WeakMap(), _FetchResponse_error = new WeakMap(), Symbol.iterator)]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    makeServerError(message, error) {\n        let statusMessage;\n        if (!message) {\n            message = `${this.statusCode} ${this.statusMessage}`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${message})`;\n        }\n        else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${this.statusCode} ${this.statusMessage}; ${message})`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers, this.body, getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"request\") || undefined);\n        __classPrivateFieldSet(response, _FetchResponse_error, { message, error }, \"f\");\n        return response;\n    }\n    throwThrottleError(message, stall) {\n        if (stall == null) {\n            stall = 1000;\n        }\n        if (typeof (stall) !== \"number\" || !Number.isInteger(stall) || stall < 0) {\n            logger.throwArgumentError(\"invalid stall timeout\", \"stall\", stall);\n        }\n        const error = new Error(message || \"throttling requests\");\n        defineProperties(error, { stall, throttle: true });\n        throw error;\n    }\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    hasBody() {\n        const body = getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"body\");\n        return (body != null);\n    }\n    get request() { return getStore(__classPrivateFieldGet(this, _FetchResponse_props, \"f\"), \"request\"); }\n    ok() {\n        return (__classPrivateFieldGet(this, _FetchResponse_error, \"f\").message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n    assertOk() {\n        if (this.ok()) {\n            return;\n        }\n        let { message, error } = __classPrivateFieldGet(this, _FetchResponse_error, \"f\");\n        if (message === \"\") {\n            message = `server response ${this.statusCode} ${this.statusMessage}`;\n        }\n        logger.throwError(message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error\n        });\n    }\n}\n//# sourceMappingURL=response.js.map","import { logger } from \"./logger.js\";\nimport { FetchResponse } from \"./response.js\";\nexport async function getUrl(req, timeout) {\n    const protocol = req.url.split(\":\")[0].toLowerCase();\n    if (protocol !== \"http\" && protocol !== \"https\") {\n        logger.throwError(`unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n    }\n    if (req.credentials && !req.allowInsecureAuthentication) {\n        logger.throwError(\"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n    }\n    const init = {\n        method: req.method,\n        headers: new Headers(Array.from(req)),\n        body: req.body || undefined,\n    };\n    const resp = await fetch(req.url, init);\n    const headers = {};\n    resp.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n    });\n    const body = new Uint8Array(await resp.arrayBuffer());\n    return new FetchResponse(resp.status, resp.statusText, headers, body, req);\n}\n//# sourceMappingURL=get-url-browser.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FetchRequest_props;\nimport { getStore, setStore } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { logger } from \"./logger.js\";\nfunction check(value, type, name) {\n    if (typeof (value) !== type) {\n        throw new Error(`invalid ${name}`);\n    }\n    return value;\n}\nexport class FetchRequest {\n    constructor(url) {\n        _FetchRequest_props.set(this, void 0);\n        __classPrivateFieldSet(this, _FetchRequest_props, {\n            allowInsecure: false,\n            gzip: false,\n            headers: {},\n            method: \"\",\n            timeout: 300,\n            url: check(url, \"string\", \"url\")\n        }, \"f\");\n    }\n    // URL\n    get url() { return getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"url\"); }\n    set url(url) {\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"url\", check(url, \"string\", \"url\"));\n    }\n    // Body\n    get body() {\n        const body = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\");\n        if (body == null) {\n            return null;\n        }\n        if (this.isFrozen()) {\n            return new Uint8Array(body);\n        }\n        return body;\n    }\n    set body(body) {\n        if (body == null) {\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\", undefined);\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\", undefined);\n        }\n        else if (typeof (body) === \"string\") {\n            // @TODO: utf8-check\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\", toUtf8Bytes(body));\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\", \"text/plain\");\n        }\n        else if (body instanceof Uint8Array) {\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\", body);\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\", \"application/octet-stream\");\n        }\n        else if (typeof (body) === \"object\") {\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\", toUtf8Bytes(JSON.stringify(body)));\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\", \"application/json\");\n        }\n        else {\n            throw new Error(\"invalid body\");\n        }\n    }\n    hasBody() {\n        return (getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\") != null);\n    }\n    // Method (default: GET with no body, POST with a body)\n    get method() {\n        const method = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"method\");\n        if (method) {\n            return method.toUpperCase();\n        }\n        if (this.body) {\n            return \"POST\";\n        }\n        return \"GET\";\n    }\n    set method(method) {\n        if (method == null) {\n            method = \"\";\n        }\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"method\", check(method, \"string\", \"method\"));\n    }\n    // Headers (automatically fills content-type if not explicitly set)\n    get headers() {\n        const headers = Object.assign({}, getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\"));\n        const bodyType = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\");\n        if (this.credentials) { /* TODO */ }\n        ;\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n        if (headers[\"content-type\"] == null && bodyType) {\n            headers[\"content-type\"] = bodyType;\n        }\n        if (this.body) {\n            headers[\"content-length\"] = String(this.body.length);\n        }\n        return Object.freeze(headers);\n    }\n    getHeader(key) {\n        return this.headers[key.toLowerCase()];\n    }\n    setHeader(key, value) {\n        const headers = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\");\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\", headers);\n        headers[check(key, \"string\", \"key\").toLowerCase()] = String(value);\n    }\n    clearHeaders() {\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\", {});\n    }\n    [(_FetchRequest_props = new WeakMap(), Symbol.iterator)]() {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [key, headers[key]], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    // Configure an Authorization header\n    get credentials() {\n        return getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"creds\") || null;\n    }\n    setCredentials(username, password) {\n        if (username.match(/:/)) {\n            logger.throwArgumentError(\"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        }\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"creds\", `${username}:${password}`);\n        // @TODO:\n        //const auth = username + \":\" + password;\n        //this.setHeader(\"authorization\", \"Basic \" + base64Encode(toUtf8Bytes(auth)))\n        //this.setHeader(\"authorization\", \"Basic TODO:\" + auth);\n    }\n    // Configure the request to allow gzipped responses\n    get allowGzip() {\n        return getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"gzip\");\n    }\n    set allowGzip(value) {\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"gzip\", !!value);\n    }\n    // Allow credentials to be sent over an insecure (non-HTTPS) channel\n    get allowInsecureAuthentication() {\n        return !!getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"allowInsecure\");\n    }\n    set allowInsecureAuthentication(value) {\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"allowInsecure\", check(value, \"boolean\", \"allowInsecureAuthentication\"));\n    }\n    // Timeout (seconds)\n    get timeout() { return getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"timeout\"); }\n    set timeout(timeout) {\n        timeout = check(timeout, \"number\", \"timeout\");\n        if (timeout <= 0) {\n            throw new Error(\"invalid timerout\");\n        }\n        setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"timeout\", timeout);\n    }\n    redirect(location) {\n        // Redirection; for now we only support absolute locataions\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n        if (this.method !== \"GET\" || (current === \"https\" && target === \"http\") ||\n            !location.match(/^https?:/)) {\n            return logger.throwError(`unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n                operation: `redirect(${this.method} ${JSON.stringify(this.url)} => ${JSON.stringify(location)})`\n            });\n        }\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        setStore(__classPrivateFieldGet(req, _FetchRequest_props, \"f\"), \"body\", getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\"));\n        setStore(__classPrivateFieldGet(req, _FetchRequest_props, \"f\"), \"headers\", Object.assign({}, getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\")));\n        setStore(__classPrivateFieldGet(req, _FetchRequest_props, \"f\"), \"bodyType\", getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\"));\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n        return req;\n    }\n    clone() {\n        const clone = new FetchRequest(this.url);\n        // Preserve \"default method\" (i.e. null)\n        setStore(__classPrivateFieldGet(clone, _FetchRequest_props, \"f\"), \"method\", getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"method\"));\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        const body = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\");\n        setStore(__classPrivateFieldGet(clone, _FetchRequest_props, \"f\"), \"body\", (body == null) ? undefined : new Uint8Array(body));\n        setStore(__classPrivateFieldGet(clone, _FetchRequest_props, \"f\"), \"bodyType\", getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"bodyType\"));\n        // Preserve \"default headers\"\n        setStore(__classPrivateFieldGet(clone, _FetchRequest_props, \"f\"), \"headers\", Object.assign({}, getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"headers\")));\n        // Credentials is readonly, so we copy internally\n        setStore(__classPrivateFieldGet(clone, _FetchRequest_props, \"f\"), \"creds\", getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"creds\"));\n        if (this.allowGzip) {\n            clone.allowGzip = true;\n        }\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) {\n            clone.allowInsecureAuthentication = true;\n        }\n        return clone;\n    }\n    freeze() {\n        // Copy the body so any changes to previous access do not modify it\n        const body = getStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\");\n        if (body != null) {\n            setStore(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"), \"body\", new Uint8Array(body));\n        }\n        Object.freeze(__classPrivateFieldGet(this, _FetchRequest_props, \"f\").headers);\n        Object.freeze(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"));\n        return this;\n    }\n    isFrozen() {\n        return Object.isFrozen(__classPrivateFieldGet(this, _FetchRequest_props, \"f\"));\n    }\n}\n//# sourceMappingURL=request.js.map","import { decodeBase64 } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { getUrl } from \"./get-url.js\"; /*-browser*/\nimport { logger } from \"./logger.js\";\nimport { FetchRequest } from \"./request.js\";\nimport { FetchResponse } from \"./response.js\";\nasync function delay(duration) {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n// @TODO: Add option for global preflightRequest?\nfunction getTime() { return (new Date()).getTime(); }\nfunction unpercent(value) {\n    value = value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    });\n    return toUtf8Bytes(value);\n}\nlet lockGateways = false;\nlet ipfsGateway = \"https:/\\/gateway.ipfs.io/\";\nlet arGateway = \"https:/\\/gateway.ar.io/\";\nexport async function fetchData(connection) {\n    const conn = (typeof (connection) === \"string\") ? {\n        request: new FetchRequest(connection)\n    } : (connection instanceof FetchRequest) ? {\n        request: connection\n    } : Object.assign({}, connection);\n    if (conn.request == null) {\n        return logger.throwArgumentError(\"missing request\", \"connection\", connection);\n    }\n    let req = conn.request.clone().freeze();\n    switch (conn.request.url.split(\":\")[0]) {\n        case \"data\": {\n            const match = req.url.match(/^data:([^;:]*)?(;base64)?,(.*)$/i);\n            if (match) {\n                try {\n                    const headers = {\n                        \"content-type\": (match[1] ? match[1] : \"text/plain\")\n                    };\n                    const body = (match[2] ? decodeBase64(match[3]) : unpercent(match[3]));\n                    return new FetchResponse(200, \"OK\", headers, body, req.clone());\n                }\n                catch (error) {\n                    return new FetchResponse(400, \"BAD REQUEST (invalid base64 encoded data)\", {}, null, req.clone());\n                }\n            }\n            return new FetchResponse(500, \"INTERNAL SERVER ERROR (unsupported dara URI)\", {}, null, req.clone());\n        }\n        case \"ipfs\":\n        case \"ipns\":\n        case \"ar\":\n            throw new Error(\"not implemented yet\");\n            console.log(\"FF\", arGateway, ipfsGateway);\n        case \"http\":\n        case \"https\":\n            break;\n        default:\n            throw new Error(\"unsupported scheme\");\n    }\n    const attempts = (conn.throttleLimit != null) ? conn.throttleLimit : 12;\n    if (!Number.isInteger(attempts) || attempts < 1) {\n        return logger.throwArgumentError(\"invalid throttleLimit\", \"connection\", connection);\n    }\n    const slotInterval = (conn.throttleSlotInterval != null) ? conn.throttleSlotInterval : 100;\n    //logger.assertInteger(slotInterval, \"connection.throttleSlotInterval\", connection.throttleSlotInterval);\n    if (!Number.isInteger(slotInterval) || attempts < 0) {\n        return logger.throwArgumentError(\"invalid throttleSlotInterval\", \"connection\", connection);\n    }\n    const retryFunc = (conn.throttleRetry != null) ? conn.throttleRetry : null;\n    if (retryFunc && typeof (retryFunc) !== \"function\") {\n        return logger.throwArgumentError(\"invalid throttleRetry callback\", \"connection\", connection);\n    }\n    const preflightRequest = conn.preflightRequest || null;\n    if (preflightRequest && typeof (preflightRequest) !== \"function\") {\n        return logger.throwArgumentError(\"invalid preflightRequest callback\", \"connection\", connection);\n    }\n    const processResponse = conn.processResponse || null;\n    if (processResponse && typeof (processResponse) !== \"function\") {\n        return logger.throwArgumentError(\"invalid processResponse callback\", \"connection\", connection);\n    }\n    // Start time of this fetch (for timeouts)\n    const t0 = getTime();\n    let response = null;\n    for (let a = 0; a < attempts; a++) {\n        let request = req.clone();\n        if (preflightRequest) {\n            request = (await preflightRequest(request.freeze())).clone();\n        }\n        const remainingTime = getTime() - t0;\n        if (remainingTime < 0) {\n            return logger.throwError(\"timeout\", \"TIMEOUT\", { operation: \"request\", request });\n        }\n        response = await getUrl(request, remainingTime);\n        // Retry logic (server forced)\n        if (a < attempts) {\n            if (response.statusCode === 301 || response.statusCode === 302) {\n                // Try following the redirect; the request will through if the\n                // type of redirect is not supported\n                try {\n                    req = request.redirect(response.headers.location || \"\");\n                    continue;\n                }\n                catch (error) { }\n                ;\n                // Things won't get any better on another attempt; abort\n                return response;\n            }\n            else if (response.statusCode === 429) {\n                if (retryFunc == null || (await retryFunc(request.freeze(), response, a))) {\n                    const retryAfter = response.headers[\"retry-after\"];\n                    if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                        await delay(parseInt(retryAfter));\n                    }\n                    else {\n                        await delay(slotInterval * Math.trunc(Math.random() * Math.pow(2, a)));\n                    }\n                    continue;\n                }\n            }\n        }\n        // Optional post-processing response; also allows trapping\n        // HTTP status errors and doing \"something different\",\n        // including any further throttling.\n        if (processResponse) {\n            try {\n                return await processResponse(request, response);\n            }\n            catch (error) {\n                // response.throwThrottleError\n                if (error.throttle && typeof (error.stall) === \"number\") {\n                    if (a < attempts) {\n                        await delay(error.stall);\n                        continue;\n                    }\n                    // Too many retries should behave more like a 5xx server error\n                    return response.makeServerError(\"exceeded maximum retry limit\", error);\n                }\n                // Something went wrong during processing; throw a 5xx server error\n                response.makeServerError(\"error in post-processing function\", error).assertOk();\n            }\n        }\n        return response;\n    }\n    // Too many retries should behave more like a 5xx server error\n    return response.makeServerError(\"exceeded maximum retry limit\");\n}\nfetchData.lock = function () {\n    lockGateways = true;\n};\n// @TODO: Allow a master Gateway function\nfetchData.setGateway = function (gateway) {\n};\nfetchData.setIpfsGateway = function (gateway) {\n    if (lockGateways) {\n        logger.throwError(\"gateways are locked\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"setIpfsGateway\"\n        });\n    }\n    ipfsGateway = gateway;\n};\nfetchData.setArGateway = function (gateway) {\n    if (lockGateways) {\n        logger.throwError(\"gateways are locked\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"setArGateway\"\n        });\n    }\n    arGateway = gateway;\n};\n//# sourceMappingURL=fetch-data.js.map","export const version = \"@ethersproject/providers@6.0.0-beta.2\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _EnsResolver_supports2544, _EnsResolver_getResolver;\nimport { concat, dataSlice, hexlify, zeroPadLeft } from \"@ethersproject/bytes\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { encodeBase58, toArray, toNumber } from \"@ethersproject/math\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchData } from \"@ethersproject/web\";\nimport { logger } from \"./logger.js\";\nconst BN_1 = BigInt(1);\nconst Empty = new Uint8Array([]);\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = toNumber(dataSlice(result, start, start + 32));\n    const length = toNumber(dataSlice(result, offset, offset + 32));\n    return dataSlice(result, offset + 32, offset + 32 + length);\n}\nfunction parseString(result, start) {\n    try {\n        const bytes = parseBytes(result, start);\n        if (bytes != null) {\n            return toUtf8String(bytes);\n        }\n    }\n    catch (error) { }\n    return null;\n}\nfunction numPad(value) {\n    const result = toArray(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(Empty);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = logger.getBytes(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return concat(result);\n}\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\n;\n;\nexport class MulticoinProviderPlugin {\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    validate(proivder) {\n        return this;\n    }\n    supportsCoinType(coinType) {\n        return false;\n    }\n    async encodeAddress(coinType, address) {\n        throw new Error(\"unsupported coin\");\n    }\n    async decodeAddress(coinType, data) {\n        throw new Error(\"unsupported coin\");\n    }\n}\nconst BasicMulticoinPluginId = \"org.ethers.provider-prugins.basicmulticoin\";\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nexport class EnsResolver {\n    constructor(provider, address, name) {\n        // For EIP-2544 names, the ancestor that provided the resolver\n        _EnsResolver_supports2544.set(this, void 0);\n        defineProperties(this, { provider, address, name });\n        __classPrivateFieldSet(this, _EnsResolver_supports2544, null, \"f\");\n    }\n    async supportsWildcard() {\n        if (!__classPrivateFieldGet(this, _EnsResolver_supports2544, \"f\")) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            __classPrivateFieldSet(this, _EnsResolver_supports2544, this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return (logger.getBigInt(result) === BN_1);\n            }).catch((error) => {\n                if (error.code === \"CALL_EXCEPTION\") {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                __classPrivateFieldSet(this, _EnsResolver_supports2544, null, \"f\");\n                throw error;\n            }), \"f\");\n        }\n        return await __classPrivateFieldGet(this, _EnsResolver_supports2544, \"f\");\n    }\n    async _fetch(selector, parameters = \"0x\") {\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const addrData = concat([selector, namehash(this.name), parameters]);\n        const tx = {\n            to: this.address,\n            enableCcipRead: true,\n            data: addrData\n        };\n        // Wildcard support; use EIP-2544 to resolve the request\n        let wrapped = false;\n        if (await this.supportsWildcard()) {\n            wrapped = true;\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = concat([\"0x9061b923\", encodeBytes([dnsEncode(this.name), addrData])]);\n        }\n        try {\n            let data = await this.provider.call(tx);\n            if ((logger.getBytes(data).length % 32) === 4) {\n                return logger.throwError(\"resolver threw error\", \"CALL_EXCEPTION\", {\n                    transaction: tx, data\n                });\n            }\n            if (wrapped) {\n                return parseBytes(data, 0);\n            }\n            return data;\n        }\n        catch (error) {\n            if (error.code !== \"CALL_EXCEPTION\") {\n                throw error;\n            }\n        }\n        return null;\n    }\n    async getAddress(coinType = 60) {\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n                // No address\n                if (result === \"0x\" || result === HashZero) {\n                    return null;\n                }\n                const network = await this.provider.getNetwork();\n                return network.formatter.callAddress(result);\n            }\n            catch (error) {\n                if (error.code === \"CALL_EXCEPTION\") {\n                    return null;\n                }\n                throw error;\n            }\n        }\n        let coinPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) {\n                continue;\n            }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n        if (coinPlugin == null) {\n            return null;\n        }\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = parseBytes((await this._fetch(\"0xf1cb7e06\", numPad(coinType))) || \"0x\", 0);\n        // No address\n        if (data == null || data === \"0x\") {\n            return null;\n        }\n        // Compute the address\n        const address = await coinPlugin.encodeAddress(coinType, data);\n        if (address != null) {\n            return address;\n        }\n        return logger.throwError(`invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${coinType})`,\n            info: { coinType, data }\n        });\n    }\n    async getText(key) {\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        const calldata = logger.getBytes(concat([numPad(64), numPad(keyBytes.length), keyBytes]));\n        const hexBytes = parseBytes((await this._fetch(\"0x59d1d43c\", bytesPad(calldata))) || \"0x\", 0);\n        if (hexBytes == null || hexBytes === \"0x\") {\n            return null;\n        }\n        return toUtf8String(hexBytes);\n    }\n    async getContentHash() {\n        // keccak256(\"contenthash()\")\n        const hexBytes = parseBytes((await this._fetch(\"0xbc1c58d1\")) || \"0x\", 0);\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") {\n            return null;\n        }\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = hexBytes.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\" : \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${scheme}:/\\/${encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${swarm[1]}`;\n        }\n        return logger.throwError(`invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data: hexBytes }\n        });\n    }\n    async getAvatar() {\n        return (await this._getAvatar()).url;\n    }\n    async _getAvatar() {\n        const linkage = [{ type: \"name\", value: this.name }];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                throw new Error(\"!avatar\");\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) {\n                    continue;\n                }\n                const scheme = match[1].toLowerCase();\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                        linkage.push({ type: scheme, value: avatar });\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            throw new Error(\"!owner\");\n                        }\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: `!${scheme}caip`, value: (match[2] || \"\") });\n                            throw new Error(\"!caip\");\n                        }\n                        const formatter = (await this.provider.getNetwork()).formatter;\n                        const addr = formatter.address(comps[0]);\n                        const tokenId = numPad(comps[1]);\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = formatter.callAddress(await this.provider.call({\n                                to: addr, data: concat([\"0x6352211e\", tokenId])\n                            }));\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                throw new Error(\"!owner\");\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n                        }\n                        else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = logger.getBigInt(await this.provider.call({\n                                to: addr, data: concat([\"0x00fdd58e\", zeroPadLeft(owner, 32), tokenId])\n                            }));\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                throw new Error(\"!balance\");\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: comps[0],\n                            data: concat([selector, tokenId])\n                        };\n                        let metadataUrl = parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            throw new Error(\"!metadata-url\");\n                        }\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", hexlify(tokenId).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n                        // Get the token metadata\n                        let metadata = {};\n                        const response = await fetchData(metadataUrl);\n                        response.assertOk();\n                        try {\n                            metadata = response.bodyJson;\n                        }\n                        catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            }\n                            catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                throw error;\n                            }\n                            throw error;\n                        }\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            throw new Error(\"!metadata\");\n                        }\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof (imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            throw new Error(\"!imageUrl\");\n                        }\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        }\n                        else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                throw new Error(\"!imageUrl-ipfs\");\n                            }\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n                        linkage.push({ type: \"url\", value: imageUrl });\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        }\n        catch (error) {\n            console.log(\"EE\", error);\n        }\n        return { linkage, url: null };\n    }\n    static async fromName(provider, name) {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") {\n                return null;\n            }\n            // Optimization since the eth node cannot change and does\n            // not have a wildcar resolver\n            if (name !== \"eth\" && currentName === \"eth\") {\n                return null;\n            }\n            // Check the current node for a resolver\n            const addr = await __classPrivateFieldGet(EnsResolver, _a, \"m\", _EnsResolver_getResolver).call(EnsResolver, provider, currentName);\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) {\n                    return null;\n                }\n                return resolver;\n            }\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n_a = EnsResolver, _EnsResolver_supports2544 = new WeakMap(), _EnsResolver_getResolver = async function _EnsResolver_getResolver(provider, name) {\n    const network = await provider.getNetwork();\n    const ensPlugin = network.getPlugin(\"org.ethers.plugins.ens\");\n    // No ENS...\n    if (!ensPlugin) {\n        return logger.throwError(\"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getResolver\", info: { network: network.name }\n        });\n    }\n    try {\n        // keccak256(\"resolver(bytes32)\")\n        const addrData = await provider.call({\n            to: ensPlugin.address,\n            data: concat([\"0x0178b8bf\", namehash(name)]),\n            enableCcipRead: true\n        });\n        const addr = network.formatter.callAddress(addrData);\n        if (addr === dataSlice(HashZero, 0, 20)) {\n            return null;\n        }\n        return addr;\n    }\n    catch (error) {\n        // ENS registry cannot throw errors on resolver(bytes32),\n        // so probably a link error\n        throw error;\n    }\n    return null;\n};\n//# sourceMappingURL=ens-resolver.js.map","export const version = \"@ethersproject/signing-key@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { version } from \"./_version.js\";\nimport { Logger } from \"@ethersproject/logger\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Signature_props;\nimport { getStore, setStore } from \"@ethersproject/properties\";\nimport { arrayify, concat, dataLength, hexlify, isHexString } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nconst Zero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport class Signature {\n    constructor(guard, r, s, v) {\n        _Signature_props.set(this, void 0);\n        logger.assertPrivate(guard, _guard, \"Signature\");\n        __classPrivateFieldSet(this, _Signature_props, { r, s, v, networkV: null }, \"f\");\n    }\n    get r() { return getStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"r\"); }\n    set r(value) {\n        if (dataLength(value) !== 32) {\n            logger.throwArgumentError(\"invalid r\", \"value\", value);\n        }\n        setStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"r\", hexlify(value));\n    }\n    get s() { return getStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"s\"); }\n    set s(value) {\n        if (dataLength(value) !== 32) {\n            logger.throwArgumentError(\"invalid r\", \"value\", value);\n        }\n        else if (arrayify(value)[0] & 0x80) {\n            logger.throwArgumentError(\"non-canonical s\", \"value\", value);\n        }\n        setStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"s\", hexlify(value));\n    }\n    get v() { return getStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"v\"); }\n    set v(value) {\n        const v = logger.getNumber(value, \"value\");\n        if (v !== 27 && v !== 28) {\n            throw new Error(\"@TODO\");\n        }\n        setStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"v\", v);\n    }\n    get networkV() { return getStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"networkV\"); }\n    get legacyChainId() {\n        const v = this.networkV;\n        if (v == null) {\n            return null;\n        }\n        return Signature.getChainId(v);\n    }\n    get yParity() {\n        if (this.v === 27) {\n            return 0;\n        }\n        return 1;\n        /*\n        // When v is 0 or 1 it is the recid directly\n        if (this.v.isZero()) { return 0; }\n        if (this.v.eq(1)) { return 1; }\n\n        // Otherwise, odd (e.g. 27) is 0 and even (e.g. 28) is 1\n        return this.v.and(1).isZero() ? 1: 0;\n        */\n    }\n    get yParityAndS() {\n        // The EIP-2098 compact representation\n        const yParityAndS = arrayify(this.s);\n        if (this.yParity) {\n            yParityAndS[0] |= 0x80;\n        }\n        return hexlify(yParityAndS);\n    }\n    get compactSerialized() {\n        return concat([this.r, this.yParityAndS]);\n    }\n    get serialized() {\n        return concat([this.r, this.s, (this.yParity ? \"0x1c\" : \"0x1b\")]);\n    }\n    [(_Signature_props = new WeakMap(), Symbol.for('nodejs.util.inspect.custom'))]() {\n        return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n    }\n    clone() {\n        if (getStore(__classPrivateFieldGet(this, _Signature_props, \"f\"), \"networkV\")) {\n            logger.throwError(\"cannot clone EIP-155 signatures\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"clone\"\n            });\n        }\n        const { r, s, v } = __classPrivateFieldGet(this, _Signature_props, \"f\");\n        return new Signature(_guard, r, s, v);\n    }\n    freeze() {\n        Object.freeze(__classPrivateFieldGet(this, _Signature_props, \"f\"));\n        return this;\n    }\n    isFrozen() {\n        return Object.isFrozen(__classPrivateFieldGet(this, _Signature_props, \"f\"));\n    }\n    toJSON() {\n        const { r, s, v, networkV } = this;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString() : null),\n            r, s, v,\n        };\n    }\n    static create() {\n        return new Signature(_guard, Zero, Zero, 27);\n    }\n    // Get the chain ID from an EIP-155 v\n    static getChainId(v) {\n        const bv = logger.getBigInt(v, \"v\");\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) {\n            return BN_0;\n        }\n        // Bad value for an EIP-155 v\n        if (bv < BN_35) {\n            logger.throwArgumentError(\"invalid EIP-155 v\", \"v\", v);\n        }\n        return (bv - BN_35) / BN_2;\n    }\n    // Get the EIP-155 v transformed for a given chainId\n    static getChainIdV(chainId, v) {\n        return (logger.getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n    // Convert an EIP-155 v into a normalized v\n    static getNormalizedV(v) {\n        const bv = logger.getBigInt(v);\n        if (bv == BN_0) {\n            return 27;\n        }\n        if (bv == BN_1) {\n            return 28;\n        }\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27 : 28;\n    }\n    static fromTransaction(r, s, _v) {\n        const v = logger.getBigInt(_v, \"v\");\n        const sig = Signature.from({ r, s, v });\n        setStore(__classPrivateFieldGet(sig, _Signature_props, \"f\"), \"networkV\", v);\n        return sig.freeze();\n    }\n    static from(sig) {\n        const throwError = (message) => {\n            return logger.throwArgumentError(message, \"signature\", sig);\n        };\n        if (typeof (sig) === \"string\") {\n            const bytes = logger.getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28 : 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            if (dataLength(sig) !== 65) {\n                const r = hexlify(sig.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                if (s[0] & 0x80) {\n                    throwError(\"non-canonical s\");\n                }\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n            return throwError(\"invlaid raw signature length\");\n        }\n        if (sig instanceof Signature) {\n            return sig.clone();\n        }\n        // Get r\n        const r = sig.r;\n        if (r == null) {\n            throwError(\"missing r\");\n        }\n        if (!isHexString(r, 32)) {\n            throwError(\"invalid r\");\n        }\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function (s, yParityAndS) {\n            if (s) {\n                if (!isHexString(s, 32)) {\n                    throwError(\"invalid s\");\n                }\n                return s;\n            }\n            if (yParityAndS) {\n                if (!isHexString(yParityAndS, 32)) {\n                    throwError(\"invalid yParityAndS\");\n                }\n                const bytes = arrayify(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n            return throwError(\"missing s\");\n        })(sig.s, sig.yParityAndS);\n        if (arrayify(s)[0] & 0x80) {\n            throwError(\"non-canonical s\");\n        }\n        // Get v; by any means necessary (we check consistency below)\n        const v = (function (v, yParityAndS, yParity) {\n            if (v) {\n                return Signature.getNormalizedV(v);\n            }\n            if (yParityAndS) {\n                if (!isHexString(yParityAndS, 32)) {\n                    throwError(\"invalid yParityAndS\");\n                }\n                return ((arrayify(yParityAndS)[0] & 0x80) ? 28 : 27);\n            }\n            if (yParity) {\n                switch (yParity) {\n                    case 0: return 27;\n                    case 1: return 28;\n                }\n                return throwError(\"invalid yParity\");\n            }\n            //if (chainId) { return BigNumber.from(chainId).and(1).sub(27); } // @TODO: check this\n            return throwError(\"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n        // @TODO: add chainId support\n        const result = new Signature(_guard, r, s, v);\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        if (\"yParity\" in sig && sig.yParity !== result.yParity) {\n            throwError(\"yParity mismatch\");\n        }\n        else if (\"yParityAndS\" in sig && sig.yParityAndS !== result.yParityAndS) {\n            throwError(\"yParityAndS mismatch\");\n        }\n        //if (sig.chainId && sig.chainId !== result.chainId) {\n        //}\n        return result;\n    }\n}\n//# sourceMappingURL=signature.js.map","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n)).toRawBytes();\n    const isValid = await schnorrVerify(sig, m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    let sig;\n    try {\n        sig = raw ? signature : SchnorrSignature.fromHex(signature);\n        if (raw)\n            sig.assertValidity();\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    const m = ensureBytes(message);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const e = await createChallenge(r, P, m);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n);\n        if (num === _0n || num === _1n)\n            throw new Error('Invalid private key');\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SigningKey_privateKey;\nimport * as secp256k1 from \"@noble/secp256k1\";\nimport { arrayify, concat, dataLength, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/crypto\";\nimport { toHex } from \"@ethersproject/math\";\nimport { Signature } from \"./signature.js\";\nimport { logger } from \"./logger.js\";\n// Make noble-secp256k1 sync\nsecp256k1.utils.hmacSha256Sync = function (key, ...messages) {\n    return arrayify(computeHmac(\"sha256\", key, concat(messages)));\n};\nexport class SigningKey {\n    constructor(privateKey) {\n        _SigningKey_privateKey.set(this, void 0);\n        logger.assertArgument((dataLength(privateKey) === 32), \"invalid private key length\", \"privateKey\", \"[REDACTED]\");\n        __classPrivateFieldSet(this, _SigningKey_privateKey, hexlify(privateKey), \"f\");\n    }\n    get privateKey() { return __classPrivateFieldGet(this, _SigningKey_privateKey, \"f\"); }\n    get publicKey() { return SigningKey.computePublicKey(__classPrivateFieldGet(this, _SigningKey_privateKey, \"f\")); }\n    get compressedPublicKey() { return SigningKey.computePublicKey(__classPrivateFieldGet(this, _SigningKey_privateKey, \"f\"), true); }\n    sign(digest) {\n        logger.assertArgument((dataLength(digest) === 32), \"invalid digest length\", \"digest\", digest);\n        const [sigDer, recid] = secp256k1.signSync(arrayify(digest), arrayify(__classPrivateFieldGet(this, _SigningKey_privateKey, \"f\")), {\n            recovered: true,\n            canonical: true\n        });\n        const sig = secp256k1.Signature.fromHex(sigDer);\n        return Signature.from({\n            r: toHex(\"0x\" + sig.r.toString(16), 32),\n            s: toHex(\"0x\" + sig.s.toString(16), 32),\n            v: (recid ? 0x1c : 0x1b)\n        }).freeze();\n    }\n    computeShardSecret(other) {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(arrayify(__classPrivateFieldGet(this, _SigningKey_privateKey, \"f\")), pubKey));\n    }\n    static computePublicKey(key, compressed) {\n        let bytes = logger.getBytes(key, \"key\");\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n        const point = secp256k1.Point.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n    static recoverPublicKey(digest, signature) {\n        const sig = Signature.from(signature);\n        const der = secp256k1.Signature.fromCompact(arrayify(concat([sig.r, sig.s]))).toDERRawBytes();\n        const pubKey = secp256k1.recoverPublicKey(arrayify(digest), der, sig.yParity);\n        if (pubKey != null) {\n            return hexlify(pubKey);\n        }\n        return logger.throwArgumentError(\"invalid signautre for digest\", \"signature\", signature);\n    }\n    static _addPoints(p0, p1, compressed) {\n        const pub0 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.Point.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed);\n    }\n}\n_SigningKey_privateKey = new WeakMap();\n/*\nconst key = new SigningKey(\"0x1234567890123456789012345678901234567890123456789012345678901234\");\nconsole.log(key);\nconsole.log(key.sign(\"0x1234567890123456789012345678901234567890123456789012345678901234\"));\n{\n  const privKey = \"0x1234567812345678123456781234567812345678123456781234567812345678\";\n  const signingKey = new SigningKey(privKey);\n  console.log(\"0\", signingKey, signingKey.publicKey, signingKey.publicKeyCompressed);\n\n  let pubKey = SigningKey.computePublicKey(privKey);\n  let pubKeyComp = SigningKey.computePublicKey(privKey, true);\n  let pubKeyRaw = \"0x\" + SigningKey.computePublicKey(privKey).substring(4);\n  console.log(\"A\", pubKey, pubKeyComp);\n\n  let a = SigningKey.computePublicKey(pubKey);\n  let b = SigningKey.computePublicKey(pubKey, true);\n  console.log(\"B\", a, b);\n\n  a = SigningKey.computePublicKey(pubKeyComp);\n  b = SigningKey.computePublicKey(pubKeyComp, true);\n  console.log(\"C\", a, b);\n\n  a = SigningKey.computePublicKey(pubKeyRaw);\n  b = SigningKey.computePublicKey(pubKeyRaw, true);\n  console.log(\"D\", a, b);\n\n  const digest = \"0x1122334411223344112233441122334411223344112233441122334411223344\";\n  const sig = signingKey.sign(digest);\n  console.log(\"SS\", sig, sig.r, sig.s, sig.yParity);\n\n  console.log(\"R\", SigningKey.recoverPublicKey(digest, sig));\n}\n*/\n//# sourceMappingURL=signing-key.js.map","import { getAddress } from \"@ethersproject/address\";\nimport { dataLength } from \"@ethersproject/bytes\";\nfunction accessSetify(addr, storageKeys) {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (dataLength(storageKey) !== 32) {\n                //logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }>\n                throw new Error(\"\");\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\nexport function accessListify(value) {\n    if (Array.isArray(value)) {\n        return value.map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    //logger.throwArgumentError(\"access list expected to be [ address, storageKeys[>\n                    throw new Error(\"\");\n                }\n                return accessSetify(set[0], set[1]);\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n    const result = Object.keys(value).map((addr) => {\n        const storageKeys = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, {});\n        return accessSetify(addr, Object.keys(storageKeys).sort());\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n//# sourceMappingURL=accesslist.js.map","export const version = \"@ethersproject/transactions@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Transaction_props;\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { toArray } from \"@ethersproject/math\";\nimport { getStore, setStore } from \"@ethersproject/properties\";\nimport { encodeRlp } from \"@ethersproject/rlp\";\nimport { Signature } from \"@ethersproject/signing-key\";\nimport { accessListify } from \"./accesslist.js\";\nimport { logger } from \"./logger.js\";\nconst BN_0 = BigInt(0);\nfunction formatNumber(_value, name) {\n    const value = logger.getBigInt(_value, \"value\");\n    const result = toArray(value);\n    if (result.length > 32) {\n        logger.throwArgumentError(`value too large`, `tx.${name}`, value);\n    }\n    return result;\n}\nfunction formatAccessList(value) {\n    return accessListify(value).map((set) => [set.address, set.storageKeys]);\n}\nfunction _parseLegacy(data) {\n    return {};\n}\nfunction _serializeLegacy(tx, sig) {\n    const fields = [\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n    ];\n    let chainId = BN_0;\n    if (tx.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = logger.getBigInt(tx.chainId, \"tx.chainId\");\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        if (sig && sig.networkV != null && sig.legacyChainId !== chainId) {\n            logger.throwArgumentError(\"tx.chainId/sig.v mismatch\", \"sig\", sig);\n        }\n    }\n    else if (sig) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        const legacy = sig.legacyChainId;\n        if (legacy != null) {\n            chainId = legacy;\n        }\n    }\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n        return encodeRlp(fields);\n    }\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    }\n    else if (BigInt(sig.v) !== v) {\n        logger.throwArgumentError(\"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n    fields.push(toArray(v));\n    fields.push(toArray(sig.r));\n    fields.push(toArray(sig.s));\n    return encodeRlp(fields);\n}\nfunction _parseEip1559(data) {\n    throw new Error(\"@TODO\");\n}\nfunction _serializeEip1559(tx, sig) {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    //if (tx.gasPrice != null) {\n    //    if (tx.gasPrice !== (tx.maxFeePerGas || BN_0)) {\n    //        logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", tx);\n    //    }\n    //}\n    const fields = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toArray(sig.r));\n        fields.push(toArray(sig.s));\n    }\n    return concat([\"0x02\", encodeRlp(fields)]);\n}\nfunction _parseEip2930(data) {\n    throw new Error(\"@TODO\");\n}\nfunction _serializeEip2930(tx, sig) {\n    const fields = [\n        formatNumber(tx.chainId || 0, \"chainId\"),\n        formatNumber(tx.nonce || 0, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit || 0, \"gasLimit\"),\n        ((tx.to != null) ? getAddress(tx.to) : \"0x\"),\n        formatNumber(tx.value || 0, \"value\"),\n        (tx.data || \"0x\"),\n        (formatAccessList(tx.accessList || []))\n    ];\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toArray(sig.r));\n        fields.push(toArray(sig.s));\n    }\n    return concat([\"0x01\", encodeRlp(fields)]);\n}\nexport class Transaction {\n    constructor() {\n        _Transaction_props.set(this, void 0);\n        __classPrivateFieldSet(this, _Transaction_props, {\n            type: null,\n            to: null,\n            nonce: 0,\n            gasLimit: BigInt(0),\n            gasPrice: null,\n            maxPriorityFeePerGas: null,\n            maxFeePerGas: null,\n            data: \"0x\",\n            value: BigInt(0),\n            chainId: BigInt(0),\n            sig: null,\n            accessList: null\n        }, \"f\");\n    }\n    // A type of null indicates the type will be populated automatically\n    get type() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"type\"); }\n    get typeName() {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n        }\n        return null;\n    }\n    set type(value) {\n        switch (value) {\n            case null:\n                setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"type\", null);\n                break;\n            case 0:\n            case \"legacy\":\n                setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"type\", 0);\n                break;\n            case 1:\n            case \"berlin\":\n            case \"eip-2930\":\n                setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"type\", 1);\n                break;\n            case 2:\n            case \"london\":\n            case \"eip-1559\":\n                setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"type\", 2);\n                break;\n            default:\n                throw new Error(`unsupported transaction type`);\n        }\n    }\n    /*\n    detectType(): number {\n        const hasFee = (this.maxFeePerGas != null) || (this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasLegacy = (this.gasPrice != null);\n\n        if (hasLegacy) {\n            if (hasFee) {\n                throw new Error(\"cannot mix legacy and london properties\");\n            }\n            if (hasAccessList) { return 1; }\n            return 0;\n        }\n\n        return 2;\n    }\n    */\n    get to() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"to\"); }\n    set to(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"to\", (value == null) ? null : getAddress(value));\n    }\n    get nonce() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"nonce\"); }\n    set nonce(value) { setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"nonce\", logger.getNumber(value, \"value\")); }\n    get gasLimit() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"gasLimit\"); }\n    set gasLimit(value) { setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"gasLimit\", logger.getBigInt(value)); }\n    get gasPrice() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"gasPrice\"); }\n    set gasPrice(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"gasPrice\", (value == null) ? null : logger.getBigInt(value));\n    }\n    get maxPriorityFeePerGas() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"maxPriorityFeePerGas\"); }\n    set maxPriorityFeePerGas(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"maxPriorityFeePerGas\", (value == null) ? null : logger.getBigInt(value));\n    }\n    get maxFeePerGas() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"maxFeePerGas\"); }\n    set maxFeePerGas(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"maxFeePerGas\", (value == null) ? null : logger.getBigInt(value));\n    }\n    get data() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"data\"); }\n    set data(value) { setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"data\", hexlify(value)); }\n    get value() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"value\"); }\n    set value(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"value\", logger.getBigInt(value));\n    }\n    get chainId() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"chainId\"); }\n    set chainId(value) { setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"chainId\", logger.getBigInt(value)); }\n    get signature() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"sig\") || null; }\n    set signature(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"sig\", (value == null) ? null : Signature.from(value));\n    }\n    get accessList() { return getStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"accessList\") || null; }\n    set accessList(value) {\n        setStore(__classPrivateFieldGet(this, _Transaction_props, \"f\"), \"accessList\", (value == null) ? null : accessListify(value));\n    }\n    get hash() {\n        if (this.signature == null) {\n            throw new Error(\"cannot hash unsigned transaction; maybe you meant .unsignedHash\");\n        }\n        return keccak256(this.serialized);\n    }\n    get unsignedHash() {\n        return keccak256(this.unsignedSerialized);\n    }\n    get from() {\n        if (this.signature == null) {\n            return null;\n        }\n        // use ecomputeAddress(this.fromPublicKey);\n        return \"\";\n    }\n    get fromPublicKey() {\n        if (this.signature == null) {\n            return null;\n        }\n        // use ecrecover\n        return \"\";\n    }\n    isSigned() {\n        return this.signature != null;\n    }\n    get serialized() {\n        if (this.signature == null) {\n            throw new Error(\"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\");\n        }\n        const types = this.inferTypes();\n        if (types.length !== 1) {\n            throw new Error(\"cannot determine transaction type; specify type manually\");\n        }\n        switch (types[0]) {\n            case 0:\n                return _serializeLegacy(this, this.signature);\n            case 1:\n                return _serializeEip2930(this, this.signature);\n            case 2:\n                return _serializeEip1559(this, this.signature);\n        }\n        throw new Error(\"unsupported type\");\n    }\n    get unsignedSerialized() {\n        if (this.signature != null) {\n            throw new Error(\"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\");\n        }\n        const types = this.inferTypes();\n        if (types.length !== 1) {\n            throw new Error(\"cannot determine transaction type; specify type manually\");\n        }\n        switch (types[0]) {\n            case 0:\n                return _serializeLegacy(this);\n            case 1:\n                return _serializeEip2930(this);\n            case 2:\n                return _serializeEip1559(this);\n        }\n        throw new Error(\"unsupported type\");\n    }\n    // Validates properties and lists possible types this transaction adheres to\n    inferTypes() {\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n        if (!!this.maxFeePerGas && !!this.maxPriorityFeePerGas) {\n            if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n                throw new Error(\"priorityFee cannot be more than maxFee\");\n            }\n        }\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n        if ((this.type === 0 || this.type === 1) && hasFee) {\n            throw new Error(\"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\");\n        }\n        if (this.type === 0 && hasAccessList) {\n            throw new Error(\"legacy transaction cannot have accessList\");\n        }\n        const types = [];\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n        }\n        else {\n            if (hasFee) {\n                types.push(2);\n            }\n            else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) {\n                    types.push(0);\n                }\n            }\n            else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            }\n            else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n            }\n        }\n        types.sort();\n        return types;\n    }\n    clone() {\n        return Transaction.from(this);\n    }\n    freeze() {\n        if (__classPrivateFieldGet(this, _Transaction_props, \"f\").sig) {\n            __classPrivateFieldGet(this, _Transaction_props, \"f\").sig = (__classPrivateFieldGet(this, _Transaction_props, \"f\").sig.clone().freeze());\n        }\n        if (__classPrivateFieldGet(this, _Transaction_props, \"f\").accessList) {\n            __classPrivateFieldGet(this, _Transaction_props, \"f\").accessList = Object.freeze(__classPrivateFieldGet(this, _Transaction_props, \"f\").accessList.map((set) => {\n                Object.freeze(set.storageKeys);\n                return Object.freeze(set);\n            }));\n        }\n        Object.freeze(__classPrivateFieldGet(this, _Transaction_props, \"f\"));\n        return this;\n    }\n    isFrozen() {\n        return Object.isFrozen(__classPrivateFieldGet(this, _Transaction_props, \"f\"));\n    }\n    static from(tx) {\n        if (typeof (tx) === \"string\") {\n            const payload = arrayify(tx);\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n            switch (payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload.slice(1)));\n                case 2: return Transaction.from(_parseEip1559(payload.slice(1)));\n            }\n            throw new Error(\"unsupported transaction type\");\n        }\n        const result = new Transaction();\n        if (tx.type != null) {\n            result.type = tx.type;\n        }\n        if (tx.to != null) {\n            result.to = tx.to;\n        }\n        if (tx.nonce != null) {\n            result.nonce = tx.nonce;\n        }\n        if (tx.gasLimit != null) {\n            result.gasLimit = tx.gasLimit;\n        }\n        if (tx.gasPrice != null) {\n            result.gasPrice = tx.gasPrice;\n        }\n        if (tx.maxPriorityFeePerGas != null) {\n            result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n        }\n        if (tx.maxFeePerGas != null) {\n            result.maxFeePerGas = tx.maxFeePerGas;\n        }\n        if (tx.data != null) {\n            result.data = tx.data;\n        }\n        if (tx.value != null) {\n            result.value = tx.value;\n        }\n        if (tx.chainId != null) {\n            result.chainId = tx.chainId;\n        }\n        if (tx.signature != null) {\n            result.signature = Signature.from(tx.signature);\n        }\n        if (tx.accessList != null) {\n            result.accessList = tx.accessList;\n        }\n        // Should these be checked?? Should from be allowed if there is no signature?\n        // from?: null | A;\n        // hash?: null | string;\n        return result;\n    }\n}\n_Transaction_props = new WeakMap();\n//# sourceMappingURL=transaction.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Block_transactions, _TransactionReceipt_logs;\n//import { resolveAddress } from \"@ethersproject/address\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { logger } from \"./logger.js\";\n// -----------------------\nfunction getValue(value) {\n    if (value == null) {\n        return null;\n    }\n    return value;\n}\nfunction toJson(value) {\n    if (value == null) {\n        return null;\n    }\n    return value.toString();\n}\n// @TODO? <T extends FeeData = { }> implements Required<T>\nexport class FeeData {\n    constructor(gasPrice, maxFeePerGas, maxPriorityFeePerGas) {\n        defineProperties(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n    toJSON() {\n        const { gasPrice, maxFeePerGas, maxPriorityFeePerGas } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n;\nexport function copyRequest(req) {\n    const result = {};\n    // These could be addresses, ENS names or Addressables\n    if (req.to) {\n        result.to = req.to;\n    }\n    if (req.from) {\n        result.from = req.from;\n    }\n    if (req.data) {\n        result.data = hexlify(req.data);\n    }\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerGas, maxPriorityFeePerGas,value\".split(/,/);\n    for (const key in bigIntKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = logger.getBigInt(req[key], `request.${key}`);\n    }\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key in numberKeys) {\n        if (!(key in req) || req[key] == null) {\n            continue;\n        }\n        result[key] = logger.getNumber(req[key], `request.${key}`);\n    }\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n    if (\"blockTag\" in req) {\n        result.blockTag = req.blockTag;\n    }\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipReadEnabled = !!req.enableCcipRead;\n    }\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n    return result;\n}\n;\nexport class Block {\n    constructor(block, provider) {\n        _Block_transactions.set(this, void 0);\n        if (provider == null) {\n            provider = dummyProvider;\n        }\n        __classPrivateFieldSet(this, _Block_transactions, Object.freeze(block.transactions.map((tx) => {\n            if (typeof (tx) !== \"string\" && tx.provider !== provider) {\n                throw new Error(\"provider mismatch\");\n            }\n            return tx;\n        })), \"f\");\n        ;\n        defineProperties(this, {\n            provider,\n            hash: getValue(block.hash),\n            number: block.number,\n            timestamp: block.timestamp,\n            parentHash: block.parentHash,\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            miner: block.miner,\n            extraData: block.extraData,\n            baseFeePerGas: getValue(block.baseFeePerGas)\n        });\n    }\n    get transactions() { return __classPrivateFieldGet(this, _Block_transactions, \"f\"); }\n    //connect(provider: Provider): Block<T> {\n    //    return new Block(this, provider);\n    //}\n    toJSON() {\n        const { baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash, miner, nonce, number, parentHash, timestamp, transactions } = this;\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            hash, miner, nonce, number, parentHash, timestamp,\n            transactions,\n        };\n    }\n    [(_Block_transactions = new WeakMap(), Symbol.iterator)]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: this.transactions[index++], done: false\n                    };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    get length() { return this.transactions.length; }\n    get date() {\n        if (this.timestamp == null) {\n            return null;\n        }\n        return new Date(this.timestamp * 1000);\n    }\n    async getTransaction(index) {\n        const tx = this.transactions[index];\n        if (tx == null) {\n            throw new Error(\"no such tx\");\n        }\n        if (typeof (tx) === \"string\") {\n            return (await this.provider.getTransaction(tx));\n        }\n        else {\n            return tx;\n        }\n    }\n    isMined() { return !!this.hash; }\n    isLondon() { return !!this.baseFeePerGas; }\n    orphanedEvent() {\n        if (!this.isMined()) {\n            throw new Error(\"\");\n        }\n        return createOrphanedBlockFilter(this);\n    }\n}\nexport class Log {\n    constructor(log, provider) {\n        if (provider == null) {\n            provider = dummyProvider;\n        }\n        this.provider = provider;\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            removed: log.removed,\n            address: log.address,\n            data: log.data,\n            topics,\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n    //connect(provider: Provider): Log {\n    //    return new Log(this, provider);\n    //}\n    toJSON() {\n        const { address, blockHash, blockNumber, data, index, removed, topics, transactionHash, transactionIndex } = this;\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n    async getBlock() {\n        return (await this.provider.getBlock(this.blockHash));\n    }\n    async getTransaction() {\n        return (await this.provider.getTransaction(this.transactionHash));\n    }\n    async getTransactionReceipt() {\n        return (await this.provider.getTransactionReceipt(this.transactionHash));\n    }\n    removedEvent() {\n        return createRemovedLogFilter(this);\n    }\n}\nexport class TransactionReceipt {\n    constructor(tx, provider) {\n        _TransactionReceipt_logs.set(this, void 0);\n        if (provider == null) {\n            provider = dummyProvider;\n        }\n        __classPrivateFieldSet(this, _TransactionReceipt_logs, Object.freeze(tx.logs.map((log) => {\n            if (provider !== log.provider) {\n                //return log.connect(provider);\n                throw new Error(\"provider mismatch\");\n            }\n            return log;\n        })), \"f\");\n        defineProperties(this, {\n            provider,\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n            hash: tx.hash,\n            index: tx.index,\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n            logsBloom: tx.logsBloom,\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            gasPrice: (tx.effectiveGasPrice || tx.gasPrice),\n            byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n    get logs() { return __classPrivateFieldGet(this, _TransactionReceipt_logs, \"f\"); }\n    //connect(provider: Provider): TransactionReceipt {\n    //    return new TransactionReceipt(this, provider);\n    //}\n    toJSON() {\n        const { to, from, contractAddress, hash, index, blockHash, blockNumber, logsBloom, logs, byzantium, status, root } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber, byzantium, contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n    get length() { return this.logs.length; }\n    [(_TransactionReceipt_logs = new WeakMap(), Symbol.iterator)]() {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false };\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n    get fee() {\n        return this.gasUsed * this.gasPrice;\n    }\n    async getBlock() {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    async getTransaction() {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) {\n            throw new Error(\"TODO\");\n        }\n        return tx;\n    }\n    async confirmations() {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n    removedEvent() {\n        return createRemovedTransactionFilter(this);\n    }\n    reorderedEvent(other) {\n        if (other && !other.isMined()) {\n            return logger.throwError(\"unmined 'other' transction cannot be orphaned\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"reorderedEvent(other)\"\n            });\n        }\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n;\nexport class TransactionResponse {\n    constructor(tx, provider) {\n        if (provider == null) {\n            provider = dummyProvider;\n        }\n        this.provider = provider;\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber : null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash : null;\n        this.hash = tx.hash;\n        this.index = tx.index;\n        this.type = tx.type;\n        this.from = tx.from;\n        this.to = tx.to || null;\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas : null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas : null;\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n        this.accessList = (tx.accessList != null) ? tx.accessList : null;\n    }\n    //connect(provider: Provider): TransactionResponse {\n    //    return new TransactionResponse(this, provider);\n    //}\n    toJSON() {\n        const { blockNumber, blockHash, index, hash, type, to, from, nonce, data, signature, accessList } = this;\n        return {\n            _type: \"TransactionReceipt\",\n            accessList, blockNumber, blockHash,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n    async getBlock() {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) {\n                blockNumber = tx.blockNumber;\n            }\n        }\n        if (blockNumber == null) {\n            return null;\n        }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) {\n            throw new Error(\"TODO\");\n        }\n        return block;\n    }\n    async getTransaction() {\n        return this.provider.getTransaction(this.hash);\n    }\n    async wait(confirms) {\n        return this.provider.waitForTransaction(this.hash, confirms);\n    }\n    isMined() {\n        return (this.blockHash != null);\n    }\n    isLegacy() {\n        return (this.type === 0);\n    }\n    isBerlin() {\n        return (this.type === 1);\n    }\n    isLondon() {\n        return (this.type === 2);\n    }\n    removedEvent() {\n        if (!this.isMined()) {\n            return logger.throwError(\"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"removeEvent()\"\n            });\n        }\n        return createRemovedTransactionFilter(this);\n    }\n    reorderedEvent(other) {\n        if (!this.isMined()) {\n            return logger.throwError(\"unmined transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"removeEvent()\"\n            });\n        }\n        if (other && !other.isMined()) {\n            return logger.throwError(\"unmined 'other' transaction canot be orphaned\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"removeEvent()\"\n            });\n        }\n        return createReorderedTransactionFilter(this, other);\n    }\n}\nfunction createOrphanedBlockFilter(block) {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\nfunction createReorderedTransactionFilter(tx, other) {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\nfunction createRemovedTransactionFilter(tx) {\n    return { orphan: \"drop-transaction\", tx };\n}\nfunction createRemovedLogFilter(log) {\n    return { orphan: \"drop-log\", log: {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n            address: log.address,\n            data: log.data,\n            topics: Object.freeze(log.topics.slice()),\n            index: log.index\n        } };\n}\nfunction fail() {\n    throw new Error(\"this provider should not be used\");\n}\nclass DummyProvider {\n    async getNetwork() { return fail(); }\n    async getFeeData() { return fail(); }\n    async estimateGas(tx) { return fail(); }\n    async call(tx) { return fail(); }\n    async resolveName(name) { return fail(); }\n    // State\n    async getBlockNumber() { return fail(); }\n    // Account\n    async getBalanceOf(address, blockTag) {\n        return fail();\n    }\n    async getTransactionCountOf(address, blockTag) {\n        return fail();\n    }\n    async getCode(address, blockTag) {\n        return fail();\n    }\n    async getStorageAt(address, position, blockTag) {\n        return fail();\n    }\n    // Write\n    async broadcastTransaction(signedTx) { return fail(); }\n    // Queries\n    async getBlock(blockHashOrBlockTag) {\n        return fail();\n    }\n    async getBlockWithTransactions(blockHashOrBlockTag) {\n        return fail();\n    }\n    async getTransaction(hash) {\n        return fail();\n    }\n    async getTransactionReceipt(hash) {\n        return fail();\n    }\n    // Bloom-filter Queries\n    async getLogs(filter) {\n        return fail();\n    }\n    // ENS\n    async lookupAddress(address) {\n        return fail();\n    }\n    async waitForTransaction(hash, confirms, timeout) {\n        return fail();\n    }\n    async waitForBlock(blockTag) {\n        return fail();\n    }\n    // EventEmitterable\n    async on(event, listener) { return fail(); }\n    async once(event, listener) { return fail(); }\n    async emit(event, ...args) { return fail(); }\n    async listenerCount(event) { return fail(); }\n    async listeners(event) { return fail(); }\n    async off(event, listener) { return fail(); }\n    async removeAllListeners(event) { return fail(); }\n    async addListener(event, listener) { return fail(); }\n    async removeListener(event, listener) { return fail(); }\n}\n// A singleton provider instance that can be used as a placeholder. This\n// allows API that have a Provider added later to not require a null check.\nexport const dummyProvider = new DummyProvider();\n//# sourceMappingURL=provider.js.map","// Belongs to Networks; requires abstract-provider\n// provider requires abstract-provider and network\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Formatter_format, _Formatter_baseBlock;\n/**\n *  Formatter\n *\n *  This is responsibile for converting much of the various\n *  loose network values into a concrete ethers-ready value.\n *\n *  For example, converting addresses to checksum addresses,\n *  validating a hash is 32 bytes, and so on.\n *\n *  By sub-classing this class and providing it in a custom\n *  Network object this allows exotic (non-Ethereum) networks\n *  to be fairly simple to adapt to ethers.\n */\nimport { getAddress, getCreateAddress } from \"@ethersproject/address\";\nimport { dataLength, dataSlice, isHexString, quantity } from \"@ethersproject/bytes\";\nimport { toHex } from \"@ethersproject/math\";\nimport { Signature } from \"@ethersproject/signing-key\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Block, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport { logger } from \"./logger.js\";\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n//export type AccessListSet = { address: string, storageKeys: Array<string> };\n//export type AccessList = Array<AccessListSet>;\n//export type AccessListish = AccessList |\n//                            Array<[ string, Array<string> ]> |\n//                            Record<string, Array<string>>;\nfunction stringify(value) {\n    if (typeof (value) !== \"string\") {\n        throw new Error(\"invalid string\");\n    }\n    return value;\n}\nexport class Formatter {\n    constructor() {\n        _Formatter_format.set(this, void 0);\n        _Formatter_baseBlock.set(this, void 0);\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const number = this.number.bind(this);\n        const uint256 = this.uint256.bind(this);\n        const topics = this.arrayOf(hash);\n        __classPrivateFieldSet(this, _Formatter_format, {\n            address,\n            bigNumber,\n            blockTag,\n            data,\n            hash,\n            number,\n            uint256,\n            topics,\n            filter: this.object({\n                fromBlock: this.allowNull(blockTag, undefined),\n                toBlock: this.allowNull(blockTag, undefined),\n                blockHash: this.allowNull(hash, undefined),\n                address: this.allowNull(address, undefined),\n                topics: this.allowNull(topics, undefined)\n            }),\n            transactionRequest: this.object({\n                from: this.allowNull(address),\n                type: this.allowNull(number),\n                to: this.allowNull(address),\n                nonce: this.allowNull(number),\n                gasLimit: this.allowNull(uint256),\n                gasPrice: this.allowNull(uint256),\n                maxFeePerGas: this.allowNull(uint256),\n                maxPriorityFeePerGas: this.allowNull(uint256),\n                data: this.allowNull(data),\n                value: this.allowNull(uint256),\n            }),\n            transactionResponse: this.object({\n                hash: hash,\n                index: number,\n                type: this.allowNull(number, 0),\n                // These can be null for pending blocks\n                blockHash: this.allowNull(hash),\n                blockNumber: this.allowNull(number),\n                // For Legacy transactions, this comes from the v\n                chainId: this.allowNull(number),\n                from: address,\n                to: this.address,\n                gasLimit: bigNumber,\n                gasPrice: this.allowNull(bigNumber),\n                maxFeePerGas: this.allowNull(bigNumber),\n                maxPriorityFeePerGas: this.allowNull(bigNumber),\n                value: bigNumber,\n                data: data,\n                nonce: number,\n                r: hash,\n                s: hash,\n                v: number,\n                accessList: this.allowNull(this.accessList)\n            }, {\n                index: [\"transactionIndex\"]\n            }),\n        }, \"f\");\n        __classPrivateFieldSet(this, _Formatter_baseBlock, this.object({\n            number: number,\n            hash: this.allowNull(hash, null),\n            timestamp: number,\n            parentHash: hash,\n            nonce: this.allowNull(stringify, \"0x0000000000000000\"),\n            difficulty: bigNumber,\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: this.allowNull(address, \"0x0000000000000000000000000000000000000000\"),\n            extraData: stringify,\n            baseFeePerGas: this.allowNull(bigNumber),\n        }), \"f\");\n    }\n    // An address\n    address(value) {\n        return getAddress(value);\n    }\n    // An address from a call result; may be zero-padded\n    callAddress(value) {\n        if (dataLength(value) !== 32 || dataSlice(value, 0, 12) !== \"0x000000000000000000000000\") {\n            logger.throwArgumentError(\"invalid call address\", \"value\", value);\n        }\n        return this.address(dataSlice(value, 12));\n    }\n    // An address from a transaction (e.g. { from: string, nonce: number })\n    contractAddress(value) {\n        return getCreateAddress({\n            from: this.address(value.from),\n            nonce: logger.getNumber(value.nonce, \"value.nonce\")\n        });\n    }\n    // Block Tag\n    blockTag(value) {\n        if (value == null) {\n            return \"latest\";\n        }\n        switch (value) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"latest\":\n            case \"pending\":\n                return value;\n        }\n        if (typeof (value) === \"number\" || (isHexString(value) && dataLength(value) < 32)) {\n            return quantity(value);\n        }\n        return logger.throwArgumentError(\"invalid blockTag\", \"value\", value);\n    }\n    // Block objects\n    block(value, provider) {\n        const params = __classPrivateFieldGet(this, _Formatter_baseBlock, \"f\").call(this, value);\n        params.transactions = value.transactions.map((t) => this.hash(t));\n        return new Block(params, provider);\n    }\n    blockWithTransactions(value, provider) {\n        throw new Error();\n    }\n    // Transactions\n    transactionRequest(value, provider) {\n        return __classPrivateFieldGet(this, _Formatter_format, \"f\").transactionRequest(value);\n    }\n    transactionResponse(value, provider) {\n        value = Object.assign({}, value);\n        // @TODO: Use the remap feature\n        if (value.data == null && value.input != null) {\n            value.data = value.input;\n        }\n        if (value.gasLimit == null && value.gas) {\n            value.gasLimit = value.gas;\n        }\n        value = __classPrivateFieldGet(this, _Formatter_format, \"f\").transactionResponse(value);\n        const sig = Signature.fromTransaction(value.r, value.s, value.v);\n        value.signature = sig;\n        if (value.chainId == null) {\n            value.chainId = sig.legacyChainId;\n        }\n        return new TransactionResponse(value, provider);\n    }\n    // Receipts\n    log(value, provider) {\n        const log = this.object({\n            address: this.address,\n            blockHash: this.hash,\n            blockNumber: this.number,\n            data: this.data,\n            index: this.number,\n            removed: this.boolean,\n            topics: this.topics,\n            transactionHash: this.hash,\n            transactionIndex: this.number,\n        }, {\n            index: [\"logIndex\"]\n        })(value);\n        return new Log(log, provider);\n    }\n    receipt(value, provider) {\n        const receipt = this.object({\n            blockHash: this.hash,\n            blockNumber: this.number,\n            contractAddress: this.allowNull(this.address),\n            cumulativeGasUsed: this.bigNumber,\n            from: this.address,\n            gasUsed: this.bigNumber,\n            logs: this.arrayOf((v) => (this.log(v, provider))),\n            logsBloom: this.data,\n            root: this.allowNull(this.data),\n            status: this.allowNull(this.number),\n            to: this.address,\n            gasPrice: this.allowNull(this.bigNumber),\n            hash: this.hash,\n            index: this.number,\n            type: this.allowNull(this.number, 0),\n        }, {\n            hash: [\"transactionHash\"],\n            gasPrice: [\"effectiveGasPrice\"],\n            index: [\"transactionIndex\"]\n        })(value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (receipt.root != null) {\n            if (receipt.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = parseInt(receipt.root);\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (receipt.status != null && receipt.status !== value) {\n                        return logger.throwError(\"alt-root-status/status mismatch\", \"BAD_DATA\", {\n                            value: { root: receipt.root, status: receipt.status }\n                        });\n                    }\n                    receipt.status = value;\n                    delete receipt.root;\n                }\n                else {\n                    return logger.throwError(\"invalid alt-root-status\", \"BAD_DATA\", {\n                        value: receipt.root\n                    });\n                }\n            }\n            else if (!isHexString(receipt.root, 32)) {\n                // Must be a valid bytes32\n                return logger.throwError(\"invalid receipt root hash\", \"BAD_DATA\", {\n                    value: receipt.root\n                });\n            }\n        }\n        //receipt.byzantium = (receipt.root == null);\n        return new TransactionReceipt(receipt, provider);\n    }\n    // Fitlers\n    topics(value) {\n        return __classPrivateFieldGet(this, _Formatter_format, \"f\").topics(value);\n    }\n    filter(value) {\n        return __classPrivateFieldGet(this, _Formatter_format, \"f\").filter(value);\n    }\n    filterLog(value) {\n        console.log(\"ME\", value);\n        return null;\n    }\n    // Converts a serialized transaction to a TransactionResponse\n    transaction(value) {\n        throw new Error();\n    }\n    // Useful utility formatters functions, which if need be use the\n    // methods within the formatter to ensure internal compatibility\n    // Access List; converts an AccessListish to an AccessList\n    accessList(value) {\n        return accessListify(value);\n    }\n    // Converts falsish values to a specific value, otherwise use the formatter. Calls preserve `this`.\n    allowFalsish(format, ifFalse) {\n        return ((value) => {\n            if (!value) {\n                return ifFalse;\n            }\n            return format.call(this, value);\n        });\n    }\n    // Allows null, optionally replacing it with a default value. Calls preserve `this`.\n    allowNull(format, ifNull) {\n        return ((value) => {\n            if (value == null) {\n                return ifNull;\n            }\n            return format.call(this, value);\n        });\n    }\n    // Requires an Array satisfying the formatter. Calls preserves `this`.\n    arrayOf(format) {\n        return ((array) => {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            return array.map((i) => format.call(this, i));\n        });\n    }\n    // Requires a value which is a value BigNumber\n    bigNumber(value) {\n        return logger.getBigInt(value, \"value\");\n    }\n    uint256(value) {\n        const result = this.bigNumber(value);\n        if (result < 0 || result > BN_MAX_UINT256) {\n            logger.throwArgumentError(\"invalid uint256\", \"value\", value);\n        }\n        return result;\n    }\n    // Requires a value which is a value boolean or string equivalent\n    boolean(value) {\n        switch (value) {\n            case true:\n            case \"true\":\n                return true;\n            case false:\n            case \"false\":\n                return false;\n        }\n        return logger.throwArgumentError(`invalid boolean; ${JSON.stringify(value)}`, \"value\", value);\n    }\n    // Requires a value which is a valid hexstring. If dataOrLength is true,\n    // the length must be even (i.e. a datahexstring) or if it is a number,\n    // specifies teh number of bytes value must represent\n    _hexstring(dataOrLength) {\n        if (dataOrLength == null) {\n            dataOrLength = false;\n        }\n        return (function (value) {\n            if (isHexString(value, dataOrLength)) {\n                return value.toLowerCase();\n            }\n            throw new Error(\"bad hexstring\");\n        });\n    }\n    data(value) {\n        if (dataLength(value) == null) {\n            logger.throwArgumentError(\"\", \"value\", value);\n        }\n        return value;\n    }\n    // Requires a network-native hash\n    hash(value) {\n        if (dataLength(value) !== 32) {\n            logger.throwArgumentError(\"\", \"value\", value);\n        }\n        return __classPrivateFieldGet(this, _Formatter_format, \"f\").data(value);\n    }\n    // Requires a valid number, within the IEEE 754 safe range\n    number(value) {\n        return logger.getNumber(value);\n    }\n    // Requires an object which matches a fleet of other formatters\n    // Any FormatFunc may return `undefined` to have the value omitted\n    // from the result object. Calls preserve `this`.\n    object(format, altNames) {\n        return ((value) => {\n            const result = {};\n            for (const key in format) {\n                let srcKey = key;\n                if (altNames && key in altNames && !(srcKey in value)) {\n                    for (const altKey of altNames[key]) {\n                        if (altKey in value) {\n                            srcKey = altKey;\n                            break;\n                        }\n                    }\n                }\n                try {\n                    const nv = format[key].call(this, value[srcKey]);\n                    if (nv !== undefined) {\n                        result[key] = nv;\n                    }\n                }\n                catch (error) {\n                    const message = (error instanceof Error) ? error.message : \"not-an-error\";\n                    logger.throwError(`invalid value for value.${key} (${message})`, \"BAD_DATA\", { value });\n                }\n            }\n            return result;\n        });\n    }\n    // Requires a value which matches a network-native storage slot\n    storageSlot(value) {\n        return toHex(logger.getBigInt(value), 32);\n    }\n}\n_Formatter_format = new WeakMap(), _Formatter_baseBlock = new WeakMap();\n//# sourceMappingURL=formatter.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { logger } from \"./logger.js\";\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\nexport class NetworkPlugin {\n    constructor(name) {\n        defineProperties(this, { name });\n    }\n    clone() {\n        return new NetworkPlugin(this.name);\n    }\n    validate(network) {\n        return this;\n    }\n}\nexport class GasCostPlugin extends NetworkPlugin {\n    constructor(effectiveBlock = 0, costs) {\n        super(`org.ethers.plugins.gas-cost#${(effectiveBlock || 0)}`);\n        const props = { effectiveBlock };\n        function set(name, nullish) {\n            let value = (costs || {})[name];\n            if (value == null) {\n                value = nullish;\n            }\n            if (typeof (value) !== \"number\") {\n                logger.throwArgumentError(`invalud value for ${name}`, \"costs\", costs);\n            }\n            props[name] = value;\n        }\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n        defineProperties(this, props);\n    }\n    clone() {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n// Networks shoudl use this plugin to specify the contract address\n// and network necessary to resolve ENS names.\nexport class EnsPlugin extends NetworkPlugin {\n    constructor(address, targetNetwork) {\n        super(\"org.ethers.plugins.ens\");\n        defineProperties(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1 : targetNetwork)\n        });\n    }\n    clone() {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n    validate(network) {\n        network.formatter.address(this.address);\n        return this;\n    }\n}\nexport class MaxPriorityFeePlugin extends NetworkPlugin {\n    constructor(priorityFee) {\n        super(\"org.ethers.plugins.max-priority-fee\");\n        defineProperties(this, {\n            priorityFee: logger.getBigInt(priorityFee)\n        });\n    }\n    async getPriorityFee(provider) {\n        return this.priorityFee;\n    }\n    clone() {\n        return new MaxPriorityFeePlugin(this.priorityFee);\n    }\n}\n//# sourceMappingURL=plugins-network.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Network_props;\nimport { getStore, setStore } from \"@ethersproject/properties\";\nimport { Formatter } from \"./formatter.js\";\nimport { logger } from \"./logger.js\";\nimport { EnsPlugin, GasCostPlugin } from \"./plugins-network.js\";\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n/* * * *\nexport class PriceOraclePlugin extends NetworkPlugin {\n    readonly address!: string;\n\n    constructor(address: string) {\n        super(\"org.ethers.plugins.price-oracle\");\n        defineProperties<PriceOraclePlugin>(this, { address });\n    }\n\n    clone(): PriceOraclePlugin {\n        return new PriceOraclePlugin(this.address);\n    }\n}\n*/\n// Networks or clients with a higher need for security (such as clients\n// that may automatically make CCIP requests without user interaction)\n// can use this plugin to anonymize requests or intercept CCIP requests\n// to notify and/or receive authorization from the user\n/* * * *\nexport type FetchDataFunc = (req: Frozen<FetchRequest>) => Promise<FetchRequest>;\nexport class CcipPreflightPlugin extends NetworkPlugin {\n    readonly fetchData!: FetchDataFunc;\n\n    constructor(fetchData: FetchDataFunc) {\n        super(\"org.ethers.plugins.ccip-preflight\");\n        defineProperties<CcipPreflightPlugin>(this, { fetchData });\n    }\n\n    clone(): CcipPreflightPlugin {\n        return new CcipPreflightPlugin(this.fetchData);\n    }\n}\n*/\nconst Networks = new Map();\nconst defaultFormatter = new Formatter();\nexport class Network {\n    constructor(name, _chainId, formatter) {\n        _Network_props.set(this, void 0);\n        const chainId = logger.getBigInt(_chainId);\n        if (formatter == null) {\n            formatter = defaultFormatter;\n        }\n        const plugins = new Map();\n        __classPrivateFieldSet(this, _Network_props, { name, chainId, formatter, plugins }, \"f\");\n    }\n    toJSON() {\n        return { name: this.name, chainId: this.chainId };\n    }\n    get name() { return getStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"name\"); }\n    set name(value) { setStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"name\", value); }\n    get chainId() { return getStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"chainId\"); }\n    set chainId(value) { setStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"chainId\", logger.getBigInt(value, \"chainId\")); }\n    get formatter() { return getStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"formatter\"); }\n    set formatter(value) { setStore(__classPrivateFieldGet(this, _Network_props, \"f\"), \"formatter\", value); }\n    get plugins() {\n        return Array.from(__classPrivateFieldGet(this, _Network_props, \"f\").plugins.values());\n    }\n    attachPlugin(plugin) {\n        if (this.isFrozen()) {\n            throw new Error(\"frozen\");\n        }\n        if (__classPrivateFieldGet(this, _Network_props, \"f\").plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        __classPrivateFieldGet(this, _Network_props, \"f\").plugins.set(plugin.name, plugin.validate(this));\n        return this;\n    }\n    getPlugin(name) {\n        return (__classPrivateFieldGet(this, _Network_props, \"f\").plugins.get(name)) || null;\n    }\n    // Gets a list of Plugins which match basename, ignoring any fragment\n    getPlugins(basename) {\n        return (this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n    clone() {\n        const clone = new Network(this.name, this.chainId, this.formatter);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n    freeze() {\n        Object.freeze(__classPrivateFieldGet(this, _Network_props, \"f\"));\n        return this;\n    }\n    isFrozen() {\n        return Object.isFrozen(__classPrivateFieldGet(this, _Network_props, \"f\"));\n    }\n    computeIntrinsicGas(tx) {\n        const costs = this.getPlugin(\"org.ethers.gas-cost\") || (new GasCostPlugin());\n        let gas = costs.txBase;\n        if (tx.to == null) {\n            gas += costs.txCreate;\n        }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                }\n                else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n        if (tx.accessList) {\n            const accessList = this.formatter.accessList(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n        return gas;\n    }\n    static from(network) {\n        // Default network\n        if (network == null) {\n            return Network.from(\"homestead\");\n        }\n        // Canonical name or chain ID\n        if (typeof (network) === \"number\") {\n            network = BigInt(network);\n        }\n        if (typeof (network) === \"string\" || typeof (network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) {\n                return networkFunc();\n            }\n            if (typeof (network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n            logger.throwArgumentError(\"unknown network\", \"network\", network);\n        }\n        // Clonable with network-like abilities\n        if (typeof (network.clone) === \"function\") {\n            const clone = network.clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n        // Networkish\n        if (typeof (network) === \"object\") {\n            if (typeof (network.name) !== \"string\" || typeof (network.chainId) !== \"number\") {\n                logger.throwArgumentError(\"invalid network object name or chainId\", \"network\", network);\n            }\n            const custom = new Network((network.name), (network.chainId));\n            if (network.ensAddress || network.ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin(network.ensAddress, network.ensNetwork));\n            }\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n            return custom;\n        }\n        return logger.throwArgumentError(\"invalid network\", \"network\", network);\n    }\n    static register(nameOrChainId, networkFunc) {\n        if (typeof (nameOrChainId) === \"number\") {\n            nameOrChainId = BigInt(nameOrChainId);\n        }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            logger.throwArgumentError(`conflicting network for ${JSON.stringify(existing.name)}`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n_Network_props = new WeakMap();\n//# sourceMappingURL=network.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PollingBlockSubscriber_instances, _PollingBlockSubscriber_provider, _PollingBlockSubscriber_poller, _PollingBlockSubscriber_interval, _PollingBlockSubscriber_blockNumber, _PollingBlockSubscriber_poll, _OnBlockSubscriber_provider, _OnBlockSubscriber_poll, _PollingOrphanSubscriber_filter, _PollingTransactionSubscriber_hash, _PollingEventSubscriber_instances, _PollingEventSubscriber_provider, _PollingEventSubscriber_filter, _PollingEventSubscriber_poller, _PollingEventSubscriber_blockNumber, _PollingEventSubscriber_poll;\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { logger } from \"./logger.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport function getPollingSubscriber(provider, event) {\n    if (event === \"block\") {\n        return new PollingBlockSubscriber(provider);\n    }\n    if (isHexString(event, 32)) {\n        return new PollingTransactionSubscriber(provider, event);\n    }\n    return logger.throwError(\"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n// @TODO: refactor this\nexport class PollingBlockSubscriber {\n    constructor(provider) {\n        _PollingBlockSubscriber_instances.add(this);\n        _PollingBlockSubscriber_provider.set(this, void 0);\n        _PollingBlockSubscriber_poller.set(this, void 0);\n        _PollingBlockSubscriber_interval.set(this, void 0);\n        // The most recent block we have scanned for events. The value -2\n        // indicates we still need to fetch an initial block number\n        _PollingBlockSubscriber_blockNumber.set(this, void 0);\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_poller, null, \"f\");\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_interval, 4000, \"f\");\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_blockNumber, -2, \"f\");\n    }\n    get pollingInterval() { return __classPrivateFieldGet(this, _PollingBlockSubscriber_interval, \"f\"); }\n    set pollingInterval(value) { __classPrivateFieldSet(this, _PollingBlockSubscriber_interval, value, \"f\"); }\n    start() {\n        if (__classPrivateFieldGet(this, _PollingBlockSubscriber_poller, \"f\")) {\n            throw new Error(\"subscriber already running\");\n        }\n        __classPrivateFieldGet(this, _PollingBlockSubscriber_instances, \"m\", _PollingBlockSubscriber_poll).call(this);\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_poller, __classPrivateFieldGet(this, _PollingBlockSubscriber_provider, \"f\")._setTimeout(__classPrivateFieldGet(this, _PollingBlockSubscriber_instances, \"m\", _PollingBlockSubscriber_poll).bind(this), __classPrivateFieldGet(this, _PollingBlockSubscriber_interval, \"f\")), \"f\");\n    }\n    stop() {\n        if (!__classPrivateFieldGet(this, _PollingBlockSubscriber_poller, \"f\")) {\n            throw new Error(\"subscriber not running\");\n        }\n        __classPrivateFieldGet(this, _PollingBlockSubscriber_provider, \"f\")._clearTimeout(__classPrivateFieldGet(this, _PollingBlockSubscriber_poller, \"f\"));\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_poller, null, \"f\");\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            __classPrivateFieldSet(this, _PollingBlockSubscriber_blockNumber, -2, \"f\");\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n_PollingBlockSubscriber_provider = new WeakMap(), _PollingBlockSubscriber_poller = new WeakMap(), _PollingBlockSubscriber_interval = new WeakMap(), _PollingBlockSubscriber_blockNumber = new WeakMap(), _PollingBlockSubscriber_instances = new WeakSet(), _PollingBlockSubscriber_poll = async function _PollingBlockSubscriber_poll() {\n    const blockNumber = await __classPrivateFieldGet(this, _PollingBlockSubscriber_provider, \"f\").getBlockNumber();\n    if (__classPrivateFieldGet(this, _PollingBlockSubscriber_blockNumber, \"f\") === -2) {\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_blockNumber, blockNumber, \"f\");\n        return;\n    }\n    // @TODO: Put a cap on the maximum number of events per loop?\n    if (blockNumber !== __classPrivateFieldGet(this, _PollingBlockSubscriber_blockNumber, \"f\")) {\n        for (let b = __classPrivateFieldGet(this, _PollingBlockSubscriber_blockNumber, \"f\") + 1; b <= blockNumber; b++) {\n            __classPrivateFieldGet(this, _PollingBlockSubscriber_provider, \"f\").emit(\"block\", b);\n        }\n        __classPrivateFieldSet(this, _PollingBlockSubscriber_blockNumber, blockNumber, \"f\");\n    }\n    __classPrivateFieldSet(this, _PollingBlockSubscriber_poller, __classPrivateFieldGet(this, _PollingBlockSubscriber_provider, \"f\")._setTimeout(__classPrivateFieldGet(this, _PollingBlockSubscriber_instances, \"m\", _PollingBlockSubscriber_poll).bind(this), __classPrivateFieldGet(this, _PollingBlockSubscriber_interval, \"f\")), \"f\");\n};\nexport class OnBlockSubscriber {\n    constructor(provider) {\n        _OnBlockSubscriber_provider.set(this, void 0);\n        _OnBlockSubscriber_poll.set(this, void 0);\n        __classPrivateFieldSet(this, _OnBlockSubscriber_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _OnBlockSubscriber_poll, (blockNumber) => {\n            this._poll(blockNumber, __classPrivateFieldGet(this, _OnBlockSubscriber_provider, \"f\"));\n        }, \"f\");\n    }\n    async _poll(blockNumber, provider) {\n        throw new Error(\"sub-classes must override this\");\n    }\n    start() {\n        __classPrivateFieldGet(this, _OnBlockSubscriber_poll, \"f\").call(this, -2);\n        __classPrivateFieldGet(this, _OnBlockSubscriber_provider, \"f\").on(\"block\", __classPrivateFieldGet(this, _OnBlockSubscriber_poll, \"f\"));\n    }\n    stop() {\n        __classPrivateFieldGet(this, _OnBlockSubscriber_provider, \"f\").off(\"block\", __classPrivateFieldGet(this, _OnBlockSubscriber_poll, \"f\"));\n    }\n    pause(dropWhilePaused) { this.stop(); }\n    resume() { this.start(); }\n}\n_OnBlockSubscriber_provider = new WeakMap(), _OnBlockSubscriber_poll = new WeakMap();\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    constructor(provider, filter) {\n        super(provider);\n        _PollingOrphanSubscriber_filter.set(this, void 0);\n        __classPrivateFieldSet(this, _PollingOrphanSubscriber_filter, copy(filter), \"f\");\n    }\n    async _poll(blockNumber, provider) {\n        throw new Error(\"@TODO\");\n        console.log(__classPrivateFieldGet(this, _PollingOrphanSubscriber_filter, \"f\"));\n    }\n}\n_PollingOrphanSubscriber_filter = new WeakMap();\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    constructor(provider, hash) {\n        super(provider);\n        _PollingTransactionSubscriber_hash.set(this, void 0);\n        __classPrivateFieldSet(this, _PollingTransactionSubscriber_hash, hash, \"f\");\n    }\n    async _poll(blockNumber, provider) {\n        const tx = await provider.getTransactionReceipt(__classPrivateFieldGet(this, _PollingTransactionSubscriber_hash, \"f\"));\n        if (tx) {\n            provider.emit(__classPrivateFieldGet(this, _PollingTransactionSubscriber_hash, \"f\"), tx);\n        }\n    }\n}\n_PollingTransactionSubscriber_hash = new WeakMap();\nexport class PollingEventSubscriber {\n    constructor(provider, filter) {\n        _PollingEventSubscriber_instances.add(this);\n        _PollingEventSubscriber_provider.set(this, void 0);\n        _PollingEventSubscriber_filter.set(this, void 0);\n        _PollingEventSubscriber_poller.set(this, void 0);\n        // The most recent block we have scanned for events. The value -2\n        // indicates we still need to fetch an initial block number\n        _PollingEventSubscriber_blockNumber.set(this, void 0);\n        __classPrivateFieldSet(this, _PollingEventSubscriber_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _PollingEventSubscriber_filter, copy(filter), \"f\");\n        __classPrivateFieldSet(this, _PollingEventSubscriber_poller, __classPrivateFieldGet(this, _PollingEventSubscriber_instances, \"m\", _PollingEventSubscriber_poll).bind(this), \"f\");\n        __classPrivateFieldSet(this, _PollingEventSubscriber_blockNumber, -2, \"f\");\n    }\n    start() {\n        if (__classPrivateFieldGet(this, _PollingEventSubscriber_blockNumber, \"f\") === -2) {\n            __classPrivateFieldGet(this, _PollingEventSubscriber_provider, \"f\").getBlockNumber().then((blockNumber) => {\n                __classPrivateFieldSet(this, _PollingEventSubscriber_blockNumber, blockNumber, \"f\");\n            });\n        }\n        __classPrivateFieldGet(this, _PollingEventSubscriber_provider, \"f\").on(\"block\", __classPrivateFieldGet(this, _PollingEventSubscriber_poller, \"f\"));\n    }\n    stop() {\n        __classPrivateFieldGet(this, _PollingEventSubscriber_provider, \"f\").off(\"block\", __classPrivateFieldGet(this, _PollingEventSubscriber_poller, \"f\"));\n    }\n    pause(dropWhilePaused) {\n        this.stop();\n        if (dropWhilePaused) {\n            __classPrivateFieldSet(this, _PollingEventSubscriber_blockNumber, -2, \"f\");\n        }\n    }\n    resume() {\n        this.start();\n    }\n}\n_PollingEventSubscriber_provider = new WeakMap(), _PollingEventSubscriber_filter = new WeakMap(), _PollingEventSubscriber_poller = new WeakMap(), _PollingEventSubscriber_blockNumber = new WeakMap(), _PollingEventSubscriber_instances = new WeakSet(), _PollingEventSubscriber_poll = async function _PollingEventSubscriber_poll(blockNumber) {\n    // The initial block hasn't been determined yet\n    if (__classPrivateFieldGet(this, _PollingEventSubscriber_blockNumber, \"f\") === -2) {\n        return;\n    }\n    const filter = copy(__classPrivateFieldGet(this, _PollingEventSubscriber_filter, \"f\"));\n    filter.fromBlock = __classPrivateFieldGet(this, _PollingEventSubscriber_blockNumber, \"f\") + 1;\n    filter.toBlock = blockNumber;\n    const logs = await __classPrivateFieldGet(this, _PollingEventSubscriber_provider, \"f\").getLogs(filter);\n    // No logs could just mean the node has not indexed them yet,\n    // so we keep a sliding window of 60 blocks to keep scanning\n    if (logs.length === 0) {\n        if (__classPrivateFieldGet(this, _PollingEventSubscriber_blockNumber, \"f\") < blockNumber - 60) {\n            __classPrivateFieldSet(this, _PollingEventSubscriber_blockNumber, blockNumber - 60, \"f\");\n        }\n        return;\n    }\n    __classPrivateFieldSet(this, _PollingEventSubscriber_blockNumber, blockNumber, \"f\");\n    for (const log of logs) {\n        __classPrivateFieldGet(this, _PollingEventSubscriber_provider, \"f\").emit(__classPrivateFieldGet(this, _PollingEventSubscriber_filter, \"f\"), log);\n    }\n};\n//# sourceMappingURL=subscriber-polling.js.map","// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractProvider_instances, _AbstractProvider_subs, _AbstractProvider_plugins, _AbstractProvider_pausedState, _AbstractProvider_networkPromise, _AbstractProvider_anyNetwork, _AbstractProvider_performCache, _AbstractProvider_nextTimer, _AbstractProvider_timers, _AbstractProvider_disableCcipRead, _AbstractProvider_perform, _AbstractProvider_call, _AbstractProvider_getBlock, _AbstractProvider_hasSub, _AbstractProvider_getSub;\nimport { resolveAddress } from \"@ethersproject/address\";\nimport { concat, dataLength, dataSlice, hexlify, isHexString } from \"@ethersproject/bytes\";\nimport { isCallException } from \"@ethersproject/logger\";\nimport { toArray } from \"@ethersproject/math\";\nimport { defineProperties, EventPayload, resolveProperties } from \"@ethersproject/properties\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { fetchData, FetchRequest } from \"@ethersproject/web\";\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { FeeData } from \"./provider.js\";\nimport { PollingBlockSubscriber, PollingEventSubscriber, PollingOrphanSubscriber, PollingTransactionSubscriber } from \"./subscriber-polling.js\";\n// Constants\nconst BN_2 = BigInt(2);\nconst MAX_CCIP_REDIRECTS = 10;\nfunction getTag(prefix, value) {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (typeof (v) === \"bigint\") {\n            return `bigint:${v.toString()}`;\n        }\n        if (typeof (v) === \"string\") {\n            return v.toLowerCase();\n        }\n        // Sort object keys\n        if (typeof (v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, {});\n        }\n        return v;\n    });\n}\nexport class UnmanagedSubscriber {\n    constructor(name) { defineProperties(this, { name }); }\n    start() { }\n    stop() { }\n    pause(dropWhilePaused) { }\n    resume() { }\n}\nfunction copy(value) {\n    return JSON.parse(JSON.stringify(value));\n}\nfunction concisify(items) {\n    items = Array.from((new Set(items)).values());\n    items.sort();\n    return items;\n}\n// Normalize a ProviderEvent into a Subscription\n// @TODO: Make events sync if possible; like block\n//function getSyncSubscription(_event: ProviderEvent): Subscription {\n//}\nasync function getSubscription(_event, provider) {\n    if (_event == null) {\n        throw new Error(\"invalid event\");\n    }\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) {\n        _event = { topics: _event };\n    }\n    if (typeof (_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"pending\":\n            case \"debug\":\n            case \"network\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n    if (_event.orphan) {\n        const event = _event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n    if ((_event.address || _event.topics)) {\n        const event = _event;\n        const filter = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) {\n                    return null;\n                }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n        if (event.address) {\n            const addresses = [];\n            const promises = [];\n            const addAddress = (addr) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                }\n                else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            };\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            }\n            else {\n                addAddress(event.address);\n            }\n            if (promises.length) {\n                await Promise.all(promises);\n            }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n    return logger.throwArgumentError(\"unknown ProviderEvent\", \"event\", _event);\n}\nfunction getTime() { return (new Date()).getTime(); }\nexport function copyRequest(tx) {\n    // @TODO: copy the copy from contracts and use it from this\n    return tx;\n}\nexport class AbstractProvider {\n    // @TODO: This should be a () => Promise<Network> so network can be\n    // done when needed; or rely entirely on _detectNetwork?\n    constructor(_network) {\n        _AbstractProvider_instances.add(this);\n        _AbstractProvider_subs.set(this, void 0);\n        _AbstractProvider_plugins.set(this, void 0);\n        // null=unpaused, true=paused+dropWhilePaused, false=paused\n        _AbstractProvider_pausedState.set(this, void 0);\n        _AbstractProvider_networkPromise.set(this, void 0);\n        _AbstractProvider_anyNetwork.set(this, void 0);\n        _AbstractProvider_performCache.set(this, void 0);\n        _AbstractProvider_nextTimer.set(this, void 0);\n        _AbstractProvider_timers.set(this, void 0);\n        _AbstractProvider_disableCcipRead.set(this, void 0);\n        if (_network === \"any\") {\n            __classPrivateFieldSet(this, _AbstractProvider_anyNetwork, true, \"f\");\n            __classPrivateFieldSet(this, _AbstractProvider_networkPromise, null, \"f\");\n        }\n        else if (_network) {\n            const network = Network.from(_network);\n            __classPrivateFieldSet(this, _AbstractProvider_anyNetwork, false, \"f\");\n            __classPrivateFieldSet(this, _AbstractProvider_networkPromise, Promise.resolve(network), \"f\");\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        }\n        else {\n            __classPrivateFieldSet(this, _AbstractProvider_anyNetwork, false, \"f\");\n            __classPrivateFieldSet(this, _AbstractProvider_networkPromise, null, \"f\");\n        }\n        //this.#approxNumber = -2;\n        //this.#approxNumberT0 = 0;\n        __classPrivateFieldSet(this, _AbstractProvider_performCache, new Map(), \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_subs, new Map(), \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_plugins, new Map(), \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_pausedState, null, \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_nextTimer, 0, \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_timers, new Map(), \"f\");\n        __classPrivateFieldSet(this, _AbstractProvider_disableCcipRead, false, \"f\");\n    }\n    get plugins() {\n        return Array.from(__classPrivateFieldGet(this, _AbstractProvider_plugins, \"f\").values());\n    }\n    attachPlugin(plugin) {\n        if (__classPrivateFieldGet(this, _AbstractProvider_plugins, \"f\").get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n        }\n        __classPrivateFieldGet(this, _AbstractProvider_plugins, \"f\").set(plugin.name, plugin.validate(this));\n        return this;\n    }\n    getPlugin(name) {\n        return (__classPrivateFieldGet(this, _AbstractProvider_plugins, \"f\").get(name)) || null;\n    }\n    set disableCcipRead(value) { __classPrivateFieldSet(this, _AbstractProvider_disableCcipRead, !!value, \"f\"); }\n    get disableCcipRead() { return __classPrivateFieldGet(this, _AbstractProvider_disableCcipRead, \"f\"); }\n    async ccipReadFetch(tx, calldata, urls) {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n            return null;\n        }\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n        const errorMessages = [];\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n            let errorMessage = \"unknown error\";\n            const resp = await fetchData(request);\n            try {\n                const result = resp.bodyJson;\n                if (result.data) {\n                    return result.data;\n                }\n                if (result.message) {\n                    errorMessage = result.message;\n                }\n            }\n            catch (error) { }\n            // 4xx indicates the result is not present; stop\n            if (resp.statusCode >= 400 && resp.statusCode < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", {\n                    reason: \"404_MISSING_RESOURCE\",\n                    transaction: tx, info: { url, errorMessage }\n                });\n            }\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n        return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n    _wrapTransaction(tx, hash, blockNumber) {\n        return tx;\n    }\n    _detectNetwork() {\n        return logger.throwError(\"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n    async _perform(req) {\n        return logger.throwError(`unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n    // State\n    async getBlockNumber() {\n        return logger.getNumber(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getBlockNumber\" }), \"%response\");\n    }\n    async _getAddress(address) {\n        if (typeof (address) === \"string\") {\n            return address;\n        }\n        return await address.getAddress();\n    }\n    async _getBlockTag(blockTag) {\n        const network = await this.getNetwork();\n        if (typeof (blockTag) === \"number\" && Number.isSafeInteger(blockTag) && blockTag < 0) {\n            //let blockNumber = await this._getApproxBlockNumber(500);\n            let blockNumber = await this.getBlockNumber();\n            blockNumber += blockTag;\n            if (blockNumber < 0) {\n                blockNumber = 0;\n            }\n            return network.formatter.blockTag(blockNumber);\n        }\n        return network.formatter.blockTag(blockTag);\n    }\n    async getNetwork() {\n        // No explicit network was set and this is our first time\n        if (__classPrivateFieldGet(this, _AbstractProvider_networkPromise, \"f\") == null) {\n            // Detect the current network (shared with all calls)\n            const detectNetwork = this._detectNetwork().then((network) => {\n                this.emit(\"network\", network, null);\n                return network;\n            }, (error) => {\n                // Reset the networkPromise on failure, so we will try again\n                if (__classPrivateFieldGet(this, _AbstractProvider_networkPromise, \"f\") === detectNetwork) {\n                    __classPrivateFieldSet(this, _AbstractProvider_networkPromise, null, \"f\");\n                }\n                throw error;\n            });\n            __classPrivateFieldSet(this, _AbstractProvider_networkPromise, detectNetwork, \"f\");\n            return await detectNetwork;\n        }\n        const networkPromise = __classPrivateFieldGet(this, _AbstractProvider_networkPromise, \"f\");\n        const [expected, actual] = await Promise.all([\n            networkPromise,\n            this._detectNetwork() // The actual connected network\n        ]);\n        if (expected.chainId !== actual.chainId) {\n            if (__classPrivateFieldGet(this, _AbstractProvider_anyNetwork, \"f\")) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n                // Update the network if something else hasn't already changed it\n                if (__classPrivateFieldGet(this, _AbstractProvider_networkPromise, \"f\") === networkPromise) {\n                    __classPrivateFieldSet(this, _AbstractProvider_networkPromise, Promise.resolve(actual), \"f\");\n                }\n            }\n            else {\n                // Otherwise, we do not allow changes to the underlying network\n                logger.throwError(`network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n        return expected.clone().freeze();\n    }\n    async getFeeData() {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: ((async () => {\n                try {\n                    const gasPrice = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getGasPrice\" });\n                    return logger.getBigInt(gasPrice, \"%response\");\n                }\n                catch (error) { }\n                return null;\n            })())\n        });\n        let maxFeePerGas = null, maxPriorityFeePerGas = null;\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            maxPriorityFeePerGas = BigInt(\"1500000000\");\n            // Allow a network to override their maximum priority fee per gas\n            const priorityFeePlugin = (await this.getNetwork()).getPlugin(\"org.ethers.plugins.max-priority-fee\");\n            if (priorityFeePlugin) {\n                maxPriorityFeePerGas = await priorityFeePlugin.getPriorityFee(this);\n            }\n            maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n        }\n        return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n    }\n    async _getTransaction(_request) {\n        const network = await this.getNetwork();\n        // Fill in any addresses\n        const request = Object.assign({}, _request, await resolveProperties({\n            to: (_request.to ? resolveAddress(_request.to, this) : undefined),\n            from: (_request.from ? resolveAddress(_request.from, this) : undefined),\n        }));\n        return network.formatter.transactionRequest(request);\n    }\n    async estimateGas(_tx) {\n        const transaction = await this._getTransaction(_tx);\n        return logger.getBigInt(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"estimateGas\", transaction\n        }), \"%response\");\n    }\n    async call(_tx) {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransaction(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n        return __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_call).call(this, tx, blockTag, _tx.enableCcipRead ? 0 : -1);\n    }\n    // Account\n    async getBalanceOf(_address, _blockTag) {\n        const { address, blockTag } = await resolveProperties({\n            address: resolveAddress(_address),\n            blockTag: this._getBlockTag(_blockTag)\n        });\n        return logger.getBigInt(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"getBalance\", address, blockTag\n        }), \"%response\");\n    }\n    async getTransactionCountOf(_address, _blockTag) {\n        const { address, blockTag } = await resolveProperties({\n            address: resolveAddress(_address),\n            blockTag: this._getBlockTag(_blockTag)\n        });\n        return logger.getNumber(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"getTransactionCount\", address, blockTag\n        }), \"%response\");\n    }\n    async getCode(_address, _blockTag) {\n        const { address, blockTag } = await resolveProperties({\n            address: resolveAddress(_address),\n            blockTag: this._getBlockTag(_blockTag)\n        });\n        return hexlify(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"getCode\", address, blockTag\n        }));\n    }\n    async getStorageAt(_address, _position, _blockTag) {\n        const position = logger.getBigInt(_position);\n        const { address, blockTag } = await resolveProperties({\n            address: resolveAddress(_address),\n            blockTag: this._getBlockTag(_blockTag)\n        });\n        return hexlify(await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"getStorageAt\", address, position, blockTag\n        }));\n    }\n    // Write\n    async broadcastTransaction(signedTx) {\n        throw new Error();\n        return {};\n    }\n    // Queries\n    async getBlock(block) {\n        const format = (await this.getNetwork()).formatter;\n        const params = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_getBlock).call(this, block, false);\n        if (params == null) {\n            return null;\n        }\n        return format.block(params, this);\n    }\n    async getBlockWithTransactions(block) {\n        const format = (await this.getNetwork()).formatter;\n        const params = __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_getBlock).call(this, block, true);\n        if (params == null) {\n            return null;\n        }\n        return format.blockWithTransactions(params, this);\n    }\n    async getTransaction(hash) {\n        const format = (await this.getNetwork()).formatter;\n        const params = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getTransaction\", hash });\n        return format.transactionResponse(params, this);\n    }\n    async getTransactionReceipt(hash) {\n        const format = (await this.getNetwork()).formatter;\n        const receipt = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getTransactionReceipt\", hash });\n        if (receipt == null) {\n            return null;\n        }\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (receipt.gasPrice == null && receipt.effectiveGasPrice == null) {\n            const tx = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getTransaction\", hash });\n            receipt.effectiveGasPrice = tx.gasPrice;\n        }\n        return format.receipt(receipt, this);\n    }\n    async _getFilter(filter) {\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || []).map((t) => {\n            if (t == null) {\n                return null;\n            }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash : undefined;\n        const lookup = {};\n        // Addresses could be async (ENS names or Addressables)\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                lookup.address = Promise.all(filter.address.map((a) => resolveAddress(a, this)));\n            }\n            else {\n                lookup.address = resolveAddress(filter.address, this);\n            }\n        }\n        // Block Tags could be async (i.e. relative)\n        const addBlockTag = (key) => {\n            if (filter[key] == null) {\n                return;\n            }\n            lookup[key] = this._getBlockTag(filter[key]);\n        };\n        addBlockTag(\"fromBlock\");\n        addBlockTag(\"toBlock\");\n        // Wait for all properties to resolve\n        const result = await resolveProperties(lookup);\n        // Make sure things are canonical\n        if (Array.isArray(result.address)) {\n            result.address.sort();\n        }\n        result.topics = topics;\n        if (blockHash) {\n            if (filter.fromBlock || filter.toBlock) {\n                throw new Error(\"invalid filter\");\n            }\n            result.blockHash = blockHash;\n        }\n        return result;\n    }\n    // Bloom-filter Queries\n    async getLogs(_filter) {\n        const { network, filter } = await resolveProperties({\n            network: this.getNetwork(),\n            filter: this._getFilter(_filter)\n        });\n        return (await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, { method: \"getLogs\", filter })).map((l) => {\n            return network.formatter.log(l, this);\n        });\n    }\n    // ENS\n    _getProvider(chainId) {\n        return logger.throwError(\"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n    async getResolver(name) {\n        return await EnsResolver.fromName(this, name);\n    }\n    async getAvatar(name) {\n        const resolver = await this.getResolver(name);\n        if (resolver) {\n            return await resolver.getAvatar();\n        }\n        return null;\n    }\n    async resolveName(name) {\n        if (typeof (name) === \"string\") {\n            const resolver = await this.getResolver(name);\n            if (resolver) {\n                return await resolver.getAddress();\n            }\n        }\n        else {\n            const address = await name.getAddress();\n            if (address == null) {\n                return logger.throwArgumentError(\"Addressable returned no address\", \"name\", name);\n            }\n            return address;\n        }\n        return null;\n    }\n    async lookupAddress(address) {\n        throw new Error();\n        //return \"TODO\";\n    }\n    async waitForTransaction(hash, confirms = 1, timeout) {\n        if (confirms === 0) {\n            return this.getTransactionReceipt(hash);\n        }\n        return new Promise(async (resolve, reject) => {\n            let timer = null;\n            const listener = (async (blockNumber) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                }\n                catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(logger.makeError(\"timeout\", \"TIMEOUT\", {}));\n                }, timeout);\n            }\n            listener(await this.getBlockNumber());\n        });\n    }\n    async waitForBlock(blockTag) {\n        throw new Error();\n        //return new Block(<any><unknown>{ }, this);\n    }\n    _clearTimeout(timerId) {\n        const timer = __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").get(timerId);\n        if (!timer) {\n            return;\n        }\n        if (timer.timer) {\n            clearTimeout(timer.timer);\n        }\n        __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").delete(timerId);\n    }\n    _setTimeout(_func, timeout = 0) {\n        var _a, _b;\n        const timerId = (__classPrivateFieldSet(this, _AbstractProvider_nextTimer, (_b = __classPrivateFieldGet(this, _AbstractProvider_nextTimer, \"f\"), _a = _b++, _b), \"f\"), _a);\n        const func = () => {\n            __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").delete(timerId);\n            _func();\n        };\n        if (this.paused) {\n            __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").set(timerId, { timer: null, func, time: timeout });\n        }\n        else {\n            const timer = setTimeout(func, timeout);\n            __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").set(timerId, { timer, func, time: getTime() });\n        }\n        return timerId;\n    }\n    _forEachSubscriber(func) {\n        for (const sub of __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").values()) {\n            func(sub.subscriber);\n        }\n    }\n    // Event API; sub-classes should override this; any supported\n    // event filter will have been munged into an EventFilter\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case \"debug\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\":\n                return new PollingBlockSubscriber(this);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n        throw new Error(`unsupported event: ${sub.type}`);\n    }\n    _recoverSubscriber(oldSub, newSub) {\n        for (const sub of __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) {\n                    sub.subscriber.stop();\n                }\n                sub.subscriber = newSub;\n                if (sub.started) {\n                    newSub.start();\n                }\n                if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") != null) {\n                    newSub.pause(__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\"));\n                }\n                break;\n            }\n        }\n    }\n    async on(event, listener) {\n        const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_getSub).call(this, event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") != null) {\n                sub.subscriber.pause(__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\"));\n            }\n        }\n        return this;\n    }\n    async once(event, listener) {\n        const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_getSub).call(this, event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") != null) {\n                sub.subscriber.pause(__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\"));\n            }\n        }\n        return this;\n    }\n    async emit(event, ...args) {\n        const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_hasSub).call(this, event, args);\n        if (!sub) {\n            return false;\n        }\n        ;\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null : listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            }\n            catch (error) { }\n            return !once;\n        });\n        return (count > 0);\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_hasSub).call(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        let total = 0;\n        for (const { listeners } of __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_hasSub).call(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result = [];\n        for (const { listeners } of __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener) {\n        const sub = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_hasSub).call(this, event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) {\n                sub.subscriber.stop();\n            }\n            __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const { tag, started, subscriber } = await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_getSub).call(this, event);\n            if (started) {\n                subscriber.stop();\n            }\n            __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").delete(tag);\n        }\n        else {\n            for (const [tag, { started, subscriber }] of __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\")) {\n                if (started) {\n                    subscriber.stop();\n                }\n                __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener) {\n        return this.off(event, listener);\n    }\n    // Sub-classes should override this to shutdown any sockets, etc.\n    // but MUST call this super.shutdown.\n    async shutdown() {\n        // Stop all listeners\n        this.removeAllListeners();\n        // Shut down all tiemrs\n        for (const timerId of __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").keys()) {\n            this._clearTimeout(timerId);\n        }\n    }\n    get paused() { return (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") != null); }\n    pause(dropWhilePaused) {\n        if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") != null) {\n            if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") == !!dropWhilePaused) {\n                return;\n            }\n            return logger.throwError(\"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        __classPrivateFieldSet(this, _AbstractProvider_pausedState, !!dropWhilePaused, \"f\");\n        for (const timer of __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").values()) {\n            // Clear the timer\n            if (timer.timer) {\n                clearTimeout(timer.timer);\n            }\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n    resume() {\n        if (__classPrivateFieldGet(this, _AbstractProvider_pausedState, \"f\") == null) {\n            return;\n        }\n        this._forEachSubscriber((s) => s.resume());\n        __classPrivateFieldSet(this, _AbstractProvider_pausedState, null, \"f\");\n        for (const timer of __classPrivateFieldGet(this, _AbstractProvider_timers, \"f\").values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) {\n                timeout = 0;\n            }\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n_AbstractProvider_subs = new WeakMap(), _AbstractProvider_plugins = new WeakMap(), _AbstractProvider_pausedState = new WeakMap(), _AbstractProvider_networkPromise = new WeakMap(), _AbstractProvider_anyNetwork = new WeakMap(), _AbstractProvider_performCache = new WeakMap(), _AbstractProvider_nextTimer = new WeakMap(), _AbstractProvider_timers = new WeakMap(), _AbstractProvider_disableCcipRead = new WeakMap(), _AbstractProvider_instances = new WeakSet(), _AbstractProvider_perform = \n// Shares multiple identical requests made during the same 250ms\nasync function _AbstractProvider_perform(req) {\n    // Create a tag\n    const tag = getTag(req.method, req);\n    let perform = __classPrivateFieldGet(this, _AbstractProvider_performCache, \"f\").get(tag);\n    if (!perform) {\n        perform = this._perform(req);\n        __classPrivateFieldGet(this, _AbstractProvider_performCache, \"f\").set(tag, perform);\n        setTimeout(() => {\n            if (__classPrivateFieldGet(this, _AbstractProvider_performCache, \"f\").get(tag) === perform) {\n                __classPrivateFieldGet(this, _AbstractProvider_performCache, \"f\").delete(tag);\n            }\n        }, 250);\n    }\n    return await perform;\n}, _AbstractProvider_call = async function _AbstractProvider_call(tx, blockTag, attempt) {\n    if (attempt >= MAX_CCIP_REDIRECTS) {\n        logger.throwError(\"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n            reason: \"TOO_MANY_REDIRECTS\",\n            transaction: Object.assign({}, tx, { blockTag, enableCcipRead: true })\n        });\n    }\n    const transaction = copyRequest(tx);\n    try {\n        return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n    }\n    catch (error) {\n        // CCIP Read OffchainLookup\n        if (!this.disableCcipRead && isCallException(error) && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n            const data = error.data;\n            const txSender = await resolveAddress(transaction.to, this);\n            // Parse the CCIP Read Arguments\n            let ccipArgs;\n            try {\n                ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n            }\n            catch (error) {\n                return logger.throwError(error.message, \"OFFCHAIN_FAULT\", {\n                    reason: \"BAD_DATA\",\n                    transaction, info: { data }\n                });\n            }\n            // Check the sender of the OffchainLookup matches the transaction\n            if (ccipArgs.sender.toLowerCase() !== txSender.toLowerCase()) {\n                return logger.throwError(\"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                    data, transaction,\n                    errorSignature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                    errorName: \"OffchainLookup\",\n                    errorArgs: ccipArgs.errorArgs\n                });\n            }\n            const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n            if (ccipResult == null) {\n                return logger.throwError(\"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                    reason: \"FETCH_FAILED\",\n                    transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs }\n                });\n            }\n            return __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_call).call(this, {\n                to: txSender,\n                data: concat([\n                    ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])\n                ]),\n            }, blockTag, attempt + 1);\n        }\n        throw error;\n    }\n}, _AbstractProvider_getBlock = async function _AbstractProvider_getBlock(block, includeTransactions) {\n    const format = (await this.getNetwork()).formatter;\n    if (isHexString(block, 32)) {\n        return await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n            method: \"getBlock\", blockHash: block, includeTransactions\n        });\n    }\n    return await __classPrivateFieldGet(this, _AbstractProvider_instances, \"m\", _AbstractProvider_perform).call(this, {\n        method: \"getBlock\", blockTag: format.blockTag(block), includeTransactions\n    });\n}, _AbstractProvider_hasSub = async function _AbstractProvider_hasSub(event, emitArgs) {\n    let sub = await getSubscription(event, this);\n    // This is a log that is removing an existing log; we actually want\n    // to emit an orphan event for the removed log\n    if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n        sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n    }\n    return __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").get(sub.tag) || null;\n}, _AbstractProvider_getSub = async function _AbstractProvider_getSub(event) {\n    const subscription = await getSubscription(event, this);\n    // Prevent tampering with our tag in any subclass' _getSubscriber\n    const tag = subscription.tag;\n    let sub = __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").get(tag);\n    if (!sub) {\n        const subscriber = this._getSubscriber(subscription);\n        const addressableMap = new WeakMap();\n        const nameMap = new Map();\n        sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [] };\n        __classPrivateFieldGet(this, _AbstractProvider_subs, \"f\").set(tag, sub);\n    }\n    return sub;\n};\nfunction _parseString(result, start) {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) {\n            return toUtf8String(bytes);\n        }\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    try {\n        const offset = logger.getNumber(dataSlice(result, start, start + 32));\n        const length = logger.getNumber(dataSlice(result, offset, offset + 32));\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    }\n    catch (error) { }\n    return null;\n}\nfunction numPad(value) {\n    const result = toArray(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\nconst empty = new Uint8Array([]);\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = logger.getBytes(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return concat(result);\n}\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseOffchainLookup(data) {\n    const result = {\n        sender: \"\", urls: [], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: []\n    };\n    if (dataLength(data) < 5 * 32) {\n        throw new Error(\"insufficient OffchainLookup data\");\n    }\n    const sender = dataSlice(data, 0, 32);\n    if (dataSlice(sender, 0, 12) !== dataSlice(zeros, 0, 12)) {\n        throw new Error(\"corrupt OffchainLookup sender\");\n    }\n    result.sender = dataSlice(sender, 12);\n    // Read the URLs from the response\n    try {\n        const urls = [];\n        const urlsOffset = logger.getNumber(dataSlice(data, 32, 64));\n        const urlsLength = logger.getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) {\n                throw new Error(\"abort\");\n            }\n            urls.push(url);\n        }\n        result.urls = urls;\n    }\n    catch (error) {\n        throw new Error(\"corrupt OffchainLookup urls\");\n    }\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) {\n            throw new Error(\"abort\");\n        }\n        result.calldata = calldata;\n    }\n    catch (error) {\n        throw new Error(\"corrupt OffchainLookup calldata\");\n    }\n    // Get the callbackSelector (bytes4)\n    if (dataSlice(data, 100, 128) !== dataSlice(zeros, 0, 28)) {\n        throw new Error(\"corrupt OffchainLookup callbaackSelector\");\n    }\n    result.selector = dataSlice(data, 96, 100);\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) {\n            throw new Error(\"abort\");\n        }\n        result.extraData = extraData;\n    }\n    catch (error) {\n        throw new Error(\"corrupt OffchainLookup extraData\");\n    }\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => result[k]);\n    return result;\n}\n//# sourceMappingURL=abstract-provider.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AbstractSigner_instances, _AbstractSigner_checkProvider, _AbstractSigner_fromify, _VoidSigner_instances, _VoidSigner_throwUnsupported, _WrappedSigner_signer;\nimport { defineProperties, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { logger } from \"./logger.js\";\nexport class AbstractSigner {\n    constructor(provider) {\n        _AbstractSigner_instances.add(this);\n        defineProperties(this, { provider: (provider || null) });\n    }\n    async getBalance(blockTag) {\n        return __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"getBalance\").getBalanceOf(await this.getAddress(), blockTag);\n    }\n    async getTransactionCount(blockTag) {\n        return __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"getTransactionCount\").getTransactionCountOf(await this.getAddress(), blockTag);\n    }\n    async estimateGas(tx) {\n        return __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"estimateGas\").estimateGas(await __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_fromify).call(this, tx));\n    }\n    async call(tx) {\n        return __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"call\").call(await __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_fromify).call(this, tx));\n    }\n    async populateTransaction(tx) {\n        const provider = __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"populateTransaction\");\n        //let pop: Deferrable<TransactionRequest> = Object.assign({ }, tx);\n        let pop = Object.assign({}, tx);\n        if (pop.to != null) {\n            pop.to = provider.resolveName(pop.to).then((to) => {\n                if (to == null) {\n                    return logger.throwArgumentError(\"transaction to ENS name not configured\", \"tx.to\", pop.to);\n                }\n                return to;\n            });\n        }\n        if (pop.from != null) {\n            const from = pop.from;\n            pop.from = Promise.all([\n                this.getAddress(),\n                this.resolveName(from)\n            ]).then(([address, from]) => {\n                if (!from || address.toLowerCase() !== from.toLowerCase()) {\n                    return logger.throwArgumentError(\"transaction from mismatch\", \"tx.from\", from);\n                }\n                return address;\n            });\n        }\n        if (pop.nonce == null) {\n            pop.nonce = this.getTransactionCount();\n        }\n        pop = resolveProperties(pop);\n        if (pop.gasLimit == null) {\n            pop.gasLimit = provider.estimateGas(pop);\n        }\n        pop = resolveProperties(pop);\n        //@TODO: Copy logic from AbstractSigner in v5\n        return await resolveProperties(pop);\n    }\n    async resolveName(name) {\n        const provider = __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n    async sendTransaction(tx) {\n        const provider = __classPrivateFieldGet(this, _AbstractSigner_instances, \"m\", _AbstractSigner_checkProvider).call(this, \"sendTransaction\");\n        const txObj = Transaction.from(await this.populateTransaction(tx));\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n}\n_AbstractSigner_instances = new WeakSet(), _AbstractSigner_checkProvider = function _AbstractSigner_checkProvider(operation) {\n    if (this.provider) {\n        return this.provider;\n    }\n    return logger.throwError(\"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}, _AbstractSigner_fromify = async function _AbstractSigner_fromify(tx) {\n    tx = Object.assign({}, tx);\n    const actions = [];\n    if (tx.from != null) {\n        const from = tx.from;\n        actions.push(Promise.all([\n            this.getAddress(),\n            this.resolveName(from)\n        ]).then(([address, from]) => {\n            if (!from || address.toLowerCase() !== from.toLowerCase()) {\n                logger.throwArgumentError(\"transaction from mismatch\", \"tx.from\", from);\n            }\n            tx.from = address;\n        }));\n    }\n    await Promise.all(actions);\n    return tx;\n};\nexport class VoidSigner extends AbstractSigner {\n    constructor(address, provider) {\n        super(provider);\n        _VoidSigner_instances.add(this);\n        defineProperties(this, { address });\n    }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n    async signTransaction(tx) {\n        __classPrivateFieldGet(this, _VoidSigner_instances, \"m\", _VoidSigner_throwUnsupported).call(this, \"transactions\", \"signTransaction\");\n    }\n    async signMessage(message) {\n        __classPrivateFieldGet(this, _VoidSigner_instances, \"m\", _VoidSigner_throwUnsupported).call(this, \"messages\", \"signMessage\");\n    }\n    async signTypedData(domain, types, value) {\n        __classPrivateFieldGet(this, _VoidSigner_instances, \"m\", _VoidSigner_throwUnsupported).call(this, \"typed-data\", \"signTypedData\");\n    }\n}\n_VoidSigner_instances = new WeakSet(), _VoidSigner_throwUnsupported = function _VoidSigner_throwUnsupported(suffix, operation) {\n    return logger.throwError(`VoidSigner cannot sign ${suffix}`, \"UNSUPPORTED_OPERATION\", {\n        operation\n    });\n};\nexport class WrappedSigner extends AbstractSigner {\n    //get provider(): null | Provider { return this.#signer.provider; }\n    constructor(signer) {\n        super(signer.provider);\n        _WrappedSigner_signer.set(this, void 0);\n        __classPrivateFieldSet(this, _WrappedSigner_signer, signer, \"f\");\n    }\n    async getAddress() {\n        return await __classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").getAddress();\n    }\n    connect(provider) {\n        return new WrappedSigner(__classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").connect(provider));\n    }\n    async signTransaction(tx) {\n        return await __classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").signTransaction(tx);\n    }\n    async sendTransaction(tx) {\n        return await __classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").sendTransaction(tx);\n    }\n    async signMessage(message) {\n        return await __classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").signMessage(message);\n    }\n    async signTypedData(domain, types, value) {\n        return await __classPrivateFieldGet(this, _WrappedSigner_signer, \"f\").signTypedData(domain, types, value);\n    }\n}\n_WrappedSigner_signer = new WeakMap();\n//# sourceMappingURL=abstract-signer.js.map","// Show the throttle message only once\nconst shown = new Set();\nexport function showThrottleMessage(service) {\n    if (shown.has(service)) {\n        return;\n    }\n    shown.add(service);\n    console.log(\"========= NOTICE =========\");\n    console.log(`Request-Rate Exceeded for ${service} (this message will not be repeated)`);\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=community.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FilterIdSubscriber_instances, _FilterIdSubscriber_provider, _FilterIdSubscriber_filterIdPromise, _FilterIdSubscriber_poller, _FilterIdSubscriber_network, _FilterIdSubscriber_poll, _FilterIdSubscriber_teardown, _FilterIdEventSubscriber_event;\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\nfunction copy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class FilterIdSubscriber {\n    constructor(provider) {\n        _FilterIdSubscriber_instances.add(this);\n        _FilterIdSubscriber_provider.set(this, void 0);\n        _FilterIdSubscriber_filterIdPromise.set(this, void 0);\n        _FilterIdSubscriber_poller.set(this, void 0);\n        _FilterIdSubscriber_network.set(this, void 0);\n        __classPrivateFieldSet(this, _FilterIdSubscriber_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _FilterIdSubscriber_filterIdPromise, null, \"f\");\n        __classPrivateFieldSet(this, _FilterIdSubscriber_poller, __classPrivateFieldGet(this, _FilterIdSubscriber_instances, \"m\", _FilterIdSubscriber_poll).bind(this), \"f\");\n        __classPrivateFieldSet(this, _FilterIdSubscriber_network, null, \"f\");\n    }\n    _subscribe(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    _emitResults(provider, result) {\n        throw new Error(\"subclasses must override this\");\n    }\n    _recover(provider) {\n        throw new Error(\"subclasses must override this\");\n    }\n    start() { __classPrivateFieldGet(this, _FilterIdSubscriber_instances, \"m\", _FilterIdSubscriber_poll).call(this, -2); }\n    stop() {\n        __classPrivateFieldGet(this, _FilterIdSubscriber_instances, \"m\", _FilterIdSubscriber_teardown).call(this);\n        __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").off(\"block\", __classPrivateFieldGet(this, _FilterIdSubscriber_poller, \"f\"));\n    }\n    pause(dropWhilePaused) {\n        if (dropWhilePaused) {\n            __classPrivateFieldGet(this, _FilterIdSubscriber_instances, \"m\", _FilterIdSubscriber_teardown).call(this);\n        }\n        __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").off(\"block\", __classPrivateFieldGet(this, _FilterIdSubscriber_poller, \"f\"));\n    }\n    resume() { this.start(); }\n}\n_FilterIdSubscriber_provider = new WeakMap(), _FilterIdSubscriber_filterIdPromise = new WeakMap(), _FilterIdSubscriber_poller = new WeakMap(), _FilterIdSubscriber_network = new WeakMap(), _FilterIdSubscriber_instances = new WeakSet(), _FilterIdSubscriber_poll = async function _FilterIdSubscriber_poll(blockNumber) {\n    try {\n        if (__classPrivateFieldGet(this, _FilterIdSubscriber_filterIdPromise, \"f\") == null) {\n            __classPrivateFieldSet(this, _FilterIdSubscriber_filterIdPromise, this._subscribe(__classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\")), \"f\");\n        }\n        const filterId = await __classPrivateFieldGet(this, _FilterIdSubscriber_filterIdPromise, \"f\");\n        if (filterId == null) {\n            __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\")._recoverSubscriber(this, this._recover(__classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\")));\n            return;\n        }\n        const network = await __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").getNetwork();\n        if (!__classPrivateFieldGet(this, _FilterIdSubscriber_network, \"f\")) {\n            __classPrivateFieldSet(this, _FilterIdSubscriber_network, network, \"f\");\n        }\n        if (__classPrivateFieldGet(this, _FilterIdSubscriber_network, \"f\").chainId !== network.chainId) {\n            throw new Error(\"chaid changed\");\n        }\n        const result = await __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").send(\"eth_getFilterChanges\", [filterId]);\n        await this._emitResults(__classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\"), result);\n    }\n    catch (error) {\n        console.log(\"@TODO\", error);\n    }\n    __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").once(\"block\", __classPrivateFieldGet(this, _FilterIdSubscriber_poller, \"f\"));\n}, _FilterIdSubscriber_teardown = function _FilterIdSubscriber_teardown() {\n    const filterIdPromise = __classPrivateFieldGet(this, _FilterIdSubscriber_filterIdPromise, \"f\");\n    if (filterIdPromise) {\n        __classPrivateFieldSet(this, _FilterIdSubscriber_filterIdPromise, null, \"f\");\n        filterIdPromise.then((filterId) => {\n            __classPrivateFieldGet(this, _FilterIdSubscriber_provider, \"f\").send(\"eth_uninstallFilter\", [filterId]);\n        });\n    }\n};\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    constructor(provider, filter) {\n        super(provider);\n        _FilterIdEventSubscriber_event.set(this, void 0);\n        __classPrivateFieldSet(this, _FilterIdEventSubscriber_event, copy(filter), \"f\");\n    }\n    _recover(provider) {\n        return new PollingEventSubscriber(provider, __classPrivateFieldGet(this, _FilterIdEventSubscriber_event, \"f\"));\n    }\n    async _subscribe(provider) {\n        const filterId = await provider.send(\"eth_newFilter\", [__classPrivateFieldGet(this, _FilterIdEventSubscriber_event, \"f\")]);\n        console.log(\"____SUB\", filterId);\n        return filterId;\n    }\n    async _emitResults(provider, results) {\n        const network = await provider.getNetwork();\n        for (const result of results) {\n            const log = network.formatter.log(result, provider);\n            provider.emit(__classPrivateFieldGet(this, _FilterIdEventSubscriber_event, \"f\"), log);\n        }\n    }\n}\n_FilterIdEventSubscriber_event = new WeakMap();\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider) {\n        return await provider.send(\"eth_newPendingTransactionFilter\", []);\n    }\n    async _emitResults(provider, results) {\n        const network = await provider.getNetwork();\n        for (const result of results) {\n            provider.emit(\"pending\", network.formatter.hash(result));\n        }\n    }\n}\n//# sourceMappingURL=subscriber-filterid.js.map","// @TODO:\n// - Add the batching API\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _JsonRpcApiProvider_nextId, _JsonRpcApiProvider_options, _JsonRpcProvider_connect, _JsonRpcProvider_pollingInterval;\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\nimport { resolveAddress } from \"@ethersproject/address\";\nimport { hexlify, isHexString, quantity } from \"@ethersproject/bytes\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { TypedDataEncoder } from \"@ethersproject/hash\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchData, FetchRequest } from \"@ethersproject/web\";\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { logger } from \"./logger.js\";\nfunction copy(value) {\n    return JSON.parse(JSON.stringify(value));\n}\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy(value) {\n    if (value == null || Primitive.indexOf(typeof (value)) >= 0) {\n        return value;\n    }\n    // Keep any Addressable\n    if (typeof (value.getAddress) === \"function\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return (value.map(deepCopy));\n    }\n    if (typeof (value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = value[key];\n            return accum;\n        }, {});\n    }\n    throw new Error(`should not happen: ${value} (${typeof (value)})`);\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nfunction isPollable(value) {\n    return (value && typeof (value.pollingInterval) === \"number\");\n}\nconst defaultOptions = {\n    // Default to use filter ID (the FilterIdSubscriber will\n    // fallback onto polling if subscription fails)\n    polling: false,\n    // Maximum batch size (in bytes)\n    batchMaxSize: (1 << 20),\n    // How long to wait before dispatching a new batch\n    batchStallTime: 250,\n};\n// @TODO: Unchecked Signers\nexport class JsonRpcSigner {\n    constructor(provider, address) {\n        defineProperties(this, { provider, address });\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n    async getAddress() {\n        return this.address;\n    }\n    async getNetwork() {\n        return await this.provider.getNetwork();\n    }\n    async getFeeData() {\n        return await this.provider.getFeeData();\n    }\n    async estimateGas(tx) {\n        return await this.provider.estimateGas(tx);\n    }\n    async call(tx) {\n        return await this.provider.call(tx);\n    }\n    async resolveName(name) {\n        return await this.provider.resolveName(name);\n    }\n    async getBalance(blockTag) {\n        return await this.provider.getBalanceOf(this.address);\n    }\n    async getTransactionCount(blockTag) {\n        return await this.provider.getTransactionCountOf(this.address);\n    }\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        const promises = [];\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                if (from == null || from.toLowerCase() !== this.address.toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", _tx);\n                }\n                tx.from = from;\n            })());\n        }\n        else {\n            tx.from = this.address;\n        }\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas(Object.assign(Object.assign({}, tx), { from: this.address }));\n            })());\n        }\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n        // Wait until all of our properties are filled in\n        if (promises.length) {\n            await Promise.all(promises);\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return this.provider.send(\"eth_sendTransaction\", [hexTx]);\n    }\n    async sendTransaction(tx) {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [1000, 100];\n            const checkTx = async () => {\n                // Try getting the transaction\n                const tx = await this.provider.getTransaction(hash);\n                if (tx != null) {\n                    resolve(this.provider._wrapTransaction(tx, hash, blockNumber));\n                    return;\n                }\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n    async signTransaction(_tx) {\n        const tx = deepCopy(_tx);\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            if (from == null || from.toLowerCase() !== this.address.toLowerCase()) {\n                return logger.throwArgumentError(\"from address mismatch\", \"transaction\", _tx);\n            }\n            tx.from = from;\n        }\n        else {\n            tx.from = this.address;\n        }\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_sign_Transaction\", [hexTx]);\n    }\n    async signMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase()\n        ]);\n    }\n    async signTypedData(domain, types, _value) {\n        const value = deepCopy(_value);\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value) => {\n            const address = await resolveAddress(value);\n            if (address == null) {\n                return logger.throwArgumentError(\"TypedData does not support null address\", \"value\", value);\n            }\n            return address;\n        });\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n    async unlock(password) {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null\n        ]);\n    }\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message) {\n        const message = ((typeof (_message) === \"string\") ? toUtf8Bytes(_message) : _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message)\n        ]);\n    }\n}\nexport class JsonRpcApiProvider extends AbstractProvider {\n    constructor(network) {\n        super(network);\n        _JsonRpcApiProvider_nextId.set(this, void 0);\n        _JsonRpcApiProvider_options.set(this, void 0);\n        __classPrivateFieldSet(this, _JsonRpcApiProvider_nextId, 1, \"f\");\n        __classPrivateFieldSet(this, _JsonRpcApiProvider_options, Object.assign({}, defaultOptions), \"f\");\n    }\n    _getOptions(key) {\n        return __classPrivateFieldGet(this, _JsonRpcApiProvider_options, \"f\")[key];\n    }\n    _setOptions(options) {\n        // Validate all the options\n        for (const _key in options) {\n            const key = _key;\n            const value = options[key];\n            if (typeof (value) !== typeof (__classPrivateFieldGet(this, _JsonRpcApiProvider_options, \"f\")[key])) {\n                return logger.throwArgumentError(\"invalid option value\", `options.${key}`, value);\n            }\n        }\n        // Update the values\n        for (const _key in options) {\n            const key = _key;\n            __classPrivateFieldGet(this, _JsonRpcApiProvider_options, \"f\")[key] = (options[key]);\n        }\n    }\n    prepareRequest(method, params) {\n        var _a, _b;\n        return {\n            method, params, id: (__classPrivateFieldSet(this, _JsonRpcApiProvider_nextId, (_b = __classPrivateFieldGet(this, _JsonRpcApiProvider_nextId, \"f\"), _a = _b++, _b), \"f\"), _a), jsonrpc: \"2.0\"\n        };\n    }\n    // Sends the payload to the backend\n    //async sendPayload(payload: any): Promise<any> {\n    //    throw new Error(\"sub-class must implement this\");\n    //}\n    async send(method, params) {\n        // @TODO: This should construct and queue the payload\n        throw new Error(\"sub-class must implement this\");\n    }\n    async getSigner(address = 0) {\n        const network = await this.getNetwork();\n        const accounts = await this.send(\"eth_accounts\", []);\n        // Account index\n        if (typeof (address) === \"number\") {\n            if (address > accounts.length) {\n                throw new Error(\"no such account\");\n            }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n        // Account address\n        address = network.formatter.address(address);\n        for (const account of accounts) {\n            if (network.formatter.address(account) === account) {\n                return new JsonRpcSigner(this, account);\n            }\n        }\n        throw new Error(\"invalid account\");\n    }\n    // Sub-classes can override this; it detects the *actual* network we\n    // are connected to\n    async _detectNetwork() {\n        return Network.from(logger.getBigInt(await this._perform({ method: \"chainId\" })));\n    }\n    _getSubscriber(sub) {\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") {\n            return new FilterIdPendingSubscriber(this);\n        }\n        if (sub.type === \"event\") {\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n        return super._getSubscriber(sub);\n    }\n    getRpcTransaction(tx) {\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            let dstKey = key;\n            if (key === \"gasLimit\") {\n                dstKey = \"gas\";\n            }\n            result[dstKey] = quantity(tx[key]);\n        });\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            result[key] = hexlify(tx[key]);\n        });\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n        return result;\n    }\n    getRpcRequest(req) {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [] };\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [] };\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [getLowerCase(req.address), req.blockTag]\n                };\n            case \"getStorageAt\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n            case \"sendTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [req.signedTransaction]\n                };\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [req.blockTag, !!req.includeTransactions]\n                    };\n                }\n                else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [req.blockHash, !!req.includeTransactions]\n                    };\n                }\n                break;\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [req.hash]\n                };\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [req.hash]\n                };\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [this.getRpcTransaction(req.transaction), req.blockTag]\n                };\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [this.getRpcTransaction(req.transaction)]\n                };\n            }\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    }\n                    else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [req.filter] };\n        }\n        return null;\n    }\n    getRpcError(method, args, error) {\n        if (method === \"eth_call\") {\n            const result = spelunkData(error);\n            if (result) {\n                // @TODO: Extract errorSignature, errorName, errorArgs, reason if\n                //        it is Error(string) or Panic(uint25)\n                return logger.makeError(\"execution reverted during JSON-RPC call\", \"CALL_EXCEPTION\", {\n                    data: result.data,\n                    transaction: args[0]\n                });\n            }\n            return logger.makeError(\"missing revert data during JSON-RPC call\", \"CALL_EXCEPTION\", {\n                data: \"0x\", transaction: args[0], info: { error }\n            });\n        }\n        if (method === \"eth_estimateGas\") {\n        }\n        const message = JSON.stringify(spelunkMessage(error));\n        if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n            return logger.makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                transaction: args[0]\n            });\n        }\n        if (message.match(/nonce/) && message.match(/too low/)) {\n            return logger.makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", {\n                transaction: args[0]\n            });\n        }\n        // \"replacement transaction underpriced\"\n        if (message.match(/replacement transaction/) && message.match(/underpriced/)) {\n            return logger.makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", {\n                transaction: args[0]\n            });\n        }\n        if (message.match(/only replay-protected/)) {\n            return logger.makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                operation: method, info: { transaction: args[0] }\n            });\n        }\n        if (method === \"estimateGas\" && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n            return logger.makeError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", \"UNPREDICTABLE_GAS_LIMIT\", {\n                transaction: args[0]\n            });\n        }\n        return error;\n    }\n    async _perform(req) {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && logger.getBigInt(tx.type)) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({}, req, {\n                            transaction: Object.assign({}, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n        const request = this.getRpcRequest(req);\n        if (request != null) {\n            this.emit(\"debug\", { type: \"sendRequest\", request });\n            try {\n                const result = await this.send(request.method, request.args);\n                //console.log(\"RR\", result);\n                this.emit(\"debug\", { type: \"getResponse\", result });\n                return result;\n            }\n            catch (error) {\n                this.emit(\"debug\", { type: \"getError\", error });\n                throw this.getRpcError(request.method, request.args, error);\n            }\n        }\n        return super._perform(req);\n    }\n}\n_JsonRpcApiProvider_nextId = new WeakMap(), _JsonRpcApiProvider_options = new WeakMap();\nexport class JsonRpcProvider extends JsonRpcApiProvider {\n    constructor(url, network) {\n        if (url == null) {\n            url = \"http:/\\/localhost:8545\";\n        }\n        super(network);\n        _JsonRpcProvider_connect.set(this, void 0);\n        _JsonRpcProvider_pollingInterval.set(this, void 0);\n        if (typeof (url) === \"string\") {\n            __classPrivateFieldSet(this, _JsonRpcProvider_connect, { request: new FetchRequest(url) }, \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _JsonRpcProvider_connect, Object.assign({}, url), \"f\");\n            __classPrivateFieldGet(this, _JsonRpcProvider_connect, \"f\").request = __classPrivateFieldGet(this, _JsonRpcProvider_connect, \"f\").request.clone();\n        }\n        __classPrivateFieldSet(this, _JsonRpcProvider_pollingInterval, 4000, \"f\");\n    }\n    async send(method, params) {\n        params = copy(params);\n        // Configure a POST connection for the requested method\n        const connection = Object.assign({}, __classPrivateFieldGet(this, _JsonRpcProvider_connect, \"f\"));\n        connection.request = connection.request.clone();\n        connection.request.body = this.prepareRequest(method, params);\n        const response = await fetchData(connection);\n        response.assertOk();\n        const result = response.bodyJson;\n        if (\"error\" in result) {\n            return logger.throwError(\"error from JSON-RPC\", \"UNKNOWN_ERROR\", {\n                result\n            });\n        }\n        return result.result;\n    }\n    get pollingInterval() { return __classPrivateFieldGet(this, _JsonRpcProvider_pollingInterval, \"f\"); }\n    set pollingInterval(value) {\n        if (!Number.isInteger(value) || value < 0) {\n            throw new Error(\"invalid interval\");\n        }\n        __classPrivateFieldSet(this, _JsonRpcProvider_pollingInterval, value, \"f\");\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = __classPrivateFieldGet(this, _JsonRpcProvider_pollingInterval, \"f\");\n            }\n        });\n    }\n}\n_JsonRpcProvider_connect = new WeakMap(), _JsonRpcProvider_pollingInterval = new WeakMap();\n// This class should only be used when it is not possible for the\n// underlying network to change, such as with INFURA. If you are\n// using MetaMask or some other client which allows users to change\n// their network DO NOT USE THIS. Bad things will happen.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        super(url, network);\n        defineProperties(this, { network });\n    }\n    async _detectNetwork() {\n        return this.network;\n    }\n}\nfunction spelunkData(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction _spelunkMessage(value, result) {\n    if (value == null) {\n        return;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\") {\n        result.push(value.message);\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        }\n        catch (error) { }\n    }\n}\nfunction spelunkMessage(value) {\n    const result = [];\n    _spelunkMessage(value, result);\n    return result;\n}\n//# sourceMappingURL=provider-jsonrpc.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { FetchRequest } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { StaticJsonRpcProvider } from \"./provider-jsonrpc.js\";\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon\";\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n}\nexport class AnkrProvider extends StaticJsonRpcProvider {\n    constructor(_network = \"homestead\", apiKey) {\n        const network = Network.from(_network);\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const connection = AnkrProvider.getConnection(network, apiKey);\n        super(connection, network);\n        defineProperties(this, { apiKey });\n        // Ankr does not support filterId, so we force polling\n        super._setOptions({ polling: true });\n    }\n    _getProvider(chainId) {\n        try {\n            return new AnkrProvider(chainId, this.apiKey);\n        }\n        catch (error) { }\n        return super._getProvider(chainId);\n    }\n    static getConnection(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const request = new FetchRequest(`https:/\\/${getHost(network.name)}/${apiKey}`);\n        request.allowGzip = true;\n        const throttleRetry = async (request, response, attempt) => {\n            if (apiKey === defaultApiKey) {\n                showThrottleMessage(\"AnkrProvider\");\n            }\n            return true;\n        };\n        return { request, throttleRetry };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=provider-ankr.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { FetchRequest } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { StaticJsonRpcProvider } from \"./provider-jsonrpc.js\";\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"eth-mainnet.alchemyapi.io\";\n        case \"ropsten\":\n            return \"eth-ropsten.alchemyapi.io\";\n        case \"rinkeby\":\n            return \"eth-rinkeby.alchemyapi.io\";\n        case \"goerli\":\n            return \"eth-goerli.alchemyapi.io\";\n        case \"kovan\":\n            return \"eth-kovan.alchemyapi.io\";\n        case \"matic\":\n            return \"polygon-mainnet.g.alchemy.com\";\n        case \"maticmum\":\n            return \"polygon-mumbai.g.alchemy.com\";\n        case \"arbitrum\":\n            return \"arb-mainnet.g.alchemy.com\";\n        case \"arbitrum-rinkeby\":\n            return \"arb-rinkeby.g.alchemy.com\";\n        case \"optimism\":\n            return \"opt-mainnet.g.alchemy.com\";\n        case \"optimism-kovan\":\n            return \"opt-kovan.g.alchemy.com\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n}\nexport class AlchemyProvider extends StaticJsonRpcProvider {\n    constructor(_network = \"homestead\", apiKey) {\n        const network = Network.from(_network);\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        super(AlchemyProvider.getConnection(network, apiKey), network);\n        defineProperties(this, { apiKey });\n    }\n    _getProvider(chainId) {\n        try {\n            return new AlchemyProvider(chainId, this.apiKey);\n        }\n        catch (error) { }\n        return super._getProvider(chainId);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n    static getConnection(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const request = new FetchRequest(`https:/\\/${getHost(network.name)}/v2/${apiKey}`);\n        request.allowGzip = true;\n        const throttleRetry = async (request, response, attempt) => {\n            if (apiKey === defaultApiKey) {\n                showThrottleMessage(\"alchemy\");\n            }\n            return true;\n        };\n        return { request, throttleRetry };\n    }\n}\n//# sourceMappingURL=provider-alchemy.js.map","import { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { StaticJsonRpcProvider } from \"./provider-jsonrpc.js\";\nexport class CloudflareProvider extends StaticJsonRpcProvider {\n    constructor(_network = \"homestead\") {\n        const network = Network.from(_network);\n        if (network.name !== \"homestead\") {\n            return logger.throwArgumentError(\"unsupported network\", \"network\", _network);\n        }\n        super(\"https:/\\/cloudflare-eth.com/\", network);\n    }\n}\n//# sourceMappingURL=provider-cloudflare.js.map","import { hexlify, isHexString, quantity } from \"@ethersproject/bytes\";\nimport { isError } from \"@ethersproject/logger\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { toUtf8String } from \"@ethersproject/strings\";\nimport { fetchData, FetchRequest } from \"@ethersproject/web\";\nif (false) {\n    console.log(isHexString, isError);\n} // @TODO\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\";\nimport { NetworkPlugin } from \"./plugins-network.js\";\nimport { logger } from \"./logger.js\";\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nconst EtherscanPluginId = \"org.ethers.plugins.etherscan\";\nexport class EtherscanPlugin extends NetworkPlugin {\n    constructor(baseUrl, communityApiKey) {\n        super(EtherscanPluginId);\n        //if (communityApiKey == null) { communityApiKey = null; }\n        defineProperties(this, { baseUrl, communityApiKey });\n    }\n    clone() {\n        return new EtherscanPlugin(this.baseUrl, this.communityApiKey);\n    }\n}\nexport class EtherscanProvider extends AbstractProvider {\n    constructor(_network, apiKey) {\n        super();\n        const network = Network.from(_network);\n        if (apiKey == null) {\n            const plugin = network.getPlugin(EtherscanPluginId);\n            if (plugin) {\n                apiKey = plugin.communityApiKey;\n            }\n            else {\n                apiKey = defaultApiKey;\n            }\n        }\n        defineProperties(this, { apiKey, network });\n        // Test that the network is supported by Etherscan\n        this.getBaseUrl();\n    }\n    getBaseUrl() {\n        const plugin = this.network.getPlugin(EtherscanPluginId);\n        if (plugin) {\n            return plugin.baseUrl;\n        }\n        switch (this.network.name) {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.getBaseUrl()}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.getBaseUrl()}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    async detectNetwork() {\n        return this.network;\n    }\n    async fetch(module, params, post) {\n        const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params) : null);\n        /*\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n        */\n        const request = new FetchRequest(url);\n        const connection = {\n            request,\n            throttleSlotInterval: 1000,\n            processResponse: async (request, response) => {\n                const result = response.hasBody() ? JSON.parse(toUtf8String(response.body)) : {};\n                const throttle = ((typeof (result.result) === \"string\") ? result.result : \"\").toLowerCase().indexOf(\"rate limit\") >= 0;\n                if (module === \"proxy\") {\n                    // This JSON response indicates we are being throttled\n                    if (result && result.status == 0 && result.message == \"NOTOK\" && throttle) {\n                        response.throwThrottleError(result.result);\n                    }\n                }\n                else {\n                    if (throttle) {\n                        response.throwThrottleError(result.result);\n                    }\n                }\n                return response;\n            },\n        };\n        if (payload) {\n            request.setHeader(\"content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n            request.body = Object.keys(payload).map((k) => `${k}=${payload[k]}`).join(\"&\");\n        }\n        const response = await fetchData(connection);\n        response.assertOk();\n        if (!response.hasBody()) {\n            throw new Error();\n        }\n        /*\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n        */\n        const result = JSON.parse(toUtf8String(response.body));\n        if (module === \"proxy\") {\n            if (result.jsonrpc != \"2.0\") {\n                // @TODO: not any\n                const error = new Error(\"invalid response\");\n                error.result = JSON.stringify(result);\n                throw error;\n            }\n            if (result.error) {\n                // @TODO: not any\n                const error = new Error(result.error.message || \"unknown error\");\n                if (result.error.code) {\n                    error.code = result.error.code;\n                }\n                if (result.error.data) {\n                    error.data = result.error.data;\n                }\n                throw error;\n            }\n            return result.result;\n        }\n        else {\n            // getLogs, getHistory have weird success responses\n            if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n                return result.result;\n            }\n            if (result.status != 1 || result.message != \"OK\") {\n                const error = new Error(\"invalid response\");\n                error.result = JSON.stringify(result);\n                //        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n                //            error.throttleRetry = true;\n                //        }\n                throw error;\n            }\n            return result.result;\n        }\n    }\n    // The transaction has already been sanitized by the calls in Provider\n    _getTransactionPostData(transaction) {\n        const result = {};\n        for (let key in transaction) {\n            if (transaction[key] == null) {\n                continue;\n            }\n            let value = transaction[key];\n            if (key === \"type\" && value === 0) {\n                continue;\n            }\n            // Quantity-types require no leading zero, unless 0\n            if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n                value = quantity(hexlify(value));\n            }\n            else if (key === \"accessList\") {\n                value = \"[\" + this.network.formatter.accessList(value).map((set) => {\n                    return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n                }).join(\",\") + \"]\";\n            }\n            else {\n                value = hexlify(value);\n            }\n            result[key] = value;\n        }\n        return result;\n    }\n    _checkError(req, error, transaction) {\n        /*\n            let body = \"\";\n            if (isError(error, Logger.Errors.SERVER_ERROR) && error.response && error.response.hasBody()) {\n                body = toUtf8String(error.response.body);\n            }\n            console.log(body);\n    \n            // Undo the \"convenience\" some nodes are attempting to prevent backwards\n            // incompatibility; maybe for v6 consider forwarding reverts as errors\n            if (method === \"call\" && body) {\n    \n                // Etherscan keeps changing their string\n                if (body.match(/reverted/i) || body.match(/VM execution error/i)) {\n    \n                    // Etherscan prefixes the data like \"Reverted 0x1234\"\n                    let data = e.data;\n                    if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n                    if (!isHexString(data)) { data = \"0x\"; }\n    \n                    logger.throwError(\"call exception\", Logger.Errors.CALL_EXCEPTION, {\n                        error, data\n                    });\n                }\n            }\n    \n            // Get the message from any nested error structure\n            let message = error.message;\n            if (isError(error, Logger.Errors.SERVER_ERROR)) {\n                if (error.error && typeof(error.error.message) === \"string\") {\n                    message = error.error.message;\n                } else if (typeof(error.body) === \"string\") {\n                    message = error.body;\n                } else if (typeof(error.responseText) === \"string\") {\n                    message = error.responseText;\n                }\n            }\n            message = (message || \"\").toLowerCase();\n    \n            // \"Insufficient funds. The account you tried to send transaction from\n            // does not have enough funds. Required 21464000000000 and got: 0\"\n            if (message.match(/insufficient funds/)) {\n                logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.Errors.INSUFFICIENT_FUNDS, {\n                   error, transaction, info: { method }\n                });\n            }\n    \n            // \"Transaction with the same hash was already imported.\"\n            if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n                logger.throwError(\"nonce has already been used\", Logger.Errors.NONCE_EXPIRED, {\n                   error, transaction, info: { method }\n                });\n            }\n    \n            // \"Transaction gas price is too low. There is another transaction with\n            // same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n            if (message.match(/another transaction with same nonce/)) {\n                 logger.throwError(\"replacement fee too low\", Logger.Errors.REPLACEMENT_UNDERPRICED, {\n                    error, transaction, info: { method }\n                 });\n            }\n    \n            if (message.match(/execution failed due to an exception|execution reverted/)) {\n                logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.Errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error, transaction, info: { method }\n                });\n            }\n    */\n        throw error;\n    }\n    async _detectNetwork() {\n        return this.network;\n    }\n    async _perform(req) {\n        switch (req.method) {\n            case \"chainId\":\n                return this.network.chainId;\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: req.address,\n                    position: req.position,\n                    tag: req.blockTag\n                });\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: req.signedTransaction\n                }, true).catch((error) => {\n                    return this._checkError(req, error, req.signedTransaction);\n                });\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: req.blockTag,\n                        boolean: (req.includeTransactions ? \"true\" : \"false\")\n                    });\n                }\n                return logger.throwError(\"getBlock by blockHash not supported by Etherscan\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"getBlock(blockHash)\"\n                });\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: req.hash\n                });\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: req.hash\n                });\n            case \"call\": {\n                if (req.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                }\n                catch (error) {\n                    return this._checkError(req, error, req.transaction);\n                }\n            }\n            case \"estimateGas\": {\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                }\n                catch (error) {\n                    return this._checkError(req, error, req.transaction);\n                }\n            }\n            /*\n                        case \"getLogs\": {\n                            // Needs to complain if more than one address is passed in\n                            const args: Record<string, any> = { action: \"getLogs\" }\n            \n                            if (params.filter.fromBlock) {\n                                args.fromBlock = checkLogTag(params.filter.fromBlock);\n                            }\n            \n                            if (params.filter.toBlock) {\n                                args.toBlock = checkLogTag(params.filter.toBlock);\n                            }\n            \n                            if (params.filter.address) {\n                                args.address = params.filter.address;\n                            }\n            \n                            // @TODO: We can handle slightly more complicated logs using the logs API\n                            if (params.filter.topics && params.filter.topics.length > 0) {\n                                if (params.filter.topics.length > 1) {\n                                    logger.throwError(\"unsupported topic count\", Logger.Errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                                }\n                                if (params.filter.topics.length === 1) {\n                                    const topic0 = params.filter.topics[0];\n                                    if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                                        logger.throwError(\"unsupported topic format\", Logger.Errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                                    }\n                                    args.topic0 = topic0;\n                                }\n                            }\n            \n                            const logs: Array<any> = await this.fetch(\"logs\", args);\n            \n                            // Cache txHash => blockHash\n                            let blocks: { [tag: string]: string } = {};\n            \n                            // Add any missing blockHash to the logs\n                            for (let i = 0; i < logs.length; i++) {\n                                const log = logs[i];\n                                if (log.blockHash != null) { continue; }\n                                if (blocks[log.blockNumber] == null) {\n                                    const block = await this.getBlock(log.blockNumber);\n                                    if (block) {\n                                        blocks[log.blockNumber] = block.hash;\n                                    }\n                                }\n            \n                                log.blockHash = blocks[log.blockNumber];\n                            }\n            \n                            return logs;\n                        }\n            */\n            default:\n                break;\n        }\n        return super._perform(req);\n    }\n    async getNetwork() {\n        return this.network;\n    }\n    async getEtherPrice() {\n        if (this.network.name !== \"homestead\") {\n            return 0.0;\n        }\n        return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n    }\n    isCommunityResource() {\n        const plugin = this.network.getPlugin(EtherscanPluginId);\n        if (plugin) {\n            return (plugin.communityApiKey === this.apiKey);\n        }\n        return (defaultApiKey === this.apiKey);\n    }\n}\n/*\n(async function() {\n    const provider = new EtherscanProvider();\n    console.log(provider);\n    console.log(await provider.getBlockNumber());\n    / *\n    provider.on(\"block\", (b) => {\n        console.log(\"BB\", b);\n    });\n    console.log(await provider.getTransactionReceipt(\"0xa5ded92f548e9f362192f9ab7e5b3fbc9b5a919a868e29247f177d49ce38de6e\"));\n\n    provider.once(\"0xa5ded92f548e9f362192f9ab7e5b3fbc9b5a919a868e29247f177d49ce38de6e\", (tx) => {\n        console.log(\"TT\", tx);\n    });\n    * /\n    try {\n        console.log(await provider.getBlock(100));\n    } catch (error) {\n        console.log(error);\n    }\n\n    try {\n        console.log(await provider.getBlock(13821768));\n    } catch (error) {\n        console.log(error);\n    }\n\n})();\n*/\n//# sourceMappingURL=provider-etherscan.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { FetchRequest } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { StaticJsonRpcProvider } from \"./provider-jsonrpc.js\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"mainnet.infura.io\";\n        case \"ropsten\":\n            return \"ropsten.infura.io\";\n        case \"rinkeby\":\n            return \"rinkeby.infura.io\";\n        case \"kovan\":\n            return \"kovan.infura.io\";\n        case \"goerli\":\n            return \"goerli.infura.io\";\n        case \"matic\":\n            return \"polygon-mainnet.infura.io\";\n        case \"maticmum\":\n            return \"polygon-mumbai.infura.io\";\n        case \"optimism\":\n            return \"optimism-mainnet.infura.io\";\n        case \"optimism-kovan\":\n            return \"optimism-kovan.infura.io\";\n        case \"arbitrum\":\n            return \"arbitrum-mainnet.infura.io\";\n        case \"arbitrum-rinkeby\":\n            return \"arbitrum-rinkeby.infura.io\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n}\nexport class InfuraProvider extends StaticJsonRpcProvider {\n    constructor(_network = \"homestead\", projectId, projectSecret) {\n        const network = Network.from(_network);\n        if (projectId == null) {\n            projectId = defaultProjectId;\n        }\n        if (projectSecret == null) {\n            projectSecret = null;\n        }\n        const connection = InfuraProvider.getConnection(network, projectId, projectSecret);\n        super(connection, network);\n        defineProperties(this, { projectId, projectSecret });\n    }\n    _getProvider(chainId) {\n        try {\n            return new InfuraProvider(chainId, this.projectId, this.projectSecret);\n        }\n        catch (error) { }\n        return super._getProvider(chainId);\n    }\n    static getConnection(network, projectId, projectSecret) {\n        if (projectId == null) {\n            projectId = defaultProjectId;\n        }\n        if (projectSecret == null) {\n            projectSecret = null;\n        }\n        const request = new FetchRequest(`https:/\\/${getHost(network.name)}/v3/${projectId}`);\n        request.allowGzip = true;\n        if (projectSecret) {\n            request.setCredentials(\"\", projectSecret);\n        }\n        const throttleRetry = async (request, response, attempt) => {\n            if (projectId === defaultProjectId) {\n                showThrottleMessage(\"InfuraProvider\");\n            }\n            return true;\n        };\n        return { request, throttleRetry };\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=provider-infura.js.map","import { defineProperties } from \"@ethersproject/properties\";\nimport { FetchRequest } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { StaticJsonRpcProvider } from \"./provider-jsonrpc.js\";\n// These are load-balancer-based application IDs\nconst defaultAppIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"eth-mainnet.gateway.pokt.network\";\n        case \"ropsten\":\n            return \"eth-ropsten.gateway.pokt.network\";\n        case \"rinkeby\":\n            return \"eth-rinkeby.gateway.pokt.network\";\n        case \"goerli\":\n            return \"eth-goerli.gateway.pokt.network\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n}\nfunction normalizeApiKey(network, _appId, applicationSecretKey, loadBalancer) {\n    loadBalancer = !!loadBalancer;\n    let community = false;\n    let applicationId = _appId;\n    if (applicationId == null) {\n        applicationId = defaultAppIds[network.name];\n        if (applicationId == null) {\n            logger.throwArgumentError(\"network does not support default applicationId\", \"applicationId\", _appId);\n        }\n        loadBalancer = true;\n        community = true;\n    }\n    else if (applicationId === defaultAppIds[network.name]) {\n        loadBalancer = true;\n        community = true;\n    }\n    if (applicationSecretKey == null) {\n        applicationSecretKey = null;\n    }\n    return { applicationId, applicationSecretKey, community, loadBalancer };\n}\nexport class PocketProvider extends StaticJsonRpcProvider {\n    constructor(_network = \"homestead\", _appId, _secretKey, _loadBalancer) {\n        const network = Network.from(_network);\n        const { applicationId, applicationSecretKey, loadBalancer } = normalizeApiKey(network, _appId, _secretKey, _loadBalancer);\n        const connection = PocketProvider.getConnection(network, applicationId, applicationSecretKey, loadBalancer);\n        super(connection, network);\n        defineProperties(this, { applicationId, applicationSecretKey, loadBalancer });\n    }\n    static getConnection(network, _appId, _secretKey, _loadBalancer) {\n        const { applicationId, applicationSecretKey, community, loadBalancer } = normalizeApiKey(network, _appId, _secretKey, _loadBalancer);\n        let url = `https:/\\/${getHost(network.name)}/v1/`;\n        if (loadBalancer) {\n            url += \"lb/\";\n        }\n        url += applicationId;\n        const request = new FetchRequest(url);\n        request.allowGzip = true;\n        if (applicationSecretKey) {\n            request.setCredentials(\"\", applicationSecretKey);\n        }\n        const throttleRetry = async (request, response, attempt) => {\n            if (community) {\n                showThrottleMessage(\"PocketProvider\");\n            }\n            return true;\n        };\n        return { request, throttleRetry };\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultAppIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=provider-pocket.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FallbackProvider_instances, _FallbackProvider_configs, _FallbackProvider_height, _FallbackProvider_initialSyncPromise, _FallbackProvider_getNextConfig, _FallbackProvider_addRunner, _FallbackProvider_initialSync, _FallbackProvider_checkQuorum, _FallbackProvider_waitForQuorum;\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { logger } from \"./logger.js\";\nimport { Network } from \"./network.js\";\nimport { shuffle } from \"./shuffle.js\";\n//const BN_0 = BigInt(\"0\");\nconst BN_1 = BigInt(\"1\");\nconst BN_2 = BigInt(\"2\");\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\nfunction getTime() { return (new Date()).getTime(); }\n;\nconst defaultConfig = { stallTimeout: 400, priority: 1, weight: 1 };\nconst defaultState = {\n    blockNumber: -2, requests: 0, lateResponses: 0, errorResponses: 0,\n    outOfSync: -1, unsupportedEvents: 0, rollingDuration: 0, score: 0,\n    _network: null, _updateNumber: null, _totalTime: 0\n};\nasync function waitForSync(config, blockNumber) {\n    while (config.blockNumber < 0 || config.blockNumber < blockNumber) {\n        if (!config._updateNumber) {\n            config._updateNumber = (async () => {\n                const blockNumber = await config.provider.getBlockNumber();\n                if (blockNumber > config.blockNumber) {\n                    config.blockNumber = blockNumber;\n                }\n                config._updateNumber = null;\n            })();\n        }\n        await config._updateNumber;\n        config.outOfSync++;\n    }\n}\n// Normalizes a result to a string that can be used to compare against\n// other results using normal string equality\nfunction normalize(network, value, req) {\n    switch (req.method) {\n        case \"chainId\":\n            return logger.getBigInt(value).toString();\n        case \"getBlockNumber\":\n            return logger.getNumber(value).toString();\n        case \"getGasPrice\":\n            return logger.getBigInt(value).toString();\n        case \"getBalance\":\n            return logger.getBigInt(value).toString();\n        case \"getTransactionCount\":\n            return logger.getNumber(value).toString();\n        case \"getCode\":\n            return hexlify(value);\n        case \"getStorageAt\":\n            return hexlify(value);\n        case \"getBlock\":\n            if (req.includeTransactions) {\n                return JSON.stringify(network.formatter.blockWithTransactions(value));\n            }\n            return JSON.stringify(network.formatter.block(value));\n        case \"getTransaction\":\n            return JSON.stringify(network.formatter.transactionResponse(value));\n        case \"getTransactionReceipt\":\n            return JSON.stringify(network.formatter.receipt(value));\n        case \"call\":\n            return hexlify(value);\n        case \"estimateGas\":\n            return logger.getBigInt(value).toString();\n        case \"getLogs\":\n            return JSON.stringify(value.map((v) => network.formatter.log(v)));\n    }\n    return logger.throwError(\"unsupported method\", \"UNSUPPORTED_OPERATION\", {\n        operation: `_perform(${JSON.stringify(req.method)})`\n    });\n}\n// This strategy picks the highest wieght result, as long as the weight is\n// equal to or greater than quorum\nfunction checkQuorum(quorum, results) {\n    const tally = new Map();\n    for (const { result, normal, weight } of results) {\n        const t = tally.get(normal) || { result, weight: 0 };\n        t.weight += weight;\n        tally.set(normal, t);\n    }\n    let bestWeight = 0;\n    let bestResult = undefined;\n    for (const { weight, result } of tally.values()) {\n        if (weight >= quorum && weight > bestWeight) {\n            bestWeight = weight;\n            bestResult = result;\n        }\n    }\n    return bestResult;\n}\n/*\nfunction getMean(results: Array<TallyResult>): bigint {\n    const total = results.reduce((a, r) => (a + BigInt(r.result)), BN_0);\n    return total / BigInt(results.length);\n}\n*/\nfunction getMedian(results) {\n    // Get the sorted values\n    const values = results.map((r) => BigInt(r.result));\n    values.sort((a, b) => ((a < b) ? -1 : (b > a) ? 1 : 0));\n    const mid = values.length / 2;\n    // Odd-length; take the middle value\n    if (values.length % 2) {\n        return values[mid];\n    }\n    // Even length; take the ceiling of the mean of the center two values\n    return (values[mid - 1] + values[mid] + BN_1) / BN_2;\n}\nfunction getFuzzyMode(quorum, results) {\n    if (quorum === 1) {\n        return logger.getNumber(getMedian(results), \"%internal\");\n    }\n    const tally = new Map();\n    const add = (result, weight) => {\n        const t = tally.get(result) || { result, weight: 0 };\n        t.weight += weight;\n        tally.set(result, t);\n    };\n    for (const { weight, result } of results) {\n        const r = logger.getNumber(result);\n        add(r - 1, weight);\n        add(r, weight);\n        add(r + 1, weight);\n    }\n    let bestWeight = 0;\n    let bestResult = undefined;\n    for (const { weight, result } of tally.values()) {\n        // Use this result, if this result meets quorum and has either:\n        // - a better weight\n        // - or equal weight, but the result is larger\n        if (weight >= quorum && (weight > bestWeight || (bestResult != null && weight === bestWeight && result > bestResult))) {\n            bestWeight = weight;\n            bestResult = result;\n        }\n    }\n    return bestResult;\n}\nexport class FallbackProvider extends AbstractProvider {\n    constructor(providers, network) {\n        super(network);\n        _FallbackProvider_instances.add(this);\n        _FallbackProvider_configs.set(this, void 0);\n        _FallbackProvider_height.set(this, void 0);\n        _FallbackProvider_initialSyncPromise.set(this, void 0);\n        __classPrivateFieldSet(this, _FallbackProvider_configs, providers.map((p) => {\n            if (p instanceof AbstractProvider) {\n                return Object.assign({ provider: p }, defaultConfig, defaultState);\n            }\n            else {\n                return Object.assign({}, defaultConfig, p, defaultState);\n            }\n        }), \"f\");\n        __classPrivateFieldSet(this, _FallbackProvider_height, -2, \"f\");\n        __classPrivateFieldSet(this, _FallbackProvider_initialSyncPromise, null, \"f\");\n        this.quorum = 2; //Math.ceil(providers.length /  2);\n        this.eventQuorum = 1;\n        this.eventWorkers = 1;\n        if (this.quorum > __classPrivateFieldGet(this, _FallbackProvider_configs, \"f\").reduce((a, c) => (a + c.weight), 0)) {\n            logger.throwArgumentError(\"quorum exceed provider wieght\", \"quorum\", this.quorum);\n        }\n    }\n    // @TOOD: Copy these and only return public values\n    get providerConfigs() {\n        return __classPrivateFieldGet(this, _FallbackProvider_configs, \"f\").slice();\n    }\n    async _detectNetwork() {\n        return Network.from(logger.getBigInt(await this._perform({ method: \"chainId\" }))).freeze();\n    }\n    async _perform(req) {\n        await __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_initialSync).call(this);\n        // Bootstrap enough to meet quorum\n        const running = new Set();\n        for (let i = 0; i < this.quorum; i++) {\n            __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_addRunner).call(this, running, req);\n        }\n        const result = __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_waitForQuorum).call(this, running, req);\n        for (const runner of running) {\n            runner.done = true;\n        }\n        return result;\n    }\n}\n_FallbackProvider_configs = new WeakMap(), _FallbackProvider_height = new WeakMap(), _FallbackProvider_initialSyncPromise = new WeakMap(), _FallbackProvider_instances = new WeakSet(), _FallbackProvider_getNextConfig = function _FallbackProvider_getNextConfig(configs) {\n    // Shuffle the states, sorted by priority\n    const allConfigs = __classPrivateFieldGet(this, _FallbackProvider_configs, \"f\").slice();\n    shuffle(allConfigs);\n    allConfigs.sort((a, b) => (b.priority - a.priority));\n    for (const config of allConfigs) {\n        if (configs.indexOf(config) === -1) {\n            return config;\n        }\n    }\n    return null;\n}, _FallbackProvider_addRunner = function _FallbackProvider_addRunner(running, req) {\n    const config = __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_getNextConfig).call(this, Array.from(running).map((r) => r.config));\n    if (config == null) {\n        return null;\n    }\n    const result = {};\n    const runner = {\n        config, result, didBump: false, done: false,\n        perform: null, staller: null\n    };\n    const now = getTime();\n    runner.perform = (async () => {\n        try {\n            config.requests++;\n            result.result = await config.provider._perform(req);\n        }\n        catch (error) {\n            config.errorResponses++;\n            result.error = error;\n        }\n        if (runner.done) {\n            config.lateResponses++;\n        }\n        const dt = (getTime() - now);\n        config._totalTime += dt;\n        config.rollingDuration = 0.95 * config.rollingDuration + 0.05 * dt;\n        runner.perform = null;\n    })();\n    runner.staller = (async () => {\n        await stall(config.stallTimeout);\n        runner.staller = null;\n    })();\n    running.add(runner);\n    return runner;\n}, _FallbackProvider_initialSync = \n// Initializes the blockNumber and network for each runner and\n// blocks until initialized\nasync function _FallbackProvider_initialSync() {\n    let initialSync = __classPrivateFieldGet(this, _FallbackProvider_initialSyncPromise, \"f\");\n    if (!initialSync) {\n        const promises = [];\n        __classPrivateFieldGet(this, _FallbackProvider_configs, \"f\").forEach((config) => {\n            promises.push(waitForSync(config, 0));\n            promises.push((async () => {\n                config._network = await config.provider.getNetwork();\n            })());\n        });\n        __classPrivateFieldSet(this, _FallbackProvider_initialSyncPromise, initialSync = (async () => {\n            // Wait for all providers to have a block number and network\n            await Promise.all(promises);\n            // Check all the networks match\n            let chainId = null;\n            for (const config of __classPrivateFieldGet(this, _FallbackProvider_configs, \"f\")) {\n                const network = (config._network);\n                if (chainId == null) {\n                    chainId = network.chainId;\n                }\n                else if (network.chainId !== chainId) {\n                    logger.throwError(\"cannot mix providers on different networks\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"new FallbackProvider\"\n                    });\n                }\n            }\n        })(), \"f\");\n    }\n    await initialSync;\n}, _FallbackProvider_checkQuorum = async function _FallbackProvider_checkQuorum(running, req) {\n    // Get all the result objects\n    const results = [];\n    for (const runner of running) {\n        if (\"result\" in runner.result) {\n            const result = runner.result.result;\n            results.push({\n                result,\n                normal: normalize((runner.config._network), result, req),\n                weight: runner.config.weight\n            });\n        }\n    }\n    // Are there enough results to event meet quorum?\n    if (results.reduce((a, r) => (a + r.weight), 0) < this.quorum) {\n        return undefined;\n    }\n    switch (req.method) {\n        case \"getBlockNumber\": {\n            // We need to get the bootstrap block height\n            if (__classPrivateFieldGet(this, _FallbackProvider_height, \"f\") === -2) {\n                const height = Math.ceil(logger.getNumber(getMedian(__classPrivateFieldGet(this, _FallbackProvider_configs, \"f\").map((c) => ({\n                    result: c.blockNumber,\n                    normal: logger.getNumber(c.blockNumber).toString(),\n                    weight: c.weight\n                }))), \"%internal\"));\n                __classPrivateFieldSet(this, _FallbackProvider_height, height, \"f\");\n            }\n            const mode = getFuzzyMode(this.quorum, results);\n            if (mode === undefined) {\n                return undefined;\n            }\n            if (mode > __classPrivateFieldGet(this, _FallbackProvider_height, \"f\")) {\n                __classPrivateFieldSet(this, _FallbackProvider_height, mode, \"f\");\n            }\n            return __classPrivateFieldGet(this, _FallbackProvider_height, \"f\");\n        }\n        case \"getGasPrice\":\n        case \"estimateGas\":\n            return getMedian(results);\n        case \"getBlock\":\n            // Pending blocks are mempool dependant and already\n            // quite untrustworthy\n            if (\"blockTag\" in req && req.blockTag === \"pending\") {\n                return results[0].result;\n            }\n            return checkQuorum(this.quorum, results);\n        case \"chainId\":\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n        case \"getLogs\":\n            return checkQuorum(this.quorum, results);\n        case \"call\":\n            // @TODO: Check errors\n            return checkQuorum(this.quorum, results);\n        case \"sendTransaction\":\n            throw new Error(\"TODO\");\n    }\n    return logger.throwError(\"unsupported method\", \"UNSUPPORTED_OPERATION\", {\n        operation: `_perform(${JSON.stringify(req.method)})`\n    });\n}, _FallbackProvider_waitForQuorum = async function _FallbackProvider_waitForQuorum(running, req) {\n    if (running.size === 0) {\n        throw new Error(\"no runners?!\");\n    }\n    // Any promises that are interesting to watch for; an expired stall\n    // or a successful perform\n    const interesting = [];\n    //const results: Array<any> = [ ];\n    //const errors: Array<Error> = [ ];\n    let newRunners = 0;\n    for (const runner of running) {\n        // @TODO: use runner.perfom != null\n        /*\n      if (\"result\" in runner.result) {\n          results.push(runner.result.result);\n      } else if (\"error\" in runner.result) {\n          errors.push(runner.result.error);\n      }\n*/\n        // No responses, yet; keep an eye on it\n        if (runner.perform) {\n            interesting.push(runner.perform);\n        }\n        // Still stalling...\n        if (runner.staller) {\n            interesting.push(runner.staller);\n            continue;\n        }\n        // This runner has already triggered another runner\n        if (runner.didBump) {\n            continue;\n        }\n        // Got a response (result or error) or stalled; kick off another runner\n        runner.didBump = true;\n        newRunners++;\n    }\n    // Check for quorum\n    /*\n    console.log({ results, errors } );\n    if (results.length >= this.quorum) {\n        return results[0];\n    }\n\n    if (errors.length >= this.quorum) {\n        return errors[0];\n    }\n    */\n    const value = await __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_checkQuorum).call(this, running, req);\n    if (value !== undefined) {\n        if (value instanceof Error) {\n            throw value;\n        }\n        return value;\n    }\n    // Add any new runners, because a staller timed out or a result\n    // or error response came in.\n    for (let i = 0; i < newRunners; i++) {\n        __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_addRunner).call(this, running, req);\n    }\n    if (interesting.length === 0) {\n        throw new Error(\"quorum not met\");\n        //            return logger.throwError(\"failed to meet quorum\", \"\", {\n        //            });\n    }\n    // Wait for someone to either complete its perform or trigger a stall\n    await Promise.race(interesting);\n    return await __classPrivateFieldGet(this, _FallbackProvider_instances, \"m\", _FallbackProvider_waitForQuorum).call(this, running, req);\n};\n//# sourceMappingURL=provider-fallback.js.map","export function shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n}\n//# sourceMappingURL=shuffle.js.map","function getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst _WebSocket = getGlobal().WebSocket;\nexport { _WebSocket as WebSocket };\n//# sourceMappingURL=ws-browser.js.map","/**\n *  SocketProvider\n *\n *  Generic long-lived socket provider.\n *\n *  Sub-classing notes\n *  - a sub-class MUST call the `_start()` method once connected\n *  - a sub-class MUST override the `_write(string)` method\n *  - a sub-class MUST call `_processMessage(string)` for each message\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SocketSubscriber_provider, _SocketSubscriber_filter, _SocketSubscriber_filterId, _SocketSubscriber_paused, _SocketSubscriber_emitPromise, _SocketEventSubscriber_logFilter, _SocketEventSubscriber_formatter, _SocketProvider_callbacks, _SocketProvider_ready, _SocketProvider_subs, _SocketProvider_pending;\nimport { UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { logger } from \"./logger.js\";\nimport { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\nexport class SocketSubscriber {\n    constructor(provider, filter) {\n        _SocketSubscriber_provider.set(this, void 0);\n        _SocketSubscriber_filter.set(this, void 0);\n        _SocketSubscriber_filterId.set(this, void 0);\n        _SocketSubscriber_paused.set(this, void 0);\n        _SocketSubscriber_emitPromise.set(this, void 0);\n        __classPrivateFieldSet(this, _SocketSubscriber_provider, provider, \"f\");\n        __classPrivateFieldSet(this, _SocketSubscriber_filter, JSON.stringify(filter), \"f\");\n        __classPrivateFieldSet(this, _SocketSubscriber_filterId, null, \"f\");\n        __classPrivateFieldSet(this, _SocketSubscriber_paused, null, \"f\");\n        __classPrivateFieldSet(this, _SocketSubscriber_emitPromise, null, \"f\");\n    }\n    get filter() { return JSON.parse(__classPrivateFieldGet(this, _SocketSubscriber_filter, \"f\")); }\n    start() {\n        __classPrivateFieldSet(this, _SocketSubscriber_filterId, __classPrivateFieldGet(this, _SocketSubscriber_provider, \"f\").send(\"eth_subscribe\", this.filter).then((filterId) => {\n            ;\n            __classPrivateFieldGet(this, _SocketSubscriber_provider, \"f\")._register(filterId, this);\n            return filterId;\n        }), \"f\");\n    }\n    stop() {\n        (__classPrivateFieldGet(this, _SocketSubscriber_filterId, \"f\")).then((filterId) => {\n            __classPrivateFieldGet(this, _SocketSubscriber_provider, \"f\").send(\"eth_unsubscribe\", [filterId]);\n        });\n        __classPrivateFieldSet(this, _SocketSubscriber_filterId, null, \"f\");\n    }\n    // @TODO: pause should trap the current blockNumber, unsub, and on resume use getLogs\n    //        and resume\n    pause(dropWhilePaused) {\n        if (!dropWhilePaused) {\n            logger.throwError(\"preserve logs while paused not supported by SocketSubscriber yet\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause(false)\"\n            });\n        }\n        __classPrivateFieldSet(this, _SocketSubscriber_paused, !!dropWhilePaused, \"f\");\n    }\n    resume() {\n        __classPrivateFieldSet(this, _SocketSubscriber_paused, null, \"f\");\n    }\n    _handleMessage(message) {\n        if (__classPrivateFieldGet(this, _SocketSubscriber_filterId, \"f\") == null) {\n            return;\n        }\n        if (__classPrivateFieldGet(this, _SocketSubscriber_paused, \"f\") === null) {\n            let emitPromise = __classPrivateFieldGet(this, _SocketSubscriber_emitPromise, \"f\");\n            if (emitPromise == null) {\n                emitPromise = this._emit(__classPrivateFieldGet(this, _SocketSubscriber_provider, \"f\"), message);\n            }\n            else {\n                emitPromise = emitPromise.then(async () => {\n                    await this._emit(__classPrivateFieldGet(this, _SocketSubscriber_provider, \"f\"), message);\n                });\n            }\n            __classPrivateFieldSet(this, _SocketSubscriber_emitPromise, emitPromise.then(() => {\n                if (__classPrivateFieldGet(this, _SocketSubscriber_emitPromise, \"f\") === emitPromise) {\n                    __classPrivateFieldSet(this, _SocketSubscriber_emitPromise, null, \"f\");\n                }\n            }), \"f\");\n        }\n    }\n    async _emit(provider, message) {\n        throw new Error(\"sub-classes must implemente this; _emit\");\n    }\n}\n_SocketSubscriber_provider = new WeakMap(), _SocketSubscriber_filter = new WeakMap(), _SocketSubscriber_filterId = new WeakMap(), _SocketSubscriber_paused = new WeakMap(), _SocketSubscriber_emitPromise = new WeakMap();\nexport class SocketBlockSubscriber extends SocketSubscriber {\n    constructor(provider) {\n        super(provider, [\"newHeads\"]);\n    }\n    async _emit(provider, message) {\n        provider.emit(\"block\", parseInt(message.number));\n    }\n}\nexport class SocketPendingSubscriber extends SocketSubscriber {\n    constructor(provider) {\n        super(provider, [\"newPendingTransactions\"]);\n    }\n    async _emit(provider, message) {\n        provider.emit(\"pending\", message);\n    }\n}\nexport class SocketEventSubscriber extends SocketSubscriber {\n    constructor(provider, filter) {\n        super(provider, [\"logs\", filter]);\n        _SocketEventSubscriber_logFilter.set(this, void 0);\n        _SocketEventSubscriber_formatter.set(this, void 0);\n        __classPrivateFieldSet(this, _SocketEventSubscriber_logFilter, JSON.stringify(filter), \"f\");\n        __classPrivateFieldSet(this, _SocketEventSubscriber_formatter, provider.getNetwork().then((network) => network.formatter), \"f\");\n    }\n    get logFilter() { return JSON.parse(__classPrivateFieldGet(this, _SocketEventSubscriber_logFilter, \"f\")); }\n    async _emit(provider, message) {\n        const formatter = await __classPrivateFieldGet(this, _SocketEventSubscriber_formatter, \"f\");\n        provider.emit(__classPrivateFieldGet(this, _SocketEventSubscriber_logFilter, \"f\"), formatter.log(message, provider));\n    }\n}\n_SocketEventSubscriber_logFilter = new WeakMap(), _SocketEventSubscriber_formatter = new WeakMap();\nexport class SocketProvider extends JsonRpcApiProvider {\n    constructor(network) {\n        super(network);\n        _SocketProvider_callbacks.set(this, void 0);\n        _SocketProvider_ready.set(this, void 0);\n        // Maps each filterId to its subscriber\n        _SocketProvider_subs.set(this, void 0);\n        // If any events come in before a subscriber has finished\n        // registering, queue them\n        _SocketProvider_pending.set(this, void 0);\n        __classPrivateFieldSet(this, _SocketProvider_callbacks, new Map(), \"f\");\n        __classPrivateFieldSet(this, _SocketProvider_ready, false, \"f\");\n        __classPrivateFieldSet(this, _SocketProvider_subs, new Map(), \"f\");\n        __classPrivateFieldSet(this, _SocketProvider_pending, new Map(), \"f\");\n    }\n    _getSubscriber(sub) {\n        switch (sub.type) {\n            case \"close\":\n                return new UnmanagedSubscriber(\"close\");\n            case \"block\":\n                return new SocketBlockSubscriber(this);\n            case \"pending\":\n                return new SocketPendingSubscriber(this);\n            case \"event\":\n                return new SocketEventSubscriber(this, sub.filter);\n            case \"orphan\":\n                // Handled auto-matically within AbstractProvider\n                // when the log.removed = true\n                if (sub.filter.orphan === \"drop-log\") {\n                    return new UnmanagedSubscriber(\"drop-log\");\n                }\n        }\n        return super._getSubscriber(sub);\n    }\n    _register(filterId, subscriber) {\n        __classPrivateFieldGet(this, _SocketProvider_subs, \"f\").set(filterId, subscriber);\n        const pending = __classPrivateFieldGet(this, _SocketProvider_pending, \"f\").get(filterId);\n        if (pending) {\n            for (const message of pending) {\n                subscriber._handleMessage(message);\n            }\n            __classPrivateFieldGet(this, _SocketProvider_pending, \"f\").delete(filterId);\n        }\n    }\n    async send(method, params) {\n        const payload = this.prepareRequest(method, params);\n        const promise = new Promise((resolve, reject) => {\n            __classPrivateFieldGet(this, _SocketProvider_callbacks, \"f\").set(payload.id, { payload, resolve, reject });\n        });\n        if (__classPrivateFieldGet(this, _SocketProvider_ready, \"f\")) {\n            await this._write(JSON.stringify(payload));\n        }\n        return await promise;\n    }\n    // Sub-classes must call this once they are connected\n    async _start() {\n        if (__classPrivateFieldGet(this, _SocketProvider_ready, \"f\")) {\n            return;\n        }\n        __classPrivateFieldSet(this, _SocketProvider_ready, true, \"f\");\n        for (const { payload } of __classPrivateFieldGet(this, _SocketProvider_callbacks, \"f\").values()) {\n            await this._write(JSON.stringify(payload));\n        }\n    }\n    // Sub-classes must call this for each message\n    async _processMessage(message) {\n        const result = JSON.parse(message);\n        if (\"id\" in result) {\n            const promise = __classPrivateFieldGet(this, _SocketProvider_callbacks, \"f\").get(result.id);\n            if (!promise) {\n                console.log(\"Weird... Response for not a thing we sent\");\n                return;\n            }\n            __classPrivateFieldGet(this, _SocketProvider_callbacks, \"f\").delete(result.id);\n            if (\"error\" in result) {\n                const { message, code, data } = result.error;\n                const error = logger.makeError(message || \"unkonwn error\", \"SERVER_ERROR\", {\n                    request: `ws:${JSON.stringify(promise.payload)}`,\n                    info: { code, data }\n                });\n                promise.reject(error);\n            }\n            else {\n                promise.resolve(result.result);\n            }\n        }\n        else if (result.method === \"eth_subscription\") {\n            const filterId = result.params.subscription;\n            const subscriber = __classPrivateFieldGet(this, _SocketProvider_subs, \"f\").get(filterId);\n            if (subscriber) {\n                subscriber._handleMessage(result.params.result);\n            }\n            else {\n                let pending = __classPrivateFieldGet(this, _SocketProvider_pending, \"f\").get(filterId);\n                if (pending == null) {\n                    pending = [];\n                    __classPrivateFieldGet(this, _SocketProvider_pending, \"f\").set(filterId, pending);\n                }\n                pending.push(result.params.result);\n            }\n        }\n    }\n    async _write(message) {\n        throw new Error(\"sub-classes must override this\");\n    }\n}\n_SocketProvider_callbacks = new WeakMap(), _SocketProvider_ready = new WeakMap(), _SocketProvider_subs = new WeakMap(), _SocketProvider_pending = new WeakMap();\n//# sourceMappingURL=provider-socket.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WebSocketProvider_websocket;\nimport { WebSocket } from \"ws\"; /*-browser*/\nimport { SocketProvider } from \"./provider-socket.js\";\nexport class WebSocketProvider extends SocketProvider {\n    constructor(url, network) {\n        super(network);\n        _WebSocketProvider_websocket.set(this, void 0);\n        if (typeof (url) === \"string\") {\n            __classPrivateFieldSet(this, _WebSocketProvider_websocket, new WebSocket(url), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _WebSocketProvider_websocket, url, \"f\");\n        }\n        this.websocket.onopen = () => {\n            this._start();\n        };\n        this.websocket.onmessage = (message) => {\n            this._processMessage(message.data);\n        };\n    }\n    get websocket() { return __classPrivateFieldGet(this, _WebSocketProvider_websocket, \"f\"); }\n    async _write(message) {\n        this.websocket.send(message);\n    }\n}\n_WebSocketProvider_websocket = new WeakMap();\n//# sourceMappingURL=provider-websocket.js.map","import { AnkrProvider } from \"./provider-ankr.js\";\nimport { AlchemyProvider } from \"./provider-alchemy.js\";\nimport { CloudflareProvider } from \"./provider-cloudflare.js\";\nimport { EtherscanProvider } from \"./provider-etherscan.js\";\nimport { InfuraProvider } from \"./provider-infura.js\";\nimport { PocketProvider } from \"./provider-pocket.js\";\nimport { FallbackProvider } from \"./provider-fallback.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\nfunction isWebSocketLike(value) {\n    return (value && typeof (value.send) === \"function\" &&\n        typeof (value.close) === \"function\");\n}\nexport function getDefaultProvider(network, options) {\n    if (options == null) {\n        options = {};\n    }\n    if (typeof (network) === \"string\" && network.match(/^https?:/)) {\n        return new JsonRpcProvider(network);\n    }\n    if (typeof (network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new WebSocketProvider(network);\n    }\n    const providers = [];\n    if (options.alchemy !== \"-\") {\n        try {\n            providers.push(new AlchemyProvider(network, options.alchemy));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (options.ankr !== \"-\") {\n        try {\n            providers.push(new AnkrProvider(network, options.ankr));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (options.cloudflare !== \"-\") {\n        try {\n            providers.push(new CloudflareProvider(network));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (options.etherscan !== \"-\") {\n        try {\n            providers.push(new EtherscanProvider(network, options.etherscan));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (options.infura !== \"-\") {\n        try {\n            let projectId = options.infura;\n            let projectSecret = undefined;\n            if (typeof (projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new InfuraProvider(network, projectId, projectSecret));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (options.pocket !== \"-\") {\n        try {\n            let appId = options.pocket;\n            let secretKey = undefined;\n            let loadBalancer = undefined;\n            if (typeof (appId) === \"object\") {\n                loadBalancer = !!appId.loadBalancer;\n                secretKey = appId.secretKey;\n                appId = appId.appId;\n            }\n            providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    if (providers.length === 0) {\n        throw new Error(\"TODO\");\n    }\n    if (providers.length === 1) {\n        return providers[0];\n    }\n    return new FallbackProvider(providers);\n}\n//# sourceMappingURL=default-provider.js.map","import { EnsPlugin, GasCostPlugin, MaxPriorityFeePlugin } from \"./plugins-network.js\";\nimport { EtherscanPlugin } from \"./provider-etherscan.js\";\nimport { Network as _Network } from \"./network.js\";\n// See: https://chainlist.org\nfunction injectCommonNetworks(Network) {\n    /// Register popular Ethereum networks\n    function registerEth(name, chainId, options) {\n        const func = function () {\n            const network = new Network(name, chainId);\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n            if (options.priorityFee) {\n                network.attachPlugin(new MaxPriorityFeePlugin(options.priorityFee));\n            }\n            if (options.etherscan) {\n                const { url, apiKey } = options.etherscan;\n                network.attachPlugin(new EtherscanPlugin(url, apiKey));\n            }\n            network.attachPlugin(new GasCostPlugin());\n            return network;\n        };\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n    registerEth(\"homestead\", 1, { ensNetwork: 1, altNames: [\"mainnet\"] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"classic\", 61, {});\n    registerEth(\"classicKotti\", 6, {});\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n    // Polygon has a 35 gwei maxPriorityFee requirement\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        priorityFee: 35000000000,\n        etherscan: {\n            apiKey: \"W6T8DJW654GNTQ34EFEYYP3EZD9DD27CT7\",\n            url: \"https:/\\/api.polygonscan.com/\"\n        }\n    });\n    registerEth(\"maticMumbai\", 80001, {\n        priorityFee: 35000000000,\n        etherscan: {\n            apiKey: \"W6T8DJW654GNTQ34EFEYYP3EZD9DD27CT7\",\n            url: \"https:/\\/api-testnet.polygonscan.com/\"\n        }\n    });\n    registerEth(\"bnb\", 56, {\n        ensNetwork: 1,\n        etherscan: {\n            apiKey: \"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9\",\n            url: \"http:/\\/api.bscscan.com\"\n        }\n    });\n    registerEth(\"bnbt\", 97, {\n        etherscan: {\n            apiKey: \"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9\",\n            url: \"http:/\\/api-testnet.bscscan.com\"\n        }\n    });\n    return Network;\n}\nconst Network = injectCommonNetworks(_Network);\nexport { Network };\n//# sourceMappingURL=common-networks.js.map","const IpcSocketProvider = undefined;\nexport { IpcSocketProvider };\n//# sourceMappingURL=provider-ipcsocket-browser.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ContractTransactionReceipt_interface, _ContractTransactionResponse_interface;\nimport { defineProperties, EventPayload } from \"@ethersproject/properties\";\nimport { Log, TransactionReceipt, TransactionResponse } from \"@ethersproject/providers\";\nexport class EventLog extends Log {\n    constructor(log, iface, fragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties(this, { args, fragment, interface: iface });\n    }\n    get eventName() { return this.fragment.name; }\n    get eventSignature() { return this.fragment.format(); }\n}\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        _ContractTransactionReceipt_interface.set(this, void 0);\n        __classPrivateFieldSet(this, _ContractTransactionReceipt_interface, iface, \"f\");\n    }\n    get logs() {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? __classPrivateFieldGet(this, _ContractTransactionReceipt_interface, \"f\").getEvent(log.topics[0]) : null;\n            if (fragment) {\n                return new EventLog(log, __classPrivateFieldGet(this, _ContractTransactionReceipt_interface, \"f\"), fragment);\n            }\n            else {\n                return log;\n            }\n        });\n    }\n}\n_ContractTransactionReceipt_interface = new WeakMap();\nexport class ContractTransactionResponse extends TransactionResponse {\n    constructor(iface, provider, tx) {\n        super(tx, provider);\n        _ContractTransactionResponse_interface.set(this, void 0);\n        __classPrivateFieldSet(this, _ContractTransactionResponse_interface, iface, \"f\");\n    }\n    async wait(confirms) {\n        const receipt = await super.wait();\n        if (receipt == null) {\n            return null;\n        }\n        return new ContractTransactionReceipt(__classPrivateFieldGet(this, _ContractTransactionResponse_interface, \"f\"), this.provider, receipt);\n    }\n}\n_ContractTransactionResponse_interface = new WeakMap();\nexport class ContractEventPayload extends EventPayload {\n    constructor(contract, listener, filter, fragment, _log) {\n        super(contract, listener, filter);\n        const log = new EventLog(_log, contract.interface, fragment);\n        const args = contract.interface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties(this, { args, fragment, log });\n    }\n    get eventName() {\n        return this.fragment.name;\n    }\n    get eventSignature() {\n        return this.fragment.format();\n    }\n    async getBlock() {\n        return await this.log.getBlock();\n    }\n    async getTransaction() {\n        return await this.log.getTransaction();\n    }\n    async getTransactionReceipt() {\n        return await this.log.getTransactionReceipt();\n    }\n}\n//# sourceMappingURL=wrappers.js.map","export const version = \"@ethersproject/contract@6.0.0-beta.2\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _PreparedTopicFilter_filter;\nimport { resolveAddress } from \"@ethersproject/address\";\nimport { Interface, Typed } from \"@ethersproject/abi\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { isCallException } from \"@ethersproject/logger\";\nimport { defineProperties, resolveProperties } from \"@ethersproject/properties\";\nimport { copyRequest } from \"@ethersproject/providers\";\nimport { ContractEventPayload, ContractTransactionResponse, EventLog } from \"./wrappers.js\";\nimport { logger } from \"./logger.js\";\nfunction canEstimate(value) {\n    return (value && typeof (value.estimateGas) === \"function\");\n}\nfunction canCall(value) {\n    return (value && typeof (value.call) === \"function\");\n}\nfunction canSend(value) {\n    return (value && typeof (value.sendTransaction) === \"function\");\n}\nfunction canResolve(value) {\n    return (value && typeof (value.resolveName) === \"function\");\n}\nfunction canQuery(value) {\n    return (value && typeof (value.getLogs) === \"function\");\n}\nfunction canSubscribe(value) {\n    return (value && typeof (value.on) === \"function\" && typeof (value.off) === \"function\");\n}\nfunction concisify(items) {\n    items = Array.from((new Set(items)).values());\n    items.sort();\n    return items;\n}\nclass PreparedTopicFilter {\n    constructor(contract, fragment, args) {\n        _PreparedTopicFilter_filter.set(this, void 0);\n        defineProperties(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner : null;\n        __classPrivateFieldSet(this, _PreparedTopicFilter_filter, (async function () {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })(), \"f\");\n    }\n    getTopicFilter() {\n        return __classPrivateFieldGet(this, _PreparedTopicFilter_filter, \"f\");\n    }\n}\n_PreparedTopicFilter_filter = new WeakMap();\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction _WrappedMethodBase() {\n    return Function;\n}\nfunction getRunner(value, feature) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value[feature]) === \"function\") {\n        return value;\n    }\n    if (value.provider && typeof (value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\nexport async function copyOverrides(arg) {\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(Typed.dereference(arg, \"overrides\"));\n    // Some sanity checking; these are what these methods adds\n    //if ((<any>overrides).to) {\n    if (overrides.to) {\n        logger.throwArgumentError(\"cannot override to\", \"overrides.to\", overrides.to);\n    }\n    else if (overrides.data) {\n        logger.throwArgumentError(\"cannot override data\", \"overrides.data\", overrides.data);\n    }\n    // Resolve any from\n    if (overrides.from) {\n        overrides.from = await resolveAddress(overrides.from);\n    }\n    return overrides;\n}\nexport async function resolveArgs(_runner, inputs, args) {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            if (type === \"address\") {\n                return resolveAddress(value, resolver);\n            }\n            return value;\n        });\n    }));\n}\nclass WrappedMethod extends _WrappedMethodBase() {\n    constructor(contract, key) {\n        super();\n        defineProperties(this, {\n            name: contract.interface.getFunctionName(key),\n            _contract: contract, _key: key\n        });\n        const proxy = new Proxy(this, {\n            // Perform the default operation for this fragment type\n            apply: async (target, thisArg, args) => {\n                const fragment = target.getFragment(...args);\n                if (fragment.constant) {\n                    return await target.staticCall(...args);\n                }\n                return await target.send(...args);\n            },\n        });\n        return proxy;\n    }\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    get fragment() {\n        return this._contract.interface.getFunction(this._key);\n    }\n    getFragment(...args) {\n        return this._contract.interface.getFunction(this._key, args);\n    }\n    async populateTransaction(...args) {\n        const fragment = this.getFragment(...args);\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides = {};\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n        }\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n        const resolvedArgs = await resolveArgs(this._contract.runner, fragment.inputs, args);\n        return Object.assign({}, overrides, await resolveProperties({\n            to: this._contract.getAddress(),\n            data: this._contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n    async staticCall(...args) {\n        const result = await this.staticCallResult(...args);\n        if (result.length === 1) {\n            return result[0];\n        }\n        return result;\n    }\n    async send(...args) {\n        const runner = getRunner(this._contract.runner, \"sendTransaction\");\n        if (!canSend(runner)) {\n            return logger.throwError(\"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"sendTransaction\"\n            });\n        }\n        const tx = await runner.sendTransaction(await this.populateTransaction(...args));\n        const provider = getRunner(this._contract.runner, \"getLogs\");\n        return new ContractTransactionResponse(this._contract.interface, provider, tx);\n    }\n    async estimateGas(...args) {\n        const runner = getRunner(this._contract.runner, \"estimateGas\");\n        if (!canEstimate(runner)) {\n            return logger.throwError(\"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"estimateGas\"\n            });\n        }\n        return await runner.estimateGas(await this.populateTransaction(...args));\n    }\n    async staticCallResult(...args) {\n        const runner = getRunner(this._contract.runner, \"call\");\n        if (!canCall(runner)) {\n            return logger.throwError(\"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"call\"\n            });\n        }\n        const fragment = this.getFragment(...args);\n        const tx = await this.populateTransaction(...args);\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        }\n        catch (error) {\n            if (isCallException(error)) {\n                throw this._contract.interface.makeError(fragment, error.data, tx);\n            }\n            throw error;\n        }\n        return this._contract.interface.decodeFunctionResult(fragment, result);\n    }\n}\nfunction _WrappedEventBase() {\n    return Function;\n}\nclass WrappedEvent extends _WrappedEventBase() {\n    constructor(contract, key) {\n        super();\n        defineProperties(this, {\n            name: contract.interface.getEventName(key),\n            _contract: contract, _key: key\n        });\n        return new Proxy(this, {\n            // Perform the default operation for this fragment type\n            apply: async (target, thisArg, args) => {\n                return new PreparedTopicFilter(contract, target.getFragment(...args), args);\n            },\n        });\n    }\n    // Only works on non-ambiguous keys\n    get fragment() {\n        return this._contract.interface.getEvent(this._key);\n    }\n    getFragment(...args) {\n        return this._contract.interface.getEvent(this._key, args);\n    }\n}\n;\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n    internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n    return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n    return (value && typeof (value) === \"object\" && (\"getTopicFilter\" in value) &&\n        (typeof (value.getTopicFilter) === \"function\") && value.fragment);\n}\nasync function getSubTag(contract, event) {\n    let fragment;\n    let topics;\n    if (Array.isArray(event)) {\n        // Topics; e.g. `[ \"0x1234...89ab\" ]`\n        fragment = contract.interface.getEvent(event[0]);\n        topics = event;\n    }\n    else if (typeof (event) === \"string\") {\n        // Event name (name or signature); `\"Transfer\"`\n        fragment = contract.interface.getEvent(event);\n        topics = [contract.interface.getEventTopic(fragment)];\n    }\n    else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        fragment = event.fragment;\n        topics = await event.getTopicFilter();\n    }\n    else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [contract.interface.getEventTopic(fragment)];\n    }\n    else {\n        console.log(event);\n        throw new Error(\"TODO\");\n    }\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) {\n            return null;\n        }\n        if (Array.isArray(t)) {\n            return concisify(t.map((t) => t.toLowerCase()));\n        }\n        return t.toLowerCase();\n    });\n    const tag = topics.map((t) => {\n        if (t == null) {\n            return \"null\";\n        }\n        if (Array.isArray(t)) {\n            return t.join(\"|\");\n        }\n        return t;\n    }).join(\"&\");\n    return { fragment, tag, topics };\n}\nasync function hasSub(contract, event) {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubTag(contract, event)).tag) || null;\n}\nasync function getSub(contract, event) {\n    // Make sure our runner can actually subscribe to events\n    const runner = getRunner(contract.runner, \"on\");\n    const runnerOff = getRunner(contract.runner, \"off\");\n    if (!runner || runner !== runnerOff || !canSubscribe(runner)) {\n        return logger.throwError(\"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"on\"\n        });\n    }\n    const { fragment, tag, topics } = await getSubTag(contract, event);\n    const { addr, subs } = getInternal(contract);\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address = (addr ? addr : contract);\n        const filter = { address, topics };\n        const listener = (log) => {\n            const payload = new ContractEventPayload(contract, null, event, fragment, log);\n            emit(contract, event, payload.args, payload);\n        };\n        let started = false;\n        const start = () => {\n            if (started) {\n                return;\n            }\n            runner.on(filter, listener);\n            started = true;\n        };\n        const stop = () => {\n            if (!started) {\n                return;\n            }\n            runner.off(filter, listener);\n            started = false;\n        };\n        sub = { tag, listeners: [], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\nasync function _emit(contract, event, args, payload) {\n    await lastEmit;\n    const sub = await hasSub(contract, event);\n    if (!sub) {\n        return false;\n    }\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = args.slice();\n        if (payload) {\n            passArgs.push(new ContractEventPayload(contract, (once ? null : listener), event, payload.fragment, payload.log));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        }\n        catch (error) { }\n        return !once;\n    });\n    return (count > 0);\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function emit(contract, event, args, payload) {\n    try {\n        await lastEmit;\n    }\n    catch (error) { }\n    const resultPromise = _emit(contract, event, args, payload);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\nconst passProperties = [\"then\"];\nexport class BaseContract {\n    constructor(target, abi, runner = null, _deployTx) {\n        const iface = Interface.from(abi);\n        defineProperties(this, { target, runner, interface: iface });\n        Object.defineProperty(this, internal, { value: {} });\n        let addrPromise;\n        let addr = null;\n        let deployTx = null;\n        if (_deployTx) {\n            const provider = getRunner(runner, \"getLogs\");\n            deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n        }\n        let subs = new Map();\n        // Resolve the target as the address\n        if (typeof (target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n            }\n            else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw logger.makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw new Error(\"TODO\");\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        }\n        else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) {\n                    throw new Error(\"TODO\");\n                }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n        // Add the event filters\n        const filters = new Proxy({}, {\n            get: (target, _prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(_prop) >= 0) {\n                    return Reflect.get(target, _prop, receiver);\n                }\n                const prop = String(_prop);\n                const result = this.getEvent(prop);\n                if (result) {\n                    return result;\n                }\n                throw new Error(`unknown contract event: ${prop}`);\n            }\n        });\n        defineProperties(this, { filters });\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, _prop, receiver) => {\n                if (_prop in target || passProperties.indexOf(_prop) >= 0) {\n                    return Reflect.get(target, _prop, receiver);\n                }\n                const prop = String(_prop);\n                const result = target.getFunction(prop);\n                if (result) {\n                    return result;\n                }\n                throw new Error(`unknown contract method: ${prop}`);\n            }\n        });\n    }\n    async getAddress() { return await getInternal(this).addrPromise; }\n    deploymentTransaction() {\n        return getInternal(this).deployTx;\n    }\n    getFunction(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        return (new WrappedMethod(this, key));\n    }\n    getEvent(key) {\n        if (typeof (key) !== \"string\") {\n            key = key.format();\n        }\n        return (new WrappedEvent(this, key));\n    }\n    async queryTransaction(hash) {\n        // Is this useful?\n        throw new Error(\"@TODO\");\n    }\n    async queryFilter(event, fromBlock = 0, toBlock = \"latest\") {\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr : (await addrPromise));\n        const { fragment, topics } = await getSubTag(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n        const runner = getRunner(this.runner, \"getLogs\");\n        if (!canQuery(runner)) {\n            return logger.throwError(\"contract runner does not support querying\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getLogs\"\n            });\n        }\n        return (await runner.getLogs(filter)).map((log) => {\n            return new EventLog(log, this.interface, fragment);\n        });\n    }\n    async on(event, listener) {\n        const sub = await getSub(this, event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n    async once(event, listener) {\n        const sub = await getSub(this, event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n    async emit(event, ...args) {\n        return await emit(this, event, args, null);\n    }\n    async listenerCount(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return 0;\n            }\n            return sub.listeners.length;\n        }\n        const { subs } = getInternal(this);\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n    async listeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return [];\n            }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        const { subs } = getInternal(this);\n        let result = [];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n    async off(event, listener) {\n        const sub = await hasSub(this, event);\n        if (!sub) {\n            return this;\n        }\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) {\n                sub.listeners.splice(index, 1);\n            }\n        }\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        return this;\n    }\n    async removeAllListeners(event) {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) {\n                return this;\n            }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n        else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n        return this;\n    }\n    // Alias for \"on\"\n    async addListener(event, listener) {\n        return await this.on(event, listener);\n    }\n    // Alias for \"off\"\n    async removeListener(event, listener) {\n        return await this.off(event, listener);\n    }\n    static buildClass(abi) {\n        class CustomContract extends BaseContract {\n            constructor(address, runner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract;\n    }\n    ;\n    static from(target, abi, runner = null) {\n        const contract = new this(target, abi, runner);\n        return contract;\n    }\n}\nfunction _ContractBase() {\n    return BaseContract;\n}\nexport class Contract extends _ContractBase() {\n}\n//# sourceMappingURL=contract.js.map","import { getAddress } from \"@ethersproject/address\";\nimport { keccak256 } from \"@ethersproject/crypto\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nexport function computeAddress(key) {\n    const publicKey = SigningKey.computePublicKey(key, false);\n    return getAddress(keccak256(\"0x\" + publicKey.substring(4)).substring(26));\n}\n//# sourceMappingURL=address.js.map","const subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\nfunction unfold(words, sep) {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        }\n        else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        }\n        else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, []);\n}\nexport function decode(data, subs) {\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps = [];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) {\n                clumps.push(\";\");\n            }\n        }\n        else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    if (leftover) {\n        throw new Error(`leftovers: ${JSON.stringify(leftover)}`);\n    }\n    return unfold(unfold(clumps, \";\"), \":\");\n}\nexport function decodeOwl(data) {\n    if (data[0] !== \"0\") {\n        throw TypeError(\"unsupported auwl data\");\n    }\n    return decode(data.substring(1 + 2 * subsChrs.length), data.substring(1, 1 + 2 * subsChrs.length));\n}\n//# sourceMappingURL=decode-owl.js.map","export const version = \"@ethersproject/wordlists@6.0.0-beta.1\";\n//# sourceMappingURL=_version.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","import { defineProperties } from \"@ethersproject/properties\";\nexport class Wordlist {\n    constructor(locale) {\n        defineProperties(this, { locale });\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n}\n//# sourceMappingURL=wordlist.js.map","// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WordlistOwl_instances, _WordlistOwl_data, _WordlistOwl_checksum, _WordlistOwl_words, _WordlistOwl_loadWords;\nimport { id } from \"@ethersproject/hash\";\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { logger } from \"./logger.js\";\nimport { Wordlist } from \"./wordlist.js\";\nexport class WordlistOwl extends Wordlist {\n    constructor(locale, data, checksum) {\n        super(locale);\n        _WordlistOwl_instances.add(this);\n        _WordlistOwl_data.set(this, void 0);\n        _WordlistOwl_checksum.set(this, void 0);\n        _WordlistOwl_words.set(this, void 0);\n        __classPrivateFieldSet(this, _WordlistOwl_data, data, \"f\");\n        __classPrivateFieldSet(this, _WordlistOwl_checksum, checksum, \"f\");\n        __classPrivateFieldSet(this, _WordlistOwl_words, null, \"f\");\n    }\n    get _data() { return __classPrivateFieldGet(this, _WordlistOwl_data, \"f\"); }\n    _decodeWords() {\n        return decodeOwl(__classPrivateFieldGet(this, _WordlistOwl_data, \"f\"));\n    }\n    getWord(index) {\n        const words = __classPrivateFieldGet(this, _WordlistOwl_instances, \"m\", _WordlistOwl_loadWords).call(this);\n        if (index < 0 || index >= words.length) {\n            logger.throwArgumentError(`invalid word index: ${index}`, \"index\", index);\n        }\n        return words[index];\n    }\n    getWordIndex(word) {\n        return __classPrivateFieldGet(this, _WordlistOwl_instances, \"m\", _WordlistOwl_loadWords).call(this).indexOf(word);\n    }\n}\n_WordlistOwl_data = new WeakMap(), _WordlistOwl_checksum = new WeakMap(), _WordlistOwl_words = new WeakMap(), _WordlistOwl_instances = new WeakSet(), _WordlistOwl_loadWords = function _WordlistOwl_loadWords() {\n    if (__classPrivateFieldGet(this, _WordlistOwl_words, \"f\") == null) {\n        const words = this._decodeWords();\n        // Verify the computed list matches the official list\n        const checksum = id(words.join(\"\\n\") + \"\\n\");\n        /* c8 ignore start */\n        if (checksum !== __classPrivateFieldGet(this, _WordlistOwl_checksum, \"f\")) {\n            throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);\n        }\n        /* c8 ignore stop */\n        __classPrivateFieldSet(this, _WordlistOwl_words, words, \"f\");\n    }\n    return __classPrivateFieldGet(this, _WordlistOwl_words, \"f\");\n};\n//# sourceMappingURL=wordlist-owl.js.map","import { WordlistOwl } from \"./wordlist-owl.js\";\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\nexport class LangEn extends WordlistOwl {\n    constructor() { super(\"en\", words, checksum); }\n}\nexport const langEn = new LangEn();\n//# sourceMappingURL=lang-en.js.map","import { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version.js\";\nexport const logger = new Logger(version);\n//# sourceMappingURL=logger.js.map","export const version = \"@ethersproject/wallet@6.0.0-beta.2\";\n//# sourceMappingURL=_version.js.map","import { langEn as en } from \"./lang-en.js\";\nexport const wordlists = Object.freeze({\n    en\n});\n//# sourceMappingURL=wordlists-en.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _WordlistOwlA_accent;\nimport { WordlistOwl } from \"./wordlist-owl.js\";\nimport { decodeOwlA } from \"./decode-owla.js\";\nexport class WordlistOwlA extends WordlistOwl {\n    constructor(locale, data, accent, checksum) {\n        super(locale, data, checksum);\n        _WordlistOwlA_accent.set(this, void 0);\n        __classPrivateFieldSet(this, _WordlistOwlA_accent, accent, \"f\");\n    }\n    get _accent() { return __classPrivateFieldGet(this, _WordlistOwlA_accent, \"f\"); }\n    _decodeWords() {\n        return decodeOwlA(this._data, this._accent);\n    }\n}\n_WordlistOwlA_accent = new WeakMap();\n//# sourceMappingURL=wordlist-owla.js.map","import { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\nexport function decodeOwlA(data, accents) {\n    let words = decodeOwl(data).join(\",\");\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        if (!match) {\n            throw new Error(\"internal error parsing accents\");\n        }\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${match[1]}])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n    return words.split(\",\");\n}\n//# sourceMappingURL=decode-owla.js.map","const Base64 = \")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\";\nexport function decodeBits(width, data) {\n    const maxValue = (1 << width) - 1;\n    const result = [];\n    let accum = 0, bits = 0, flood = 0;\n    for (let i = 0; i < data.length; i++) {\n        // Accumulate 6 bits of data\n        accum = ((accum << 6) | Base64.indexOf(data[i]));\n        bits += 6;\n        // While we have enough for a word...\n        while (bits >= width) {\n            // ...read the word\n            const value = (accum >> (bits - width));\n            accum &= (1 << (bits - width)) - 1;\n            bits -= width;\n            // A value of 0 indicates we exceeded maxValue, it\n            // floods over into the next value\n            if (value === 0) {\n                flood += maxValue;\n            }\n            else {\n                result.push(value + flood);\n                flood = 0;\n            }\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=bit-reader.js.map","import { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { pbkdf2, sha256 } from \"@ethersproject/crypto\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { langEn } from \"@ethersproject/wordlists\";\nimport { logger } from \"./logger.js\";\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return ((1 << bits) - 1) & 0xff;\n}\nfunction mnemonicToEntropy(mnemonic, wordlist = langEn) {\n    logger.assertNormalize(\"NFKD\");\n    if (wordlist == null) {\n        wordlist = langEn;\n    }\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0 || words.length < 12 || words.length > 24) {\n        logger.throwArgumentError(\"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            logger.throwArgumentError(`invalid mnemonic word at index ${i}`, \"mnemonic\", \"[ REDACTED ]\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        logger.throwArgumentError(\"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nfunction entropyToMnemonic(entropy, wordlist = langEn) {\n    if ((entropy.length % 4) || entropy.length < 16 || entropy.length > 32) {\n        logger.throwArgumentError(\"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n    }\n    if (wordlist == null) {\n        wordlist = langEn;\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nconst _guard = {};\nexport class Mnemonic {\n    constructor(guard, entropy, phrase, password, wordlist) {\n        if (password == null) {\n            password = \"\";\n        }\n        if (wordlist == null) {\n            wordlist = langEn;\n        }\n        logger.assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties(this, { phrase, password, wordlist, entropy });\n    }\n    computeSeed() {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, UnicodeNormalizationForm.NFKD);\n        return pbkdf2(toUtf8Bytes(this.phrase, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n    }\n    static fromPhrase(phrase, password, wordlist) {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(logger.getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n    static fromEntropy(_entropy, password, wordlist) {\n        const entropy = logger.getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n    static entropyToPhrase(_entropy, wordlist) {\n        const entropy = logger.getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n    static phraseToEntropy(phrase, wordlist) {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n    static isValidMnemonic(phrase, wordlist) {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        }\n        catch (error) { }\n        return false;\n    }\n}\n//# sourceMappingURL=mnemonic.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseWallet_signingKey;\nimport { getAddress, resolveAddress } from \"@ethersproject/address\";\nimport { hashMessage, TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defineProperties, resolveProperties } from \"@ethersproject/properties\";\nimport { AbstractSigner } from \"@ethersproject/providers\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { computeAddress } from \"./address.js\";\nimport { logger } from \"./logger.js\";\nexport class BaseWallet extends AbstractSigner {\n    constructor(privateKey, provider) {\n        super(provider);\n        _BaseWallet_signingKey.set(this, void 0);\n        __classPrivateFieldSet(this, _BaseWallet_signingKey, privateKey, \"f\");\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties(this, { address });\n    }\n    // Store these in getters to reduce visibility in console.log\n    get signingKey() { return __classPrivateFieldGet(this, _BaseWallet_signingKey, \"f\"); }\n    get privateKey() { return this.signingKey.privateKey; }\n    async getAddress() { return this.address; }\n    connect(provider) {\n        return new BaseWallet(__classPrivateFieldGet(this, _BaseWallet_signingKey, \"f\"), provider);\n    }\n    async signTransaction(_tx) {\n        // Replace any Addressable or ENS name with an address\n        const tx = Object.assign({}, _tx, await resolveProperties({\n            to: (_tx.to ? resolveAddress(_tx.to, this.provider) : undefined),\n            from: (_tx.from ? resolveAddress(_tx.from, this.provider) : undefined)\n        }));\n        if (tx.from != null) {\n            if (getAddress(tx.from) !== this.address) {\n                logger.throwArgumentError(\"transaction from address mismatch\", \"tx.from\", _tx.from);\n            }\n            delete tx.from;\n        }\n        // Build the transaction\n        const btx = Transaction.from(tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n        return btx.serialized;\n    }\n    async signMessage(message) {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n    async signTypedData(domain, types, value) {\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name) => {\n            if (this.provider == null) {\n                return logger.throwError(\"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"resolveName\",\n                    info: { name }\n                });\n            }\n            const address = await this.provider.resolveName(name);\n            if (address == null) {\n                return logger.throwError(\"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                    value: name\n                });\n            }\n            return address;\n        });\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n_BaseWallet_signingKey = new WeakMap();\n//# sourceMappingURL=base-wallet.js.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _a, _HDNodeWallet_fromSeed, _HDNodeWalletManager_root;\nimport { arrayify, concat, dataSlice, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, randomBytes, ripemd160, sha256 } from \"@ethersproject/crypto\";\nimport { decodeBase58, encodeBase58, toBigInt, toHex } from \"@ethersproject/math\";\nimport { defineProperties } from \"@ethersproject/properties\";\nimport { VoidSigner } from \"@ethersproject/providers\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { langEn } from \"@ethersproject/wordlists/lib/lang-en.js\";\nimport { computeAddress } from \"./address.js\";\nimport { logger } from \"./logger.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);\nconst HardenedBit = 0x80000000;\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value, length) {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) {\n        result = \"0\" + result;\n    }\n    return \"0x\" + result;\n}\nfunction encodeBase58Check(_value) {\n    const value = logger.getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([value, check]);\n    return encodeBase58(bytes);\n}\nconst _guard = {};\nfunction ser_I(index, chainCode, publicKey, privateKey) {\n    const data = new Uint8Array(37);\n    if (index & HardenedBit) {\n        if (privateKey == null) {\n            return logger.throwError(\"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"deriveChild\"\n            });\n        }\n        // Data = 0x00 || ser_256(k_par)\n        data.set(arrayify(privateKey), 1);\n    }\n    else {\n        // Data = ser_p(point(k_par))\n        data.set(arrayify(publicKey));\n    }\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) {\n        data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n    }\n    const I = arrayify(computeHmac(\"sha512\", chainCode, data));\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\nfunction derivePath(node, path) {\n    const components = path.split(\"/\");\n    if (components.length === 0 || (components[0] === \"m\" && node.depth !== 0)) {\n        throw new Error(\"invalid path - \" + path);\n    }\n    if (components[0] === \"m\") {\n        components.shift();\n    }\n    let result = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            if (index >= HardenedBit) {\n                throw new Error(\"invalid path index - \" + component);\n            }\n            result = result.deriveChild(HardenedBit + index);\n        }\n        else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            if (index >= HardenedBit) {\n                throw new Error(\"invalid path index - \" + component);\n            }\n            result = result.deriveChild(index);\n        }\n        else {\n            throw new Error(\"invalid path component - \" + component);\n        }\n    }\n    return result;\n}\nexport class HDNodeWallet extends BaseWallet {\n    constructor(guard, signingKey, parentFingerprint, chainCode, path, index, depth, mnemonic, provider) {\n        super(signingKey, provider);\n        logger.assertPrivate(guard, _guard, \"HDNodeWallet\");\n        defineProperties(this, { publicKey: signingKey.compressedPublicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n        defineProperties(this, { mnemonic });\n    }\n    connect(provider) {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([\"0x00\", this.privateKey])\n        ]));\n    }\n    hasPath() { return (this.path != null); }\n    neuter() {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider);\n    }\n    deriveChild(_index) {\n        const index = logger.getNumber(_index, \"index\");\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.mnemonic, this.provider);\n    }\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n    static fromSeed(seed) {\n        return __classPrivateFieldGet(HDNodeWallet, _a, \"m\", _HDNodeWallet_fromSeed).call(HDNodeWallet, seed, null);\n    }\n    static fromPhrase(phrase, password = \"\", path = defaultPath, wordlist = langEn) {\n        if (!path) {\n            path = defaultPath;\n        }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist);\n        return __classPrivateFieldGet(HDNodeWallet, _a, \"m\", _HDNodeWallet_fromSeed).call(HDNodeWallet, mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    static fromMnemonic(mnemonic, path = defaultPath) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return __classPrivateFieldGet(HDNodeWallet, _a, \"m\", _HDNodeWallet_fromSeed).call(HDNodeWallet, mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = arrayify(decodeBase58(extendedKey)); // @TODO: redact\n        if (bytes.length !== 82 || encodeBase58Check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey, parentFingerprint, chainCode, null, index, depth, null);\n            }\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)), parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n    static createRandom(password = \"\", path = defaultPath, wordlist = langEn) {\n        if (!path) {\n            path = defaultPath;\n        }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist);\n        return __classPrivateFieldGet(HDNodeWallet, _a, \"m\", _HDNodeWallet_fromSeed).call(HDNodeWallet, mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n}\n_a = HDNodeWallet, _HDNodeWallet_fromSeed = function _HDNodeWallet_fromSeed(_seed, mnemonic) {\n    const seed = logger.getBytes(_seed, \"seed\");\n    if (seed.length < 16 || seed.length > 64) {\n        throw new Error(\"invalid seed\");\n    }\n    const I = arrayify(computeHmac(\"sha512\", MasterSecret, seed));\n    const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n    return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)), \"m\", 0, 0, mnemonic, null);\n};\nexport class HDNodeVoidWallet extends VoidSigner {\n    constructor(guard, address, publicKey, parentFingerprint, chainCode, path, index, depth, provider) {\n        super(address, provider);\n        logger.assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n        defineProperties(this, { publicKey });\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n    connect(provider) {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n    hasPath() { return (this.path != null); }\n    deriveChild(_index) {\n        const index = logger.getNumber(_index, \"index\");\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) {\n                path += \"'\";\n            }\n        }\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey._addPoints(IL, this.publicKey, true);\n        const address = computeAddress(Ki);\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR), path, index, this.depth + 1, this.provider);\n    }\n    derivePath(path) {\n        return derivePath(this, path);\n    }\n}\nexport class HDNodeWalletManager {\n    constructor(phrase, password = \"\", path = \"m/44'/60'/0'/0\", locale = langEn) {\n        _HDNodeWalletManager_root.set(this, void 0);\n        __classPrivateFieldSet(this, _HDNodeWalletManager_root, HDNodeWallet.fromPhrase(phrase, password, path, locale), \"f\");\n    }\n    getSigner(index = 0) {\n        return __classPrivateFieldGet(this, _HDNodeWalletManager_root, \"f\").deriveChild(index);\n    }\n}\n_HDNodeWalletManager_root = new WeakMap();\nexport function getAccountPath(_index) {\n    const index = logger.getNumber(_index, \"index\");\n    if (index < 0 || index >= HardenedBit) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=hdwallet.js.map","/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AES_key, _AES_Kd, _AES_Ke;\n// Number of rounds by keysize\nconst numberOfRounds = { 16: 10, 24: 12, 32: 14 };\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\nfunction convertToInt32(bytes) {\n    const result = [];\n    for (let i = 0; i < bytes.length; i += 4) {\n        result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] << 8) | bytes[i + 3]);\n    }\n    return result;\n}\nexport class AES {\n    constructor(key) {\n        _AES_key.set(this, void 0);\n        _AES_Kd.set(this, void 0);\n        _AES_Ke.set(this, void 0);\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n        __classPrivateFieldSet(this, _AES_key, new Uint8Array(key), \"f\");\n        const rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n        // encryption round keys\n        __classPrivateFieldSet(this, _AES_Ke, [], \"f\");\n        // decryption round keys\n        __classPrivateFieldSet(this, _AES_Kd, [], \"f\");\n        for (let i = 0; i <= rounds; i++) {\n            __classPrivateFieldGet(this, _AES_Ke, \"f\").push([0, 0, 0, 0]);\n            __classPrivateFieldGet(this, _AES_Kd, \"f\").push([0, 0, 0, 0]);\n        }\n        const roundKeyCount = (rounds + 1) * 4;\n        const KC = this.key.length / 4;\n        // convert the key into ints\n        const tk = convertToInt32(this.key);\n        // copy values into round key arrays\n        let index;\n        for (let i = 0; i < KC; i++) {\n            index = i >> 2;\n            __classPrivateFieldGet(this, _AES_Ke, \"f\")[index][i % 4] = tk[i];\n            __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - index][i % 4] = tk[i];\n        }\n        // key expansion (fips-197 section 5.2)\n        let rconpointer = 0;\n        let t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >> 8) & 0xFF] << 16) ^\n                (S[tt & 0xFF] << 8) ^\n                S[(tt >> 24) & 0xFF] ^\n                (rcon[rconpointer] << 24));\n            rconpointer += 1;\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (let i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            }\n            else {\n                for (let i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n                tk[KC / 2] ^= (S[tt & 0xFF] ^\n                    (S[(tt >> 8) & 0xFF] << 8) ^\n                    (S[(tt >> 16) & 0xFF] << 16) ^\n                    (S[(tt >> 24) & 0xFF] << 24));\n                for (let i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n            // copy values into round key arrays\n            let i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][c] = tk[i];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (let r = 1; r < rounds; r++) {\n            for (let c = 0; c < 4; c++) {\n                tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c];\n                __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                    U2[(tt >> 16) & 0xFF] ^\n                    U3[(tt >> 8) & 0xFF] ^\n                    U4[tt & 0xFF]);\n            }\n        }\n    }\n    get key() { return __classPrivateFieldGet(this, _AES_key, \"f\").slice(); }\n    encrypt(plaintext) {\n        if (plaintext.length != 16) {\n            throw new TypeError('invalid plaintext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Ke, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(plaintext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Ke, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T1[(t[i] >> 24) & 0xff] ^\n                    T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                    T3[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T4[t[(i + 3) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Ke, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Ke, \"f\")[rounds][i];\n            result[4 * i] = (S[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n        }\n        const rounds = __classPrivateFieldGet(this, _AES_Kd, \"f\").length - 1;\n        const a = [0, 0, 0, 0];\n        // convert plaintext to (ints ^ key)\n        let t = convertToInt32(ciphertext);\n        for (let i = 0; i < 4; i++) {\n            t[i] ^= __classPrivateFieldGet(this, _AES_Kd, \"f\")[0][i];\n        }\n        // apply round transforms\n        for (let r = 1; r < rounds; r++) {\n            for (let i = 0; i < 4; i++) {\n                a[i] = (T5[(t[i] >> 24) & 0xff] ^\n                    T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                    T7[(t[(i + 2) % 4] >> 8) & 0xff] ^\n                    T8[t[(i + 1) % 4] & 0xff] ^\n                    __classPrivateFieldGet(this, _AES_Kd, \"f\")[r][i]);\n            }\n            t = a.slice();\n        }\n        // the last round is special\n        const result = new Uint8Array(16);\n        let tt = 0;\n        for (let i = 0; i < 4; i++) {\n            tt = __classPrivateFieldGet(this, _AES_Kd, \"f\")[rounds][i];\n            result[4 * i] = (Si[(t[i] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >> 8) & 0xff] ^ (tt >> 8)) & 0xff;\n            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;\n        }\n        return result;\n    }\n}\n_AES_key = new WeakMap(), _AES_Kd = new WeakMap(), _AES_Ke = new WeakMap();\n//# sourceMappingURL=aes.js.map","import { AES } from \"./aes.js\";\nexport class ModeOfOperation {\n    constructor(name, key, cls) {\n        if (cls && !(this instanceof cls)) {\n            throw new Error(`${name} must be instantiated with \"new\"`);\n        }\n        Object.defineProperties(this, {\n            aes: { enumerable: true, value: new AES(key) },\n            name: { enumerable: true, value: name }\n        });\n    }\n}\n//# sourceMappingURL=mode.js.map","// Cipher Block Chaining\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CBC_iv, _CBC_lastBlock;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CBC extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"ECC\", key, CBC);\n        _CBC_iv.set(this, void 0);\n        _CBC_lastBlock.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CBC_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CBC_lastBlock, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CBC_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext.length);\n        for (let i = 0; i < plaintext.length; i += 16) {\n            for (let j = 0; j < 16; j++) {\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] ^= plaintext[i + j];\n            }\n            __classPrivateFieldSet(this, _CBC_lastBlock, this.aes.encrypt(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\")), \"f\");\n            ciphertext.set(__classPrivateFieldGet(this, _CBC_lastBlock, \"f\"), i);\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        const plaintext = new Uint8Array(ciphertext.length);\n        for (let i = 0; i < ciphertext.length; i += 16) {\n            const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n            for (let j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j];\n                __classPrivateFieldGet(this, _CBC_lastBlock, \"f\")[j] = ciphertext[i + j];\n            }\n        }\n        return plaintext;\n    }\n}\n_CBC_iv = new WeakMap(), _CBC_lastBlock = new WeakMap();\n//# sourceMappingURL=mode-cbc.js.map","// Cipher Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CFB_instances, _CFB_iv, _CFB_shiftRegister, _CFB_shift;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CFB extends ModeOfOperation {\n    constructor(key, iv, segmentSize = 8) {\n        super(\"CFB\", key, CFB);\n        _CFB_instances.add(this);\n        _CFB_iv.set(this, void 0);\n        _CFB_shiftRegister.set(this, void 0);\n        // This library currently only handles byte-aligned segmentSize\n        if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n            throw new TypeError(\"invalid segmentSize\");\n        }\n        Object.defineProperties(this, {\n            segmentSize: { enumerable: true, value: segmentSize }\n        });\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _CFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _CFB_shiftRegister, this.iv, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _CFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        if (8 * plaintext.length % this.segmentSize) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                ciphertext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (8 * ciphertext.length % this.segmentSize) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n        }\n        const segmentSize = this.segmentSize / 8;\n        const plaintext = new Uint8Array(ciphertext);\n        for (let i = 0; i < plaintext.length; i += segmentSize) {\n            const xorSegment = this.aes.encrypt(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\"));\n            for (let j = 0; j < segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n            __classPrivateFieldGet(this, _CFB_instances, \"m\", _CFB_shift).call(this, ciphertext.subarray(i));\n        }\n        return plaintext;\n    }\n}\n_CFB_iv = new WeakMap(), _CFB_shiftRegister = new WeakMap(), _CFB_instances = new WeakSet(), _CFB_shift = function _CFB_shift(data) {\n    const segmentSize = this.segmentSize / 8;\n    // Shift the register\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(__classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").subarray(segmentSize));\n    __classPrivateFieldGet(this, _CFB_shiftRegister, \"f\").set(data.subarray(0, segmentSize), 16 - segmentSize);\n};\n//# sourceMappingURL=mode-cfb.js.map","// Counter Mode\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CTR_remaining, _CTR_remainingIndex, _CTR_counter;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class CTR extends ModeOfOperation {\n    constructor(key, initialValue) {\n        super(\"CTR\", key, CTR);\n        // Remaining bytes for the one-time pad\n        _CTR_remaining.set(this, void 0);\n        _CTR_remainingIndex.set(this, void 0);\n        // The current counter\n        _CTR_counter.set(this, void 0);\n        __classPrivateFieldSet(this, _CTR_counter, new Uint8Array(16), \"f\");\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").fill(0);\n        __classPrivateFieldSet(this, _CTR_remaining, __classPrivateFieldGet(this, _CTR_counter, \"f\"), \"f\"); // This will be discarded immediately\n        __classPrivateFieldSet(this, _CTR_remainingIndex, 16, \"f\");\n        if (initialValue == null) {\n            initialValue = 1;\n        }\n        if (typeof (initialValue) === \"number\") {\n            this.setCounterValue(initialValue);\n        }\n        else {\n            this.setCounterBytes(initialValue);\n        }\n    }\n    get counter() { return new Uint8Array(__classPrivateFieldGet(this, _CTR_counter, \"f\")); }\n    setCounterValue(value) {\n        if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n            throw new TypeError(\"invalid counter initial integer value\");\n        }\n        for (let index = 15; index >= 0; --index) {\n            __classPrivateFieldGet(this, _CTR_counter, \"f\")[index] = value % 256;\n            value = Math.floor(value / 256);\n        }\n    }\n    setCounterBytes(value) {\n        if (value.length !== 16) {\n            throw new TypeError(\"invalid counter initial Uint8Array value length\");\n        }\n        __classPrivateFieldGet(this, _CTR_counter, \"f\").set(value);\n    }\n    increment() {\n        for (let i = 15; i >= 0; i--) {\n            if (__classPrivateFieldGet(this, _CTR_counter, \"f\")[i] === 255) {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i] = 0;\n            }\n            else {\n                __classPrivateFieldGet(this, _CTR_counter, \"f\")[i]++;\n                break;\n            }\n        }\n    }\n    encrypt(plaintext) {\n        var _a, _b;\n        const crypttext = new Uint8Array(plaintext);\n        for (let i = 0; i < crypttext.length; i++) {\n            if (__classPrivateFieldGet(this, _CTR_remainingIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _CTR_remaining, this.aes.encrypt(__classPrivateFieldGet(this, _CTR_counter, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _CTR_remainingIndex, 0, \"f\");\n                this.increment();\n            }\n            crypttext[i] ^= __classPrivateFieldGet(this, _CTR_remaining, \"f\")[__classPrivateFieldSet(this, _CTR_remainingIndex, (_b = __classPrivateFieldGet(this, _CTR_remainingIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return crypttext;\n    }\n    decrypt(ciphertext) {\n        return this.encrypt(ciphertext);\n    }\n}\n_CTR_remaining = new WeakMap(), _CTR_remainingIndex = new WeakMap(), _CTR_counter = new WeakMap();\n//# sourceMappingURL=mode-ctr.js.map","import { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nimport { logger } from \"./logger.js\";\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function spelunk(object, _path) {\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    if (match == null) {\n        return logger.throwArgumentError(\"invalid path\", \"path\", _path);\n    }\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) {\n                break;\n            }\n            cur = cur[parseInt(comp)];\n        }\n        else if (typeof (cur) === \"object\") {\n            let found = null;\n            for (const key in cur) {\n                if (key.toLowerCase() === comp) {\n                    found = cur[key];\n                    break;\n                }\n            }\n            cur = found;\n        }\n        else {\n            cur = null;\n        }\n        if (cur == null) {\n            break;\n        }\n    }\n    if (reqd && cur == null) {\n        logger.throwArgumentError(\"missing required value\", \"path\", path);\n    }\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return parseInt(cur);\n            }\n            else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n        if (type === \"number\") {\n            if (typeof (cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return parseFloat(cur);\n            }\n        }\n        if (type === \"data\") {\n            if (typeof (cur) === \"string\") {\n                return looseArrayify(cur);\n            }\n        }\n        if (type === \"array\" && Array.isArray(cur)) {\n            return cur;\n        }\n        if (type === typeof (cur)) {\n            return cur;\n        }\n        logger.throwArgumentError(`wrong type found for ${type} `, \"path\", path);\n    }\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = logger.getBytes(randomBytes, \"randomBytes\");\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","import { CBC, pkcs7Strip } from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { pbkdf2 } from \"@ethersproject/crypto\";\nimport { id } from \"@ethersproject/hash\";\nimport { logger } from \"./logger.js\";\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\nexport function isCrowdsaleJson(json) {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decryptCrowdsaleJson(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    return { address, privateKey: id(seedHex) };\n}\n//# sourceMappingURL=json-crowdsale.js.map","export function pkcs7Pad(data) {\n    const padder = 16 - (data.length % 16);\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n    return result;\n}\nexport function pkcs7Strip(data) {\n    if (data.length < 16) {\n        throw new TypeError('PKCS#7 invalid length');\n    }\n    const padder = data[data.length - 1];\n    if (padder > 16) {\n        throw new TypeError('PKCS#7 padding byte out of range');\n    }\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n    return new Uint8Array(data.subarray(0, length));\n}\n//# sourceMappingURL=padding.js.map","// Output Feedback\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OFB_iv, _OFB_lastPrecipher, _OFB_lastPrecipherIndex;\nimport { ModeOfOperation } from \"./mode.js\";\nexport class OFB extends ModeOfOperation {\n    constructor(key, iv) {\n        super(\"OFB\", key, OFB);\n        _OFB_iv.set(this, void 0);\n        _OFB_lastPrecipher.set(this, void 0);\n        _OFB_lastPrecipherIndex.set(this, void 0);\n        if (iv) {\n            if (iv.length % 16) {\n                throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n            }\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(iv), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _OFB_iv, new Uint8Array(16), \"f\");\n        }\n        __classPrivateFieldSet(this, _OFB_lastPrecipher, this.iv, \"f\");\n        __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 16, \"f\");\n    }\n    get iv() { return new Uint8Array(__classPrivateFieldGet(this, _OFB_iv, \"f\")); }\n    encrypt(plaintext) {\n        var _a, _b;\n        if (plaintext.length % 16) {\n            throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n        }\n        const ciphertext = new Uint8Array(plaintext);\n        for (let i = 0; i < ciphertext.length; i++) {\n            if (__classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\") === 16) {\n                __classPrivateFieldSet(this, _OFB_lastPrecipher, this.aes.encrypt(__classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")), \"f\");\n                __classPrivateFieldSet(this, _OFB_lastPrecipherIndex, 0, \"f\");\n            }\n            ciphertext[i] ^= __classPrivateFieldGet(this, _OFB_lastPrecipher, \"f\")[__classPrivateFieldSet(this, _OFB_lastPrecipherIndex, (_b = __classPrivateFieldGet(this, _OFB_lastPrecipherIndex, \"f\"), _a = _b++, _b), \"f\"), _a];\n        }\n        return ciphertext;\n    }\n    decrypt(ciphertext) {\n        if (ciphertext.length % 16) {\n            throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n        }\n        return this.encrypt(ciphertext);\n    }\n}\n_OFB_iv = new WeakMap(), _OFB_lastPrecipher = new WeakMap(), _OFB_lastPrecipherIndex = new WeakMap();\n//# sourceMappingURL=mode-ofb.js.map","import { CTR } from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"@ethersproject/crypto\";\nimport { computeAddress } from \"./address.js\";\nimport { logger } from \"./logger.js\";\nimport { getPassword, spelunk, uuidV4, zpad } from \"./utils.js\";\nimport { version } from \"./_version.js\";\nconst defaultPath = \"m/44'/60'/0'/0/0\";\nexport function isKeystoreJson(json) {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version) : 0);\n        if (version === 3) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction decrypt(data, key, ciphertext) {\n    const cipher = spelunk(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk(data, \"crypto.cipherparams.iv:data!\");\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n    return logger.throwError(\"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\nfunction getAccount(data, _key) {\n    const key = logger.getBytes(_key);\n    const ciphertext = spelunk(data, \"crypto.ciphertext:data!\");\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== spelunk(data, \"crypto.mac:string!\").toLowerCase()) {\n        return logger.throwArgumentError(\"incorrect password\", \"password\", \"[ REDACTED ]\");\n    }\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            logger.throwArgumentError(\"keystore address/privateKey mismatch\", \"address\", data.address);\n        }\n    }\n    const account = { address, privateKey };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n        const mnemonicCiphertext = spelunk(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk(data, \"x-ethers.mnemonicCounter:data!\");\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        account.mnemonic = {\n            path: (spelunk(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n    return account;\n}\nfunction getKdfParams(data) {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk(data, \"crypto.kdfparams.p:int!\");\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                return throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                return throwError(\"N\", N);\n            }\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            if (dkLen !== 32) {\n                return throwError(\"dklen\", dkLen);\n            }\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = spelunk(data, \"crypto.kdfparams.salt:data!\");\n            const prf = spelunk(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            if (algorithm !== \"sha256\" && algorithm !== \"sha512\") {\n                return throwError(\"prf\", prf);\n            }\n            const count = spelunk(data, \"crypto.kdfparams.c:int!\");\n            const dkLen = spelunk(data, \"crypto.kdfparams.dklen:int!\");\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptKeystoreJsonSync(json, _password) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n    else if (params.name === \"scrypt\") {\n        const { salt, N, r, p, dkLen } = params;\n        const key = scryptSync(password, salt, N, r, p, dkLen);\n        return getAccount(data, key);\n    }\n    throw new Error(\"unreachable\");\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\nexport async function decryptKeystoreJson(json, _password, progress) {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n    const params = getKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n    else if (params.name === \"scrypt\") {\n        const { salt, N, r, p, dkLen } = params;\n        const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n        return getAccount(data, key);\n    }\n    throw new Error(\"unreachable\");\n}\nexport async function encryptKeystoreJson(account, password, options, progressCallback) {\n    // Check the address matches the private key\n    //if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n    //    throw new Error(\"address/privateKey mismatch\");\n    //}\n    // Check the mnemonic (if any) matches the private key\n    /*\n    if (hasMnemonic(account)) {\n        const mnemonic = account.mnemonic;\n        const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n        if (node.privateKey != account.privateKey) {\n            throw new Error(\"mnemonic mismatch\");\n        }\n    }\n    */\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = logger.getBytes(account.privateKey, \"privateKey\");\n    const passwordBytes = getPassword(password);\n    /*\n        let mnemonic: null | Mnemonic = null;\n        let entropy: Uint8Array = null\n        let path: string = null;\n        let locale: string = null;\n        if (hasMnemonic(account)) {\n            const srcMnemonic = account.mnemonic;\n            entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n            path = srcMnemonic.path || defaultPath;\n            locale = srcMnemonic.locale || \"en\";\n            mnemonic = Mnemonic.from(\n        }\n    */\n    // Check/generate the salt\n    const salt = (options.salt != null) ? logger.getBytes(options.salt, \"options.slat\") : randomBytes(32);\n    // Override initialization vector\n    const iv = (options.iv != null) ? logger.getBytes(options.iv, \"options.iv\") : randomBytes(16);\n    if (iv.length !== 16) {\n        logger.throwArgumentError(\"invalid options.iv\", \"options.iv\", options.iv);\n    }\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? logger.getBytes(options.uuid, \"options.uuid\") : randomBytes(16);\n    if (uuidRandom.length !== 16) {\n        logger.throwArgumentError(\"invalid options.uuid\", \"options.uuid\", options.iv);\n    }\n    if (uuidRandom.length !== 16) {\n        throw new Error(\"invalid uuid\");\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const _key = await scrypt(passwordBytes, salt, N, r, p, 64, progressCallback);\n    const key = arrayify(_key);\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([macPrefix, ciphertext]));\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(salt).substring(2),\n                n: N,\n                dklen: 32,\n                p: p,\n                r: r\n            },\n            mac: mac.substring(2)\n        }\n    };\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client : `ethers/${version}`;\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n        const mnemonicKey = key.slice(32, 64);\n        const entropy = logger.getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n            zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n            zpad(now.getUTCDate(), 2) + \"T\" +\n            zpad(now.getUTCHours(), 2) + \"-\" +\n            zpad(now.getUTCMinutes(), 2) + \"-\" +\n            zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n    return JSON.stringify(data);\n}\n//# sourceMappingURL=json-keystore.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Wallet_mnemonic;\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { randomBytes } from \"@ethersproject/crypto\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeAddress } from \"./address.js\";\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson } from \"./json-crowdsale.js\";\nimport { decryptKeystoreJson, decryptKeystoreJsonSync, isKeystoreJson } from \"./json-keystore.js\";\nimport { logger } from \"./logger.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nfunction tryWallet(value) {\n    try {\n        if (!value || !value.signingKey) {\n            return null;\n        }\n        const key = trySigningKey(value.signingKey);\n        if (key == null || computeAddress(key.publicKey) !== value.address) {\n            return null;\n        }\n        if (value.mnemonic) {\n            const wallet = HDNodeWallet.fromMnemonic(value.mnemonic);\n            if (wallet.privateKey !== key.privateKey) {\n                return null;\n            }\n        }\n        return value;\n    }\n    catch (e) {\n        console.log(e);\n    }\n    return null;\n}\n// Try using value as mnemonic to derive the defaultPath HDodeWallet\nfunction tryMnemonic(value) {\n    try {\n        if (value == null || typeof (value.phrase) !== \"string\" ||\n            typeof (value.password) !== \"string\" ||\n            value.wordlist == null) {\n            return null;\n        }\n        return HDNodeWallet.fromPhrase(value.phrase, value.password, null, value.wordlist);\n    }\n    catch (error) {\n        console.log(error);\n    }\n    return null;\n}\nfunction trySigningKey(value) {\n    try {\n        if (!value || !isHexString(value.privateKey, 32)) {\n            return null;\n        }\n        const key = value.privateKey;\n        if (SigningKey.computePublicKey(key) !== value.publicKey) {\n            return null;\n        }\n        return new SigningKey(key);\n    }\n    catch (e) {\n        console.log(e);\n    }\n    return null;\n}\nfunction stall(duration) {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\nexport class Wallet extends BaseWallet {\n    constructor(key, provider) {\n        let signingKey = null;\n        let mnemonic = null;\n        // A normal private key\n        if (typeof (key) === \"string\") {\n            signingKey = new SigningKey(key);\n        }\n        // Try Wallet\n        if (signingKey == null) {\n            const wallet = tryWallet(key);\n            if (wallet) {\n                signingKey = wallet.signingKey;\n                mnemonic = wallet.mnemonic || null;\n            }\n        }\n        // Try Mnemonic, with the defaultPath wallet\n        if (signingKey == null) {\n            const wallet = tryMnemonic(key);\n            if (wallet) {\n                signingKey = wallet.signingKey;\n                mnemonic = wallet.mnemonic || null;\n            }\n        }\n        // A signing key\n        if (signingKey == null) {\n            signingKey = trySigningKey(key);\n        }\n        if (signingKey == null) {\n            logger.throwArgumentError(\"invalid key\", \"key\", \"[ REDACTED ]\");\n        }\n        super(signingKey, provider);\n        _Wallet_mnemonic.set(this, void 0);\n        __classPrivateFieldSet(this, _Wallet_mnemonic, mnemonic, \"f\");\n    }\n    // Store this in a getter to reduce visibility in console.log\n    get mnemonic() { return __classPrivateFieldGet(this, _Wallet_mnemonic, \"f\"); }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    async encrypt(password, options, progressCallback) {\n        throw new Error(\"TODO\");\n    }\n    encryptSync(password, options) {\n        throw new Error(\"TODO\");\n    }\n    static async fromEncryptedJson(json, password, progress) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n        }\n        else if (isCrowdsaleJson(json)) {\n            if (progress) {\n                progress(0);\n                await stall(0);\n            }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) {\n                progress(1);\n                await stall(0);\n            }\n        }\n        else {\n            return logger.throwArgumentError(\"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n        const wallet = new Wallet(account.privateKey);\n        if (wallet.address !== account.address) {\n            logger.throwArgumentError(\"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n        }\n        // @TODO: mnemonic\n        return wallet;\n    }\n    static fromEncryptedJsonSync(json, password) {\n        let account = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        }\n        else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        }\n        else {\n            return logger.throwArgumentError(\"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n        const wallet = new Wallet(account.privateKey);\n        if (wallet.address !== account.address) {\n            logger.throwArgumentError(\"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n        }\n        // @TODO: mnemonic\n        return wallet;\n    }\n    static createRandom(provider, password, wordlist) {\n        return new Wallet(Mnemonic.fromEntropy(randomBytes(16), password, wordlist), provider);\n    }\n    static fromMnemonic(mnemonic, provider) {\n        return new Wallet(mnemonic, provider);\n    }\n    static fromPhrase(phrase, provider, password = \"\", wordlist) {\n        return new Wallet(Mnemonic.fromPhrase(phrase, password, wordlist), provider);\n    }\n}\n_Wallet_mnemonic = new WeakMap();\n//# sourceMappingURL=wallet.js.map","export const version = \"ethers@6.0.0-beta.3\";\n//# sourceMappingURL=_version.js.map"],"names":["async","resolveProperties","value","keys","Object","Promise","all","map","k","resolve","reduce","accum","v","index","checkType","type","types","split","t","trim","i","length","Error","defineProperties","target","values","defaults","key","fallback","undefined","defineProperty","enumerable","writable","_EventPayload_listener","__classPrivateFieldSet","this","receiver","state","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","EventPayload","constructor","emitter","listener","filter","off","getStore","store","setStore","isFrozen","isError","error","code","isCallException","WeakMap","_Logger_instances","_Logger_assertIntRange","_Logger_getBytes","_Logger_log","LogLevel","LogLevels","debug","default","info","warning","_logLevel","_globalLogger","_normalizeForms","form","normalize","check","String","fromCharCode","push","defineReadOnly","object","name","maxValue","ErrorConstructors","INVALID_ARGUMENT","NUMERIC_FAULT","RangeError","BUFFER_OVERRUN","Logger","version","add","makeError","message","details","JSON","stringify","join","throwError","throwArgumentError","argument","assert","condition","assertArgument","assertIntegerArgument","lower","upper","Number","isInteger","assertSafeUint53","operation","fault","assertNormalize","indexOf","assertPrivate","givenGuard","guard","className","method","assertArgumentCount","count","expectedCount","assertInt53","assertUint53","assertInteger","min","max","getBytes","getBytesCopy","getNumber","BigInt","e","getBigInt","args","DEBUG","INFO","warn","WARNING","static","logLevel","level","toLowerCase","globalLogger","WeakSet","minValue","isNaN","Math","floor","copy","Uint8Array","match","result","offset","parseInt","substring","console","log","apply","logger","_TokenString_instances","_TokenString_offset","_TokenString_tokens","_TokenString_subTokenString","_ParamType_instances","_ParamType_walkAsync","FormatType","setify","items","Set","forEach","freeze","_kwVisib","KwVisib","_kwTypes","KwTypes","_kwModifiers","KwModifiers","Keywords","SimpleTokens","regexWhitespace","RegExp","regexNumber","regexIdentifier","regexType","TokenString","tokens","slice","clone","reset","popKeyword","allowed","top","peek","text","pop","popType","popParen","popParams","link","linkNext","peekKeyword","peekType","_a","toString","token","lex","brackets","commas","cur","depth","linkBack","suffix","allowSingle","included","consumeName","keyword","consumeKeywords","keywords","consumeParams","allowIndexed","ParamType","fromTokens","consumeGas","consumeEoi","from","to","assign","regexArrayType","verifyBasicType","size","_guard","internal","Symbol","for","ParamTypeInternal","baseType","indexed","components","arrayLength","arrayChildren","format","sighash","json","isTuple","c","parse","isArray","comp","full","isIndexable","walk","process","Array","promises","obj","isParamType","arrayMatch","comps","bracket","FragmentType","setValue","childType","param","then","Fragment","inputs","fromString","fromObject","ConstructorFragment","ErrorFragment","EventFragment","FunctionFragment","StructFragment","NamedFragment","super","joinParams","params","p","input","anonymous","event","payable","gas","stateMutability","outputs","function","constant","o","mutability","modifiers","consumeMutability","struct","nibbles","BN_0","toBigInt","_value","toNumber","toHex","_width","width","toArray","hex","BN_1","fromTwos","toTwos","mask","_bits","bits","_FixedNumber_instances","_FixedNumber_value","_FixedNumber_checkFormat","_constructorGuard","NegativeOne","throwFault","zeros","getMultiplier","decimals","formatFixed","_decimals","multiplier","multiplierStr","negative","fraction","parseFixed","whole","wei","FixedFormat","constructorGuard","signed","_multiplier","defaultValue","FixedNumber","_isFixedNumber","addUnsafe","other","a","b","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","isNegative","ONE","toFormat","ceiling","round","factor","bump","BUMP","isZero","toHexString","toUnsafeFloat","parseFloat","fixedFormat","numeric","decimal","fromBytes","Alphabet","Lookup","getAlpha","letter","BN_58","encodeBase58","decodeBase58","names","formatUnits","unit","parseUnits","formatEther","parseEther","ether","isHexString","isBytesLike","BN_8","BN_255","arrayify","data","unshift","_noCopyArrayify","decodeBase64","textData","Buffer","encodeBase64","HexCharacters","hexlify","bytes","quantity","concat","datas","d","dataLength","dataSlice","start","end","buffer","stripZerosLeft","zeroPad","left","fill","zeroPadLeft","zeroPadRight","_Result_instances","_Result_indices","_Result_throwError","_Writer_instances","_Writer_data","_Writer_dataLength","_Writer_writeData","_Reader_instances","_Reader_data","_Reader_offset","_Reader_coerceFunc","_Reader_peekBytes","WordSize","Padding","passProperties","Result","Map","Proxy","prop","item","Reflect","getValue","wrapped","Coder","localName","dynamic","_throwError","Writer","appendWriter","writer","writeBytes","paddingOffset","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","coerce","consumed","subReader","readBytes","loose","readValue","readIndex","alignedLength","ceil","u32","arr","Uint32Array","byteOffset","byteLength","createView","DataView","rotr","word","shift","padStart","nextTick","nodeRequire","module","require","bind","setImmediate","setTimeout","asyncLoop","iters","tick","cb","ts","Date","now","diff","toBytes","str","TextEncoder","encode","utf8ToBytes","assertNumber","n","isSafeInteger","assertHash","hash","create","outputLen","blockLen","Hash","_cloneInto","checkOpts","def","_opts","prototype","wrapConstructor","hashConstructor","hashC","update","digest","tmp","HMAC","_key","finished","destroyed","iHash","pad","oHash","buf","digestInto","out","destroy","getPrototypeOf","hmac","pbkdf2","password","salt","opts","dkLen","DK","PRF","PRFSalt","_password","_salt","asyncTick","pbkdf2Init","prfW","view","u","ti","pos","Ti","subarray","setInt32","ui","pbkdf2Output","SHA2","padOffset","isLE","len","take","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","res","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","getUint32","W15","W2","s0","s1","T1","T2","sha256","U32_MASK64","fromBig","le","lst","Ah","Al","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","SHA512_Kh","SHA512_Kl","u64.split","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","u64.rotrSH","u64.shrSH","s0l","u64.rotrSL","u64.shrSL","W2h","W2l","s1h","u64.rotrBH","s1l","u64.rotrBL","SUMl","u64.add4L","SUMh","u64.add4H","sigma1h","sigma1l","CHIh","T1ll","u64.add5L","T1h","u64.add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","u64.add","All","u64.add3L","u64.add3H","SHA512_256","SHA384","sha512","anyGlobal","self","window","global","getGlobal","crypto","msCrypto","createHash","algo","locked","_computeHmac","algorithm","_algo","createHmac","__computeHmac","computeHmac","_data","_","lock","register","func","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","R","x","y","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","u64.rotlBH","u64.rotlSH","rotlL","u64.rotlBL","u64.rotlSL","Keccak","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","finish","writeInto","xofInto","xof","gen","keccak_256","genShake","hashCons","msg","wrapConstructorWithOpts","_keccak256","__keccak256","keccak256","Rho","Id","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","z","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","_ripemd160","noble_ripemd160","__ripemd160","_pbkdf2","iterations","keylen","pbkdf2Sync","__pbkdf2","_randomBytes","getRandomValues","crypto_random","__randomBytes","randomBytes","XorAndSalsa","prev","pi","ii","oi","y00","y01","y02","y03","y04","y05","y06","y07","y08","y09","y10","y11","y12","y13","y14","y15","x00","x01","x02","x03","x04","x05","x06","x07","x08","x09","x10","x11","x12","x13","x14","x15","BlockMix","r","head","tail","scryptInit","maxmem","N","onProgress","blockSize","blockSize32","memUsed","B32","V","blockMixCb","totalBlockMix","callbackPer","blockMixCnt","scryptOutput","lockedSync","lockedAsync","_scryptAsync","passwd","_nobleAsync","_scryptSync","_nobleSync","__scryptAsync","__scryptSync","scrypt","_passwd","progress","scryptSync","_sha256","_sha512","__sha256","__sha512","locked256","locked512","BN_36","getChecksumAddress","address","chars","expanded","charCodeAt","hashed","toUpperCase","ibanLookup","ibanChecksum","block","checksum","Base36","getAddress","fromBase36","getIcapAddress","base36","arrayifyInteger","_encode","payload","child","encodeRlp","hexlifyByte","unarrayifyInteger","_decodeChildren","childOffset","decoded","_decode","checkOffset","lengthLength","decodeRlp","getCreateAddress","tx","nonceHex","nonce","getCreate2Address","_from","_initCodeHash","initCodeHash","isAddressable","isAddress","resolveAddress","resolver","resolveName","_Typed_options","_gaurd","Typed","_typedSymbol","gaurd","options","isBigInt","isData","isString","tupleName","isTyped","AddressCoder","dereference","decode","reader","AnonymousCoder","coder","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","baseOffset","unpack","baseReader","offsetReader","fromItems","ArrayCoder","defaultChild","BooleanCoder","DynamicBytesCoder","BytesCoder","FixedBytesCoder","Empty","NullCoder","BN_MAX_UINT256","NumberCoder","maxUintValue","bounds","UnicodeNormalizationForm","Utf8ErrorReason","ignoreFunc","reason","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","OVERRUN","exports","Utf8ErrorFuncs","ignore","replace","OVERLONG","getUtf8CodePoints","_bytes","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","current","c2","pair","escapeChar","_toEscapedUtf8String","codePoint","_toUtf8String","codePoints","toUtf8String","toUtf8CodePoints","formatBytes32String","parseBytes32String","createTable","_func","lo","createRangeTable","hi","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","codesTableB2","codepoint","_nameprepTableB2","NFKC","StringCoder","TupleCoder","uniqueNames","_AbiCoder_instances","_AbiCoder_getCoder","paramTypeBytes","paramTypeNumber","defaultAbiCoder","getDefaultValue","id","Zeros","Partition","isValidName","namehash","partition","dnsEncode","messagePrefix","hashMessage","_TypedDataEncoder_instances","_TypedDataEncoder_types","_TypedDataEncoder_fullTypes","_TypedDataEncoder_encoderCache","_TypedDataEncoder_getEncoder","padding","BN__1","hexTrue","hexFalse","domainFieldTypes","chainId","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","hexPadRight","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","primaryTypes","primaryType","checkCircular","found","subtype","delete","st","sort","getEncoder","encoder","encodeData","hashStruct","_visit","callback","visit","domain","domainFields","EIP712Domain","hashDomain","ensCache","domainValues","domainTypes","typesWithDomain","subEncoder","encodedType","_Interface_instances","_Interface_errors","_Interface_events","_Interface_functions","_Interface_abiCoder","_Interface_getFunction","_Interface_getEvent","LogDescription","fragment","topic","signature","TransactionDescription","selector","ErrorDescription","Indexed","_isIndexed","PanicReasons","BuiltinErrors","Interface","fragments","abi","getAbiCoder","bucket","deploy","getFunctionName","getFunction","getEventName","getEvent","getError","getSelector","matching","getEventTopic","_decodeParams","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","builtin","transaction","encodeFunctionResult","functionFragment","encodeFilterTopics","eventFragment","topics","encodeTopic","encodeEventLog","dataTypes","dataValues","decodeEventLog","eventTopic","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","parseTransaction","parseLog","parseError","hexData","forceUnique","lastValue","valueLength","allowOptions","splice","lastArg","matchStr","m","_FetchResponse_props","_FetchResponse_error","FetchResponse","statusCode","statusMessage","headers","body","request","bodyText","response","bodyJson","iterator","next","done","makeServerError","throwThrottleError","stall","throttle","getHeader","hasBody","ok","assertOk","getUrl","req","timeout","protocol","url","credentials","allowInsecureAuthentication","init","Headers","resp","fetch","arrayBuffer","status","statusText","_FetchRequest_props","FetchRequest","allowInsecure","gzip","bodyType","allowGzip","setHeader","clearHeaders","setCredentials","username","redirect","location","delay","duration","getTime","lockGateways","fetchData","connection","conn","attempts","throttleLimit","slotInterval","throttleSlotInterval","retryFunc","throttleRetry","preflightRequest","processResponse","t0","retryAfter","trunc","random","pow","setGateway","gateway","setIpfsGateway","setArGateway","_EnsResolver_supports2544","_EnsResolver_getResolver","HashZero","parseBytes","parseString","numPad","padded","bytesPad","encodeBytes","byteCount","getIpfsLink","MulticoinProviderPlugin","validate","proivder","supportsCoinType","coinType","matcherIpfs","matchers","EnsResolver","provider","catch","parameters","addrData","enableCcipRead","supportsWildcard","_fetch","getNetwork","formatter","callAddress","coinPlugin","plugin","plugins","encodeAddress","keyBytes","calldata","hexBytes","ipfs","scheme","swarm","_getAvatar","linkage","avatar","getText","owner","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","currentName","network","ensPlugin","getPlugin","_Signature_props","BN_2","BN_27","BN_28","BN_35","Zero","Signature","networkV","legacyChainId","getChainId","yParity","yParityAndS","compactSerialized","serialized","toJSON","_type","bv","_v","sig","getNormalizedV","_3n","_8n","POW_2_256","CURVE","P","Gx","Gy","beta","weistrass","x2","mod","x3","USE_ENDOMORPHISM","JacobianPoint","Point","points","toInv","nums","scratch","inverted","invert","acc","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","equals","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","X3","Y3","Z3","ZERO","HH","HHH","subtract","multiplyUnsafe","scalar","normalizeScalar","P0","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","base","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","windowSize","maxNumber","shiftBy","wbits","pr","cached","abs","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","_setWindowSize","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","recovery","delta","truncateHash","fromDER","fromCompact","normalizeSignature","prefix","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","hexToBytes","toHexX","toRawX","aP","bQ","sum","sliceDER","parseDERInt","bytesToHex","isUint8a","hexToNumber","sBytes","rBytesLeft","parseDERSignature","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","concatBytes","arrays","every","hexes","uint8a","array","hexByte","byte","power","number","modulo","divNearest","POW_2_128","a1","b1","a2","c1","HmacDrbg","counter","utils","hmacSha256","hmacSync","hmacSha256Sync","incr","seed","reseedSync","generateSync","kmdToSig","kBytes","q","isPub","getSharedSecret","privateA","publicB","publicKey","bits2int","bits2octets","z1","z2","int2octets","signSync","privKey","extraEntropy","seedArgs","initSigArgs","drbg","recSig","canonical","der","recovered","finalizeSig","node","web","isValidPrivateKey","hashToPrivateKey","numTo32b","bytesLength","randomPrivateKey","subtle","messages","ckey","importKey","sign","sha256Sync","precompute","_SigningKey_privateKey","SigningKey","computePublicKey","compressedPublicKey","sigDer","recid","secp256k1.signSync","secp256k1.Signature","computeShardSecret","pubKey","secp256k1.getSharedSecret","compressed","fromPrivateKey","secp256k1.getPublicKey","pub","secp256k1.Point","fromSignature","secp256k1.recoverPublicKey","p0","p1","pub0","pub1","accessSetify","storageKeys","storageKey","accessListify","localeCompare","_Transaction_props","formatNumber","formatAccessList","_serializeLegacy","gasPrice","gasLimit","legacy","getChainIdV","_serializeEip1559","maxPriorityFeePerGas","maxFeePerGas","accessList","_serializeEip2930","Transaction","typeName","unsignedHash","unsignedSerialized","fromPublicKey","isSigned","inferTypes","hasGasPrice","hasFee","hasAccessList","_parseEip1559","_Block_transactions","_TransactionReceipt_logs","toJson","FeeData","Block","dummyProvider","transactions","timestamp","parentHash","difficulty","gasUsed","miner","extraData","baseFeePerGas","date","getTransaction","isMined","isLondon","orphanedEvent","orphan","Log","transactionHash","blockHash","blockNumber","removed","transactionIndex","getBlock","getTransactionReceipt","removedEvent","TransactionReceipt","logs","contractAddress","logsBloom","cumulativeGasUsed","effectiveGasPrice","byzantium","root","fee","getBlockNumber","createRemovedTransactionFilter","reorderedEvent","createReorderedTransactionFilter","TransactionResponse","confirms","waitForTransaction","isLegacy","isBerlin","fail","blockTag","position","signedTx","blockHashOrBlockTag","_Formatter_format","_Formatter_baseBlock","Formatter","bigNumber","uint256","arrayOf","fromBlock","allowNull","toBlock","transactionRequest","transactionResponse","blockWithTransactions","fromTransaction","boolean","receipt","filterLog","allowFalsish","ifFalse","ifNull","_hexstring","dataOrLength","altNames","srcKey","altKey","nv","storageSlot","NetworkPlugin","GasCostPlugin","effectiveBlock","costs","props","nullish","EnsPlugin","targetNetwork","MaxPriorityFeePlugin","priorityFee","_Network_props","Networks","defaultFormatter","Network","_chainId","attachPlugin","getPlugins","basename","computeIntrinsicGas","txBase","txCreate","txDataZero","txDataNonzero","txAccessListAddress","txAccessListStorageKey","networkFunc","custom","ensAddress","ensNetwork","nameOrChainId","existing","_PollingBlockSubscriber_instances","_PollingBlockSubscriber_provider","_PollingBlockSubscriber_poller","_PollingBlockSubscriber_interval","_PollingBlockSubscriber_blockNumber","_PollingBlockSubscriber_poll","_OnBlockSubscriber_provider","_OnBlockSubscriber_poll","_PollingOrphanSubscriber_filter","_PollingTransactionSubscriber_hash","_PollingEventSubscriber_instances","_PollingEventSubscriber_provider","_PollingEventSubscriber_filter","_PollingEventSubscriber_poller","_PollingEventSubscriber_blockNumber","_PollingEventSubscriber_poll","PollingBlockSubscriber","pollingInterval","_setTimeout","stop","_clearTimeout","pause","dropWhilePaused","resume","emit","OnBlockSubscriber","_poll","on","PollingOrphanSubscriber","PollingTransactionSubscriber","PollingEventSubscriber","getLogs","_AbstractProvider_instances","_AbstractProvider_subs","_AbstractProvider_plugins","_AbstractProvider_pausedState","_AbstractProvider_networkPromise","_AbstractProvider_anyNetwork","_AbstractProvider_performCache","_AbstractProvider_nextTimer","_AbstractProvider_timers","_AbstractProvider_disableCcipRead","_AbstractProvider_perform","_AbstractProvider_call","_AbstractProvider_getBlock","_AbstractProvider_hasSub","_AbstractProvider_getSub","getTag","UnmanagedSubscriber","concisify","getSubscription","_event","tag","addresses","addAddress","AbstractProvider","_network","disableCcipRead","urls","sender","errorMessages","href","errorMessage","_wrapTransaction","_detectNetwork","detectNetwork","networkPromise","expected","actual","priorityFeePlugin","getPriorityFee","_request","_tx","_getTransaction","_getBlockTag","_address","_blockTag","_position","lookup","addBlockTag","_filter","_getFilter","_getProvider","fromName","getResolver","getAvatar","reject","timer","clearTimeout","once","timerId","_b","paused","time","_forEachSubscriber","sub","subscriber","_getSubscriber","_recoverSubscriber","oldSub","newSub","started","listeners","total","removeAllListeners","_parseString","_parseBytes","perform","_perform","attempt","txSender","ccipArgs","urlsOffset","urlsLength","urlsData","parseOffchainLookup","ccipResult","ccipReadFetch","includeTransactions","emitArgs","subscription","addressableMap","nameMap","empty","_AbstractSigner_instances","_AbstractSigner_checkProvider","_AbstractSigner_fromify","_VoidSigner_instances","_VoidSigner_throwUnsupported","_WrappedSigner_signer","AbstractSigner","getBalanceOf","getTransactionCountOf","estimateGas","getTransactionCount","txObj","populateTransaction","broadcastTransaction","signTransaction","actions","VoidSigner","connect","WrappedSigner","signer","sendTransaction","signMessage","signTypedData","shown","showThrottleMessage","service","_FilterIdSubscriber_instances","_FilterIdSubscriber_provider","_FilterIdSubscriber_filterIdPromise","_FilterIdSubscriber_poller","_FilterIdSubscriber_network","_FilterIdSubscriber_poll","_FilterIdSubscriber_teardown","_FilterIdEventSubscriber_event","FilterIdSubscriber","_subscribe","_emitResults","_recover","filterId","send","filterIdPromise","FilterIdEventSubscriber","results","FilterIdPendingSubscriber","_JsonRpcApiProvider_nextId","_JsonRpcApiProvider_options","_JsonRpcProvider_connect","_JsonRpcProvider_pollingInterval","Primitive","deepCopy","getLowerCase","defaultOptions","polling","batchMaxSize","batchStallTime","JsonRpcSigner","getFeeData","_to","hexTx","getRpcTransaction","sendUncheckedTransaction","timeouts","checkTx","_message","populated","resolveNames","getPayload","JsonRpcApiProvider","_getOptions","_setOptions","prepareRequest","jsonrpc","accounts","account","dstKey","getRpcRequest","signedTransaction","getRpcError","spelunkData","_spelunkMessage","spelunkMessage","feeData","JsonRpcProvider","isPollable","StaticJsonRpcProvider","defaultApiKey","AnkrProvider","apiKey","getConnection","getHost","isCommunityResource","AlchemyProvider","CloudflareProvider","EtherscanPluginId","EtherscanPlugin","baseUrl","communityApiKey","EtherscanProvider","getBaseUrl","query","getPostUrl","getPostData","apikey","post","_getTransactionPostData","maxFeePerGs","_checkError","action","txhash","postData","ethusd","defaultProjectId","InfuraProvider","projectId","projectSecret","defaultAppIds","homestead","ropsten","rinkeby","goerli","normalizeApiKey","_appId","applicationSecretKey","loadBalancer","community","applicationId","PocketProvider","_secretKey","_loadBalancer","_FallbackProvider_instances","_FallbackProvider_configs","_FallbackProvider_height","_FallbackProvider_initialSyncPromise","_FallbackProvider_getNextConfig","_FallbackProvider_addRunner","_FallbackProvider_initialSync","_FallbackProvider_checkQuorum","_FallbackProvider_waitForQuorum","defaultConfig","stallTimeout","priority","weight","defaultState","requests","lateResponses","errorResponses","outOfSync","unsupportedEvents","rollingDuration","score","_updateNumber","_totalTime","checkQuorum","quorum","tally","normal","bestResult","bestWeight","getMedian","mid","FallbackProvider","providers","eventQuorum","eventWorkers","providerConfigs","running","runner","configs","allConfigs","shuffle","config","didBump","staller","dt","initialSync","waitForSync","height","mode","getFuzzyMode","interesting","newRunners","race","_WebSocket","WebSocket","_SocketSubscriber_provider","_SocketSubscriber_filter","_SocketSubscriber_filterId","_SocketSubscriber_paused","_SocketSubscriber_emitPromise","_SocketEventSubscriber_logFilter","_SocketEventSubscriber_formatter","_SocketProvider_callbacks","_SocketProvider_ready","_SocketProvider_subs","_SocketProvider_pending","SocketSubscriber","_register","_handleMessage","emitPromise","_emit","SocketBlockSubscriber","SocketPendingSubscriber","SocketEventSubscriber","logFilter","SocketProvider","pending","promise","_write","_WebSocketProvider_websocket","WebSocketProvider","websocket","onopen","_start","onmessage","_processMessage","getDefaultProvider","alchemy","ankr","cloudflare","etherscan","infura","pocket","secretKey","appId","registerEth","injectCommonNetworks","_Network","IpcSocketProvider","_ContractTransactionReceipt_interface","_ContractTransactionResponse_interface","EventLog","iface","interface","eventName","eventSignature","ContractTransactionReceipt","ContractTransactionResponse","wait","ContractEventPayload","contract","_log","_PreparedTopicFilter_filter","canResolve","PreparedTopicFilter","getRunner","resolvedArgs","walkAsync","getTopicFilter","feature","copyOverrides","arg","overrides","bigIntKeys","numberKeys","enableCcipReadEnabled","customData","copyRequest","WrappedMethod","Function","_WrappedMethodBase","_contract","thisArg","getFragment","staticCall","_runner","resolveArgs","staticCallResult","WrappedEvent","_WrappedEventBase","internalValues","getInternal","getSubTag","hasSub","subs","getSub","runnerOff","lastEmit","resultPromise","passArgs","BaseContract","_deployTx","addrPromise","deployTx","filters","_prop","deploymentTransaction","Contract","_ContractBase","computeAddress","subsChrs","Word","unfold","words","sep","initial","decodeOwl","clumps","leftover","semi","Wordlist","locale","mnemonic","_WordlistOwl_instances","_WordlistOwl_data","_WordlistOwl_checksum","_WordlistOwl_words","_WordlistOwl_loadWords","WordlistOwl","_decodeWords","getWord","getWordIndex","langEn","wordlists","en","_WordlistOwlA_accent","WordlistOwlA","accent","_accent","accents","posOffset","positions","flood","decodeBits","charCode","regex","decodeOwlA","getUpperMask","mnemonicToEntropy","wordlist","entropy","bit","entropyBits","checksumMask","entropyToMnemonic","indices","remainingBits","checksumBits","Mnemonic","phrase","computeSeed","NFKD","_entropy","_BaseWallet_signingKey","BaseWallet","signingKey","btx","_HDNodeWallet_fromSeed","_HDNodeWalletManager_root","defaultPath","MasterSecret","HardenedBit","zpad","encodeBase58Check","ser_I","chainCode","I","IL","IR","derivePath","path","component","deriveChild","HDNodeWallet","parentFingerprint","fingerprint","extendedKey","hasPath","neuter","HDNodeVoidWallet","_index","ki","fromPhrase","fromEntropy","_seed","Ki","_addPoints","HDNodeWalletManager","getSigner","getAccountPath","_AES_key","_AES_Kd","_AES_Ke","numberOfRounds","rcon","S","Si","T3","T4","T5","T6","T7","T8","U3","U4","convertToInt32","AES","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperation","cls","aes","_CBC_iv","_CBC_lastBlock","CBC","iv","_CTR_remaining","_CTR_remainingIndex","_CTR_counter","CTR","initialValue","setCounterValue","setCounterBytes","MAX_SAFE_INTEGER","increment","crypttext","looseArrayify","hexString","getPassword","spelunk","_path","reqd","isCrowdsaleJson","encseed","decryptCrowdsaleJson","encryptedSeed","padder","pkcs7Strip","seedHex","isKeystoreJson","getAccount","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicAesCtr","getKdfParams","kdf","prf","_Wallet_mnemonic","trySigningKey","Wallet","wallet","fromMnemonic","tryWallet","tryMnemonic","progressCallback","encryptSync","decryptKeystoreJson","decryptKeystoreJsonSync"],"mappings":"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WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAC1/FC,GAAK,CAAC,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,EAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UA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"}